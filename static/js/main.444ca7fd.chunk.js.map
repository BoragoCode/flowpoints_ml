{"version":3,"sources":["sidebar/SidebarHead.js","sidebar/FrontHelpers.js","sidebar/MiscTab.js","sidebar/CodeTab.js","sidebar/FlowpointTab.js","sidebar/SidebarContents.js","sidebar/TabContainer.js","sidebar/Sidebar.js","MainButtons.js","parser/FlowOrder.js","parser/PytorchParser.js","parser/Parser.js","parser/TensorflowParser.js","libraries/base_library.js","libraries/pytorch_library.js","libraries/tensorflow_library.js","libraries/pytorch_autoparams.js","LibraryParser.js","DataBaseHandler.js","Cryptographer.js","PasswordDialog.js","HelpDialog.js","App.js","MainLibrary.js","serviceWorker.js","index.js"],"names":["SidebarHead","props","react_default","a","createElement","Typography_default","href","gutterBottom","variant","component","style","padding","index_es","color","underline","position","right","top","IconButton_default","target","index_esm","TextFieldContainer","label","value","placeholder","type","rows","margin","multiline","onChange","e","SelectContainer","FormControl_default","htmlFor","inputProps","name","id","options","map","opt","Autosuggest","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","initmsg","open","arrow_idx","wrapperRef","handleClickOutside","bind","assertThisInitialized","inherits","createClass","key","document","addEventListener","removeEventListener","contains","setState","_this2","opt_keys","idx","keys","chips","val","push","fontSize","height","marginLeft","backgroundColor","toLowerCase","includes","selected","onClick","class","length","disabled","width","paddingTop","marginTop","onKeyDown","keyCode","Math","max","min","ref","node","maxHeight","overflow","React","Component","SwitchContainer","clickable","marginBottom","themes","variants","htmlToImage","require","NotesSection","FrontHelpers_TextFieldContainer","environment","notes","refresh","updateEnvironment","EnvironmentSection","modelname","FrontHelpers_SelectContainer","library","libraryFetchers","updateAvailableLayers","FrontHelpers_SwitchContainer","batch_first","include_training","CustomizeViewSection","visual","theme","paddingRight","paddingBottom","updateVisual","tmp","autoparams","showShape","prepOutputShapes","diagramRef","toPng","then","dataUrl","Image","src","link","download","click","MiscTab","MiscTab_EnvironmentSection","MiscTab_CustomizeViewSection","MiscTab_NotesSection","github","hljs","background","CodeTab","codetheme","darkTheme","atelierForestDark","default_highlight","language","showLineNumbers","code","fieldChanger","updateFlowpoints","flowpoints","settings","content","parameters","fieldChanger_base","TransformsSection","point","bools","ints","tuples","contiguous","reshape_ndims","new_dims","Array","from","parseInt","reshape_dims","new_value","ParametersSection","fields","int","float","select","tuple","bool","string","unknown","base_ref","p_key","parameter","istuple","n_dims","round","Infinity","dims","dimensions","ButtonContainer","title","tooltip","placement","aria-label","children","SettingsSection","FrontHelpers_Autosuggest","availableLayers","getEmptyFlowpointContent","FlowpointTab_ButtonContainer","deleteSelected","Delete_default","is_output","concat_inputs","concat_dim","FlowpointTab","display","verticalAlign","textAlign","show_param_section","FlowpointTab_SettingsSection","FlowpointTab_ParametersSection","FlowpointTab_TransformsSection","SidebarContents","tab","MiscTab_MiscTab","updateSettings","notification","CodeTab_CodeTab","FlowpointTab_FlowpointTab","TabContainer","undefined","tabs","indexOf","classes","ceil","className","root","Tabs_default","onSelectTab","textColor","tabsRoot","indicator","tabsIndicator","scrollButtons","Tab_default","disableRipple","tabRoot","tabSelected","withStyles","flexGrow","borderBottom","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","unit","fontFamily","join","&:hover","opacity","&$tabSelected","&:focus","darkMuiTheme","createMuiTheme","palette","useNextVariants","lightMuiTheme","Sidebar","styles","Drawer_default","anchor","drawerOpen","maxWidth","drawerWidth","SidebarHead_SidebarHead","sidebar_TabContainer","SidebarContents_SidebarContents","disableTriggerFocus","disableFocusListener","zIndex","boxShadow","MainButtons","bottom","left","transition","MainButtons_ButtonContainer","addFlowpoint","Add_default","copyCode","FileCopy_default","createLink","Link_default","showHideHelp","Help_default","showHide","Menu_default","getPointName","p","replace","dent","indent","n","FormatInitParams","indentation","max_l","param","i","substring","FormatParamInputs","input_keys","isDownStream","dummies","target_key","test_key","r_key","downStreamTested","recIsDownStream","found_downstream","outputs","out_key","recGetOrder","order","dummy","ordered","ready","inputs","isReady","sort","getStateNames","states","last_user","max_index","getLastUser","FlowOrder","inps","getInputs","is_recurrent","getDummyLibrary","init_states","outs","getStateName","getOutputTargetName","code_parsers","pytorch","got_hidden_states","extras","gothidden","modelID","state_msg","prefix","torchvision","reference","Constructor","formated_inputs","step_lib","step_msg","inp_key","dim","sn1","sn2","reshape_msg","step","slice","Forward","hidden","ResetHidden","pointcode","SaveLoad","Fit","tensorflow","current_point_name","current_point_key","rawparams","raw_p_key","concatname","addname","getBaseLibrary","AbstractRNNCell","Activation","ActivityRegularization","AdaptiveAvgPool1d","AdaptiveAvgPool2d","AdaptiveAvgPool3d","AdaptiveLogSoftmaxWithLoss","AdaptiveMaxPool1d","AdaptiveMaxPool2d","AdaptiveMaxPool3d","Add","AlphaDropout","Average","AveragePooling1D","AveragePooling2D","AveragePooling3D","AvgPool1d","AvgPool2d","AvgPool3d","BatchNorm1d","BatchNorm2d","BatchNorm3d","BatchNormalization","Bidirectional","Bilinear","CELU","Concatenate","ConstantPad1d","ConstantPad2d","ConstantPad3d","Conv1d","Conv2d","Conv3d","ConvLSTM2D","ConvTranspose1d","ConvTranspose2d","ConvTranspose3d","Cropping1D","Cropping2D","Cropping3D","Dense","DenseFeatures","DepthwiseConv2D","Dot","Dropout","Dropout2d","Dropout3d","ELU","Embedding","EmbeddingBag","Flatten","Fold","FractionalMaxPool2d","GRU","GRUCell","GaussianDropout","GaussianNoise","GlobalAveragePooling1D","GlobalAveragePooling2D","GlobalAveragePooling3D","GlobalMaxPool1D","GlobalMaxPool2D","GlobalMaxPool3D","GroupNorm","Hardshrink","Hardtanh","Identity","InputLayer","InputSpec","InstanceNorm1d","InstanceNorm2d","InstanceNorm3d","LPPool1d","LPPool2d","LSTM","LSTMCell","Lambda","Layer","LayerNorm","LeakyReLU","Linear","LinearModel","LocalResponseNorm","LocallyConnected1D","LocallyConnected2D","LogSigmoid","LogSoftmax","Masking","MaxPool1d","MaxPool2d","MaxPool3d","MaxUnpool1d","MaxUnpool2d","MaxUnpool3d","Maximum","Mean","Minimum","MultiheadAttention","Multiply","PReLU","Permute","RNN","RNNCell","RReLU","ReLU","ReLU6","ReflectionPad1d","ReflectionPad2d","RepeatVector","ReplicationPad1d","ReplicationPad2d","ReplicationPad3d","Reshape","SELU","SeparableConv1D","SeparableConv2D","Sigmoid","SimpleRNN","SimpleRNNCell","Softmax","Softmax2d","Softmin","Softplus","Softshrink","Softsign","SpatialDropout1D","SpatialDropout2D","SpatialDropout3D","StackedRNNCells","Subtract","SyncBatchNorm","Tanh","Tanhshrink","Threshold","ThresholdedReLU","TimeDistributed","Unfold","UpSampling1D","UpSampling2D","UpSampling3D","Wrapper","ZeroPad2d","ZeroPadding1D","ZeroPadding2D","ZeroPadding3D","ResNet18","ResNet34","ResNet50","ResNet101","ResNet152","VGG11","VGG13","VGG16","VGG19","AlexNet","SqueezeNet1_0","SqueezeNet1_1","DenseNet121","DenseNet169","DenseNet161","DenseNet201","InceptionV3","GoogLeNet","ShuffleNetV2_x0_5","ShuffleNetV2_x1_0","ShuffleNetV2_x1_5","ShuffleNet","MobileNetV2","ResNext50","ResNext101","Segmentation FCN ResNet50","Segmentation FCN ResNet101","Segmentation DeepLabV3 ResNet50","Segmentation DeepLabV3 ResNet101","Detection Faster R-CNN ResNet50","Detection Mask R-CNN ResNet50","Keypoint R-CNN ResNet50","getPyTorchLibrary","output_size","in_features","n_classes","cutoffs","div_value","head_bias","return_indices","inplace","kernel_size","stride","ceil_mode","count_include_pad","num_features","eps","momentum","affine","track_running_stats","in1_features","in2_features","out_features","bias","alpha","in_channels","out_channels","padding_mode","dilation","groups","output_padding","num_embeddings","embedding_dim","padding_idx","max_norm","norm_type","scale_grad_by_freq","sparse","mode","output_ratio","input_size","hidden_size","num_layers","dropout","bidirectional","num_groups","num_channels","lambd","min_val","max_val","normalized_shape","elementwise_affine","negative_slope","size","beta","k","Max","keepdim","embed_dim","num_heads","num_parameters","init","nonlinearity","lower","upper","threshold","resnet18","pretrained","progress","num_classes","resnet34","resnet50","resnet101","resnet152","vgg11","vgg13","vgg16","vgg19","alexnet","squeezenet1_0","squeezenet1_1","densenet121","densenet169","densenet161","densenet201","inception_v3","googlenet","shufflenet_v2_x0_5","shufflenet_v2_x1_0","shufflenet_v2_x1_5","shufflenet_v2_x2_0","mobilenet_v2","resnext50_32x4d","resnext101_32x8d","segmentation.fcn_resnet50","segmentation.fcn_resnet101","segmentation.deeplabv3_resnet50","segmentation.deeplabv3_resnet101","detection.fasterrcnn_resnet50_fpn","pretrained_backbone","detection.maskrcnn_resnet50_fpn","detection.keypointrcnn_resnet50_fpn","getTensorFlowLibrary","trainable","dtype","dynamic","activation","l1","l2","rate","noise_shape","seed","pool_size","strides","data_format","axis","epsilon","center","scale","beta_initializer","gamma_initializer","moving_mean_initializer","moving_variance_initializer","beta_regularizer","gamma_regularizer","beta_constraint","gamma_constraint","renorm","renorm_clipping","renorm_momentum","fused","virtual_batch_size","adjustment","layer","merge_mode","weights","Conv1D","filters","dilation_rate","use_bias","kernel_initializer","bias_initializer","kernel_regularizer","bias_regularizer","activity_regularizer","kernel_constraint","bias_constraint","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","recurrent_activation","recurrent_initializer","unit_forget_bias","recurrent_regularizer","recurrent_constraint","return_sequences","go_backwards","stateful","recurrent_dropout","cropping","units","feature_columns","depth_multiplier","depthwise_initializer","depthwise_regularizer","depthwise_constraint","axes","normalize","input_dim","output_dim","embeddings_initializer","embeddings_regularizer","embeddings_constraint","mask_zero","input_length","implementation","return_state","unroll","time_major","reset_after","stddev","shape","ndim","max_ndim","min_ndim","function","output_shape","mask","arguments",")","sparse_combiner","mask_value","MaxPool1D","MaxPool2D","MaxPool3D","alpha_initializer","alpha_regularizer","alpha_constraint","shared_axes","cell","max_value","target_shape","pointwise_initializer","pointwise_regularizer","pointwise_constraint","cells","theta","interpolation","getPyTorchAutoparams","outshape","inp","floor","current","row","L_in","L_out","H_in","W_in","H_out","W_out","D_in","D_out","features","out_shape","index","SimplifyParameters","new_parameters","DeSimplifyParameters","recipe","JSON","parse","stringify","recipe_copy","new_param_lib","SimplifyOutputs","new_outputs","DeSimplifyOutputs","new_outputs_lib","SimplifyFlowpoint","flowpoint","pos","new_flowpoint","isout","out","x","y","cont","contig","re_ndims","re_dims","new_content","library_key","SimplifyContent","DeSimplifyFlowpoint","new_flowpoint_lib","new_content_lib","DeSimplifyContent","SimplifyFlowpoints","new_flowpoints","DeSimplifyFlowpoints","new_flowpoints_lib","lib_key","param_key","isArray","param_key_2","p2","console","log","FixTuples","DeSimplifyEnvironment","env","main_env","new_env_lib","DeSimplifyVisual","vis","main_vis","new_vis_lib","showName","snap","DeSimplifySettings","main_set","new_set_lib","count","lastPos","DeSimplify","main_lib","err","TryParseJSON","Library2String","Simplify","axios","rjust","rep","getId","l","lib","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2bigBase","num","getYear","toString","CryptoJS","ReplaceAll","str","search","replacement","newstr","split","getSpecialsLib","reversed","§","\"","#","%","&","=","`","^","+","´","¨","revlib","Decrypt","data","specials","decrypted","AES","decrypt","enc","Utf8","WhatIsThis","Button_default","Collapse_default","in","paragraph","LoadDialog","_React$Component2","_this3","pswd","fieldRef","_this4","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","PasswordDialog_WhatIsThis","focus","autoComplete","onSubmit","preventDefault","TextField_default","error","InputLabelProps","shrink","inputRef","input","DialogActions_default","continueMsg","SaveDialog","_React$Component3","_this5","_this6","HelpDialog","goTo","fullWidth","activeStep","orientation","completed","App","baseLib","encrypted_model","show_load_dialog","load_dialog_error","show_save_dialog","show_help_dialog","baseUrl","window","location","show","queue","showNotification","updateCode","loadDecryptedModel","deleteFlowpoint","handleClick","cb","query","get","res","concat_data","raw","number","getTime","shift","flow_order","DefaultMessage","Parser","Input","layer_key","visited","dimkey","tmp_autoparams","bestInp","all_inps","model_id","new_state","objectSpread","0","1","2","3","base_point","newPoint","copy","shiftKey","pointA","Sidebar_Sidebar","dist","getDiagramRef","avoidCollisions","startPosition","onDrag","paddingLeft","shapeBox","MainButtons_MainButtons","autoHideDuration","onExited","anchorOrigin","vertical","horizontal","message","HelpDialog_HelpDialog","PasswordDialog_LoadDialog","PasswordDialog_SaveDialog","save_dialog_error","match","url","PostToDataBase","toEncrypt","test_string","encrypted","encrypt","Encrypt","newUrl","history","pushState","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.444ca7fd.chunk.js","sourcesContent":["import React from 'react';\n\n// Material\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// Icons\nimport { FaGithub, FaLinkedin, FaNpm } from \"react-icons/fa\";\nimport { Link } from '@material-ui/core';\n\n\nexport const SidebarHead = props => {\n  return (\n    <div>\n\n      <Typography href='https://mariusbrataas.github.io/flowpoints_ml' gutterBottom variant=\"h5\" component=\"h2\" style={{padding:'15px'}}>\n        <Link href='https://mariusbrataas.github.io/flowpoints_ml' color='inherit' underline='none'>\n          Flowpoints\n        </Link>\n      </Typography>\n\n      <div style={{position:'absolute', right:5, top:5}}>\n        <IconButton target='_blank' href='https://www.npmjs.com/package/flowpoints'>\n          <FaNpm/>\n        </IconButton>\n        <IconButton target='_blank' href='https://www.linkedin.com/in/mariusbrataas/'>\n          <FaLinkedin/>\n        </IconButton>\n        <IconButton target='_blank' href='https://github.com/mariusbrataas/flowpoints_ml#readme'>\n          <FaGithub/>\n        </IconButton>\n      </div>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './FrontHelpers.css'\n\n// Material\nimport FormControl from '@material-ui/core/FormControl';\nimport { Paper, InputLabel, Select, MenuItem, FormControlLabel, Switch, TextField, Tooltip, Chip } from '@material-ui/core';\n\n\nexport const TextFieldContainer = props => {\n  return (\n    <TextField\n      label={props.label}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n      rows={props.rows}\n      variant={props.variant}\n      margin={props.margin ? props.margin : 'tight'}\n      style={props.style}\n      multiline={props.multiline}\n      onChange={e => {\n        if (props.onChange) props.onChange(e.target.value)\n      }}/>\n  )\n}\n\n\nexport const SelectContainer = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            props.options.map(opt => {\n              return (\n                <MenuItem value={opt}>{opt}</MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport const SelectContainerTooltips = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            Object.keys(props.options).map(opt => {\n              var chips = []\n              props.options[opt].map(val => {\n                chips.push(\n                  <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n                )\n              })\n              return (\n                <MenuItem value={opt}>\n                <div class='container'>\n                  <div class='option'>{opt}</div>\n                  <div class='chips'>{chips}</div>\n                </div>\n                </MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport class Autosuggest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      msg: this.props.value,\n      initmsg: this.props.value,\n      options: this.props.options,\n      open: false,\n      arrow_idx: 0\n    }\n    this.wrapperRef = null;\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside(e) {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) this.setState({open:false, msg:this.props.value})\n  }\n  render() {\n    if (this.state.initmsg !== this.props.value) {\n      this.setState({\n        msg: this.props.value,\n        initmsg: this.props.value,\n        open: false,\n        arrow_idx: 0\n      })\n    }\n    var options = [];\n    var opt_keys = [];\n    var idx = 0;\n    Object.keys(this.state.options).map(opt => {\n      var chips = [];\n      this.state.options[opt].map(val => {\n        chips.push(\n          <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n        )\n      })\n      if (opt.toLowerCase().includes(this.state.msg.toLowerCase())) {\n        options.push(\n          <MenuItem\n            value={opt}\n            selected={this.state.arrow_idx === idx}\n            onClick={e => {\n              this.setState({arrow_idx:idx, msg:opt, open:false})\n              if (this.props.onChange) this.props.onChange(opt)\n            }}>\n            <div class='container'>\n              <div class='option'>{opt}</div>\n              <div class='chips'>{chips}</div>\n            </div>\n          </MenuItem>\n        )\n        opt_keys.push(opt)\n        idx += 1\n      }\n    })\n    if (options.length === 0) options.push( <MenuItem disabled value='Nothing'>No available layers</MenuItem> )\n    return (\n      <div style={{width:'100%'}}>\n        <TextField\n          style={{width:'100%', paddingTop:0, marginTop:0}}\n          onClick={() => {this.setState({open:!this.state.open})}}\n          label=\"Layer type\"\n          value={this.state.msg}\n          onChange={e => {this.setState({msg:e.target.value, arrow_idx:0, open:true})}}\n          margin=\"normal\"\n          onKeyDown={e => {\n            if (e.keyCode === 40) {\n              this.setState({arrow_idx: Math.max(Math.min(options.length - 1, this.state.arrow_idx + 1), 0)})\n            } else if (e.keyCode === 38) {\n              this.setState({arrow_idx: Math.min(Math.max(0, this.state.arrow_idx - 1), options.length)})\n            } else if (e.keyCode === 13) {\n              if (opt_keys.length > this.state.arrow_idx) {\n                this.setState({msg:opt_keys[this.state.arrow_idx], open:false})\n                if (this.props.onChange) this.props.onChange(opt_keys[this.state.arrow_idx])\n              }\n            }\n          }}\n        />\n        {\n          this.state.open ? <div ref={node => {this.wrapperRef = node}}>\n            <Paper style={{maxHeight:'40vh', overflow:'scroll'}}>\n              {\n                options\n              }\n            </Paper></div> : null\n        }\n      </div>\n    )\n  }\n}\n\n\n/*export const SwitchContainer = props => {\n  return (\n    <FormControlLabel\n      style={props.style}\n      control={\n        <Switch\n          checked={props.value}\n          color='primary'\n          onChange={e => {\n            if (props.onChange) props.onChange(!props.value)\n          }}/>\n      }\n      label={props.label}/>\n  )\n}*/\n\n\nexport const SwitchContainer = props => {\n  return (\n    <Chip\n      label={props.label}\n      clickable\n      style={{\n        marginLeft:5,\n        marginTop:2,\n        marginBottom:2,\n        backgroundColor:(props.value ? '#64b5f6' : '#e0e0e0'),\n        color:(props.value ? 'white' : '#424242')\n      }}\n      onClick={e => {\n        if (props.onChange) props.onChange(!props.value)\n      }}/>\n  )\n}\n\nexport const themes = [\n  'red',\n  'pink',\n  'purple',\n  'deep-purple',\n  'indigo',\n  'blue',\n  'light-blue',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'blue-grey',\n  'black',\n  'white'\n]\n\nexport const variants = [\n  'paper',\n  'outlined',\n  'filled'\n]","import React, { Component } from 'react';\n\n// Local tools\nimport { SelectContainer, themes, variants, SwitchContainer, TextFieldContainer } from './FrontHelpers.js';\nimport { Button } from '@material-ui/core';\n\n// Other imports\n\nconst htmlToImage = require('html-to-image');\n\n\n\nconst NotesSection = props => {\n  return (\n    <div style={{paddingTop:30}}>\n\n      <TextFieldContainer\n        label='Model notes'\n        multiline={true}\n        value={props.state.environment.notes}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.notes = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n    </div>\n  )\n}\n\n\nconst EnvironmentSection = props => {\n  var environment = props.state.environment;\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Model name</h3>\n\n      <TextFieldContainer\n        label='Model name'\n        multiline={true}\n        value={props.state.environment.modelname}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.modelname = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n      <h3 style={{marginTop:30}}>Environment</h3>\n\n      <SelectContainer\n        label='Library'\n        value={environment.library}\n        options={Object.keys(environment.libraryFetchers)}\n        onChange={val => {\n          \n          // Loading from state\n          var environment = props.refresh().environment;\n          environment.library = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n          // Updating available layers\n          props.updateAvailableLayers()\n\n        }}/>\n\n      {\n        environment.library === 'pytorch' ? <div style={{paddingTop:20}}>\n            <SwitchContainer\n              label='batch first'\n              value={environment.batch_first}\n              style={{paddingTop:0}}\n              onChange={val => {\n\n                // Loading from state\n                var environment = props.refresh().environment;\n                environment.batch_first = val;\n\n                // Updating state\n                props.updateEnvironment(environment)\n\n            }}/>\n            <SwitchContainer\n              label='include training function'\n              value={environment.include_training}\n              style={{paddingTop:0}}\n              onChange={val => {\n\n                // Loading from state\n                var environment = props.refresh().environment;\n                environment.include_training = val;\n\n                // Updating state\n                props.updateEnvironment(environment)\n\n              }}\n            />\n          </div> : null\n      }\n\n    </div>\n  )\n}\n\n\nconst CustomizeViewSection = props => {\n  var visual = props.state.visual;\n  var environment = props.state.environment;\n  return (\n    <div style={{paddingTop:20, width:'100%'}}>\n      \n      <h3>Customize view</h3>\n\n      <div>\n\n        <SelectContainer\n          label='Theme'\n          value={visual.theme}\n          options={themes}\n          style={{width:'48%', paddingRight:10, paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.theme = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n        \n        <SelectContainer\n          label='Variant'\n          value={visual.variant}\n          options={variants}\n          style={{width:'48%', paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.variant = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n\n      </div>\n\n\n      <div style={{paddingTop:20}}>\n        {\n          [\n            {ref:'darkTheme', label:'Dark theme'},\n            {ref:'showName', label:'Show names'}\n          ].map(tmp => {\n            return (\n              <SwitchContainer\n                label={tmp.label}\n                value={visual[tmp.ref]}\n                style={{paddingTop:0}}\n                onChange={val => {\n\n                  // Loading from state\n                  var visual = props.refresh().visual;\n                  visual[tmp.ref] = val;\n\n                  // Updating state\n                  props.updateVisual(visual)\n\n                }}/>\n            )\n          })\n        }\n        {\n          environment.library in environment.autoparams ? <SwitchContainer\n            label='Show shapes'\n            value={visual.showShape}\n            style={{paddingTop:0}}\n            onChange={val => {\n              var visual = props.refresh().visual;\n              visual.showShape = val;\n              props.updateVisual(visual);\n              if (val) props.prepOutputShapes();\n            }}/> : null\n        }\n      </div>\n\n      {\n        props.diagramRef ? <div style={{paddingTop:20}}>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                htmlToImage.toPng(props.diagramRef).then(function (dataUrl) {\n                  var img = new Image();\n                  img.src = dataUrl;\n                  var link = document.createElement('a');\n                  link.download = 'diagram.png';\n                  link.href = dataUrl;\n                  link.click();\n                })\n              }}>\n              Export png\n            </Button></div> : null\n      }\n\n    </div>\n  )\n}\n\n\n\nexport const MiscTab = props => {\n  return (\n    <div style={{padding:15}}>\n\n      <EnvironmentSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}\n        updateAvailableLayers={props.updateAvailableLayers}/>\n      \n      <CustomizeViewSection\n        state={props.state}\n        refresh={props.refresh}\n        updateVisual={props.updateVisual}\n        diagramRef={props.diagramRef}\n        prepOutputShapes={props.prepOutputShapes}/>\n      \n      <NotesSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}/>\n      \n    </div>\n  )\n}","import React, { Component } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierForestDark } from 'react-syntax-highlighter/dist/styles/hljs';\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github';\n\ngithub.hljs.background = '#ffffff';\n\nexport const CodeTab = props => {\n  const codetheme = props.state.visual.darkTheme ? atelierForestDark : github\n  return (\n    <div style={{fontSize:12}}>\n\n      <SyntaxHighlighter language='python' style={codetheme} showLineNumbers>\n      {\n        props.state.environment.code\n      }\n      </SyntaxHighlighter>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { Autosuggest, SelectContainer, TextFieldContainer, SwitchContainer, SelectContainerTooltips } from './FrontHelpers';\nimport { IconButton, TextField, MenuItem, Paper, FormControl, Chip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Tooltip } from '@material-ui/core';\n\n\n\nfunction fieldChanger(refresh, updateFlowpoints, key, value) {\n  var state = refresh();\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[environment.library.toLowerCase()].parameters[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_input(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_base(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected][key] = value;\n  updateFlowpoints(flowpoints)\n}\n\n\nconst TransformsSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected]\n\n  // Container for bools\n  var bools = [];\n  var ints = [];\n  var tuples = [];\n\n  // Adding bools\n  bools.push(\n    <SwitchContainer\n      label='contiguous'\n      value={point.contiguous}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'contiguous',\n          val\n        )\n      }}/>\n  )\n\n  // Adding ints\n  ints.push(\n    <TextFieldContainer\n      label='Reshape dimensions'\n      value={point.reshape_ndims}\n      type='number'\n      variant='outlined'\n      margin='dense'\n      style={{\n        width: 150,\n        paddingRight: 5\n      }}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'reshape_ndims',\n          val\n        )\n        if (val) {\n          var new_dims = [];\n          Array.from(Array(parseInt(val)).keys()).map(idx => {\n            new_dims.push(point.reshape_dims[idx] ? point.reshape_dims[idx] : 0)\n          })\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_dims\n          )\n        }\n      }}/>\n  )\n\n  // Tuples\n  Array.from(Array(parseInt(point.reshape_ndims ? point.reshape_ndims : 0)).keys()).map(idx => {\n    tuples.push(\n      <TextFieldContainer\n        label={'reshape dim ' + idx}\n        value={point.reshape_dims[idx]}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n          var new_value = point.reshape_dims;\n          new_value[idx] = val\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_value\n          )\n        }}/>\n    )\n  })\n\n  // Returning\n  return (\n    <div>\n  \n      <h3 style={{marginTop:30}}>Tensor transforms</h3>\n\n      <div style={{paddingTop:0, marginTop:0, marginLeft:-5, paddingBottom:10}}>{ bools }</div>\n      <div>{ ints }</div>\n      <div>{ tuples }</div>\n\n    </div>\n  )\n\n}\n\n\nconst ParametersSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected];\n\n  // Creating all fields\n  var fields = {\n    int: [],\n    float: [],\n    select: [],\n    tuple: [],\n    bool: [],\n    string: [],\n    unknown: []\n  }\n\n  if (point.base_ref !== 'Input') {\n\n    var parameters = point.content[props.state.environment.library.toLowerCase()].parameters;\n\n    // Adding fields\n    Object.keys(parameters).map(p_key => {\n\n      if (p_key !== 'extras') {\n\n        const parameter = parameters[p_key]\n        if (parameter.istuple) {\n          fields.tuple.push(\n            <div style={{paddingTop:15}}><h5 style={{margin:0}}>{p_key}</h5></div>\n          )\n          parameter.value.map((value, idx) => {\n            fields.tuple.push(\n              <TextFieldContainer\n                label={p_key + ' ' + idx}\n                value={value}\n                type='number'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  var new_value = parameter.value;\n                  new_value[idx] = val;\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    new_value\n                  )\n                }}/>\n            )\n          })\n        } else {\n\n          switch(parameter.type) {\n            case 'int':\n              fields.int.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'float':\n              fields.float.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'string':\n            fields.string.push(\n              <TextFieldContainer\n                label={p_key}\n                value={parameter.value}\n                type='text'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    val\n                  )\n                }}/>\n            )\n            break;\n            \n            case 'bool':\n              if (p_key === 'batch_first') {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={props.state.environment.batch_first}\n                    onChange={val => {}}/>\n                )\n              } else {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={parameter.value}\n                    onChange={val => {\n                      fieldChanger(\n                        props.refresh,\n                        props.updateFlowpoints,\n                        p_key,\n                        val\n                      )\n                    }}/>\n                )\n              }\n            break;\n          \n          case null:\n          fields.unknown.push(\n            <TextFieldContainer\n              label={p_key}\n              value={parameter.value}\n              type='text'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n            \n          case 'select':\n          fields.select.push(\n            <SelectContainer\n              label={p_key}\n              value={parameter.value}\n              options={parameter.options}\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n\n          }\n\n        }\n\n      }\n\n    })\n  } else {\n    var parameters = point.content;\n\n    // Adding n_dims field\n    fields.int.push(\n      <TextFieldContainer\n        label='n_dimensions'\n        value={parameters.n_dims}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n\n          val = val === '' ? '' : Math.max(Math.min(Math.round(val), Infinity), 1)\n\n          // Making sure dims got the correct number of parameters\n          var dims = {};\n          Array.from(Array(val).keys()).map(idx => {\n            if (idx in parameters.dimensions) {\n              dims[idx] = parameters.dimensions[idx];\n            } else {\n              dims[idx] = 1;\n            }\n          })\n\n          // Changing parameters\n          var state = props.refresh()\n          var flowpoints = state.flowpoints;\n          const selected = state.settings.selected;\n          flowpoints[selected].content.n_dims = val;\n          flowpoints[selected].content.dimensions = dims;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n    )\n\n\n    // Adding dimensions field\n    fields.tuple.push(\n      <div style={{paddingTop:15}}><h5 style={{margin:0}}>Dimensions</h5></div>\n    )\n    Object.keys(parameters.dimensions).map((p_key, idx) => {\n      fields.tuple.push(\n        <TextFieldContainer\n          label={'dimension ' + p_key}\n          value={parameters.dimensions[p_key]}\n          type='number'\n          variant='outlined'\n          margin='dense'\n          style={{\n            width: 150,\n            paddingRight: 5\n          }}\n          onChange={val => {\n            var state = props.refresh();\n            var flowpoints = state.flowpoints;\n            state.flowpoints[state.settings.selected].content.dimensions[p_key] = val;\n            props.updateFlowpoints(flowpoints)\n          }}/>\n      )\n    })\n  }\n\n\n  if ((fields.int.length + fields.float.length + fields.select.length + fields.tuple.length + fields.bool.length ) > 0) {\n    return (\n      <div>\n  \n        <h3 style={{marginTop:30}}>Parameters</h3>\n  \n        <div>{ fields.int }</div>\n        <div>{ fields.float }</div>\n        <div>{ fields.select }</div>\n        <div>{ fields.tuple }</div>\n        <div>{ fields.string }</div>\n        <div style={{paddingTop:10, marginLeft:-5}}>{ fields.bool }</div>\n        {\n          fields.unknown.length > 0 ? <div>\n            <h5 style={{paddingTop:5, paddingBottom:0}}>Unknown datatypes. Put your own code here.</h5>\n            { fields.unknown }\n          </div> : null\n        }\n  \n      </div>\n    )\n  }\n\n  return null\n\n}\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\">\n      <IconButton\n        aria-label={props.tooltip}\n        style={props.style}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </IconButton>\n    </Tooltip>\n  )\n}\n\n/*\n<SelectContainerTooltips\n        label='Layer type'\n        value={point.base_ref}\n        options={environment.availableLayers}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var state = props.refresh();\n          var settings = state.settings;\n          var flowpoints = state.flowpoints;\n\n          // Changing flowpoint layer type\n          var point = flowpoints[settings.selected];\n          point.content = props.getEmptyFlowpointContent(val)\n          point.base_ref = val;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n*/\n\n\nconst SettingsSection = props => {\n  var settings = props.state.settings;\n  var flowpoints = props.state.flowpoints;\n  var environment = props.state.environment;\n  const point = flowpoints[settings.selected];\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Flowpoint settings</h3>\n\n        <Autosuggest\n          value={point.base_ref}\n          options={environment.availableLayers}\n          onChange={val => {\n\n            // Loading from state\n            var state = props.refresh();\n            var settings = state.settings;\n            var flowpoints = state.flowpoints;\n  \n            // Changing flowpoint layer type\n            var point = flowpoints[settings.selected];\n            point.content = props.getEmptyFlowpointContent(val)\n            point.base_ref = val;\n  \n            // Updating state\n            props.updateFlowpoints(flowpoints)\n  \n          }}/>\n\n\n        <div style={{paddingTop:15}}>\n\n          <TextFieldContainer\n            label='Layer name'\n            value={point.name}\n            style={{width:'80%'}}\n            onChange={val => {\n\n              // Loading from state\n              var state = props.refresh();\n              var flowpoints = state.flowpoints;\n              var settings = state.settings;\n\n              // Changing layer name\n              flowpoints[settings.selected].name = val;\n\n              // Updating state\n              props.updateFlowpoints(flowpoints)\n\n            }}/>\n\n            <ButtonContainer\n              tooltip='Delete flowpoint'\n              style={{\n                marginLeft: 15,\n                marginTop: 5\n              }}\n              onClick={props.deleteSelected}>\n              <DeleteIcon/>\n            </ButtonContainer>\n\n        </div>\n\n\n        {\n          point.base_ref !== 'Input' ? <div style={{paddingTop:10, marginLeft:-10}}>\n              <SwitchContainer\n                label='Use as output'\n                value={point.is_output}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].is_output = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n                }}/>\n              <SwitchContainer\n                label='Concatenate inputs'\n                value={point.concat_inputs}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].concat_inputs = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n              }}/>\n            </div> : null\n        }\n\n        {\n          point.concat_inputs ? <div style={{paddingTop:15}}>\n            <TextFieldContainer\n              label='Concat dim'\n              value={point.concat_dim}\n              type='number'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                var flowpoints = props.refresh().flowpoints;\n                flowpoints[settings.selected].concat_dim = val;\n                props.updateFlowpoints(flowpoints)\n              }}/>\n          </div> : null\n        }\n\n    </div>\n  )\n}\n\n\n\nexport const FlowpointTab = props => {\n  var settings = props.state.settings;\n\n  // Nothing selected? Returning msg to select something\n  if (settings.selected === null) {\n    return (\n      <div style={{display:'table', width:'100%', height:'50px'}}>\n        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n          Select a flowpoint to display it's settings.\n        </div>\n      </div>\n    )\n  }\n\n  // Layer type doesnt exist in current library?\n  var show_param_section = true;\n  if (!(props.state.environment.library in props.state.flowpoints[props.state.settings.selected].content) && props.state.flowpoints[props.state.settings.selected].base_ref !== 'Input') {\n    show_param_section = false;\n  }\n\n  // Paramaters and settings of selected\n  var flowpoints = props.state.flowpoints;\n  const point = flowpoints[settings.selected];\n  return (\n    <div style={{padding:15}}>\n      \n      <SettingsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}\n        getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n        deleteSelected={props.deleteSelected}/>\n      \n      {\n        show_param_section ? <ParametersSection\n          state={props.state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}/> : <div style={{display:'table', width:'100%', height:'50px', paddingTop:20}}>\n            <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n              Layer type is not available in your current library.\n            </div>\n          </div>\n      }\n\n      <TransformsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}/>\n\n    </div>\n  )\n\n}","import React, { Component } from 'react';\n\n// Importing local tools\nimport { MiscTab } from './MiscTab.js';\nimport { CodeTab } from './CodeTab.js';\nimport { FlowpointTab } from './FlowpointTab.js';\n\n\n// Styles\nimport './SidebarContents.css';\n\nexport const SidebarContents = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <div\n      class='sidebarContents'\n      style={{\n        backgroundColor: (visual.darkTheme ? '#1b1918' : null)\n      }}>\n\n      {\n        settings.tab === 'Misc' ? <MiscTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          updateAvailableLayers={props.updateAvailableLayers}\n          diagramRef={props.diagramRef}\n          prepOutputShapes={props.prepOutputShapes}/> : null\n      }\n      {\n        settings.tab === 'Code' ? <CodeTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}/> : null\n      }\n      {\n        settings.tab === 'Flowpoint' ? <FlowpointTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n          deleteSelected={props.deleteSelected}/> : null\n      }\n\n    </div>\n  )\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\n// Styling\nconst styles = theme => ({\n  root: {\n    flexGrow: 0,\n    overflow:'scroll',\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #1890ff',\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: 50,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing.unit * 0,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$tabSelected': {\n      color: '#1890ff',\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 0,\n  },\n});\n\n\n// Main class\nclass TabContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: props.tab !== undefined ? props.tabs.indexOf(props.tab) : 0\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    const width = Math.ceil(this.props.width/this.props.tabs.length) + 'px'\n\n    return (\n      <div className={classes.root} style={{overflow:'hidden'}}>\n        <Tabs\n          value={value}\n          onChange={(e, value) => {\n            this.setState({ value });\n            if (this.props.onSelectTab) this.props.onSelectTab(this.props.tabs[value]);\n          }}\n          textColor=\"primary\"\n          classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\n          scrollButtons={false}>\n          {\n            this.props.tabs.map(value => {\n              return (\n                <Tab\n                  disableRipple\n                  classes={{ root: classes.tabRoot, selected: classes.tabSelected }}\n                  label={value}\n                  style={{width: width}}\n                />\n              )\n            })\n          }\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n// Setting proptypes\nTabContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Exporting\nexport default withStyles(styles)(TabContainer);\n","import React, { Component } from 'react';\n\n// Styles\nimport './Sidebar.css';\n\n// Material\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\n// Local tools\nimport { SidebarHead } from './SidebarHead.js';\nimport { SidebarContents } from './SidebarContents.js';\nimport TabContainer from './TabContainer.js';\n\n\n// Themes\nconst darkMuiTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: { useNextVariants: true }\n});\n\nconst lightMuiTheme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: { useNextVariants: true }\n});\n\n\n// Sidebar\nexport const Sidebar = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <MuiThemeProvider theme={visual.darkTheme ? darkMuiTheme : lightMuiTheme}>\n\n      <Drawer variant='persistent' anchor='left' open={visual.drawerOpen}>\n        <div\n          class='fullSidebar'\n          style={{\n            maxWidth: visual.drawerWidth,\n            color: (visual.darkTheme ? 'white' : 'black'),\n            width: visual.drawerWidth\n          }}>\n\n          <SidebarHead/>\n\n          <div>\n            <TabContainer\n              tabs={['Misc', 'Code', 'Flowpoint']}\n              tab={settings.tab}\n              width={360}\n              onSelectTab={tab => {\n\n                // Loading state\n                var state = props.refresh();\n                var settings = state.settings;\n                var visual = state.visual;\n\n                // Changing tab\n                settings.tab = tab;\n\n                // Wider drawer if displaying code\n                if (tab === 'Code') {\n                  visual.drawerWidth = 600;\n                } else {\n                  visual.drawerWidth = 360;\n                }\n\n                // Updating state\n                props.updateSettings(settings);\n                props.updateVisual(visual);\n\n              }}/>\n          </div>\n          \n          <SidebarContents\n            state={state}\n            refresh={props.refresh}\n            updateFlowpoints={props.updateFlowpoints}\n            updateEnvironment={props.updateEnvironment}\n            updateVisual={props.updateVisual}\n            updateSettings={props.updateSettings}\n            notification={props.notification}\n            getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n            deleteSelected={props.deleteSelected}\n            updateAvailableLayers={props.updateAvailableLayers}\n            diagramRef={props.diagramRef}\n            prepOutputShapes={props.prepOutputShapes}/>\n\n        </div>\n      </Drawer>\n\n    </MuiThemeProvider>\n  )\n}","import React, { Component } from 'react';\nimport { Fab, Tooltip } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LinkIcon from '@material-ui/icons/Link';\nimport HelpIcon from '@material-ui/icons/Help';\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\" disableTriggerFocus disableFocusListener>\n      <Fab\n        style={{\n          background: props.color,\n          color: '#ffffff',\n          zIndex: 6,\n          boxShadow: 'none'\n        }}\n        aria-label={props.tooltip}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </Fab>\n    </Tooltip>\n  )\n}\n\n\nexport const MainButtons = props => {\n  var visual = props.state.visual;\n  return (\n    <div\n      style={{\n        bottom:'5px',\n        left: visual.drawerWidth * visual.drawerOpen + 5 + 'px',\n        position: 'fixed',\n        transition: 'left 0.4s ease-out'\n      }}>\n      <div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#00b0ff'\n            tooltip='Add flowpoint'\n            onClick={props.addFlowpoint}>\n            <AddIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#2979ff'\n            tooltip='Copy code to clip-board'\n            onClick={props.copyCode}>\n            <FileCopyIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#3d5afe'\n            tooltip='Share link to current model'\n            onClick={props.createLink}>\n            <LinkIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#651fff'\n            tooltip='Help'\n            onClick={props.showHideHelp}>\n            <HelpIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div>\n          <ButtonContainer\n            color='#b0bec5'\n            tooltip='Show/hide sidebar'\n            onClick={props.showHide}>\n            <MenuIcon/>\n          </ButtonContainer>\n        </div>\n\n      </div>\n    </div>\n  )\n}","export function getPointName(flowpoints, key) {\n  let p = flowpoints[key];\n  return (p.name === '' ? ('p_' + key) : p.name).replace(/ /g, '_')\n}\n\n\nexport function dent(indent, n) {\n  var msg = ''\n  Array.from(Array(n).keys()).map(idx => msg += indent)\n  return msg\n}\n\n\nexport function FormatInitParams(parameters, indentation, indent, padding) {\n  if (padding === undefined) padding = true\n  // Getting longest parameter name\n  var max_l = 0;\n  Object.keys(parameters).map(p_key => {\n    if (parameters[p_key].value !== 'None') max_l = Math.max(p_key.length, max_l)\n  })\n  var msg = ''\n  if (padding) msg += '('\n  Object.keys(parameters).map(p_key => {\n    let param = parameters[p_key];\n\n    if (param.value !== 'None') {\n      // Adding argument\n      msg += '\\n' + dent(indent, indentation + 1) + p_key\n\n      // Aligning with other arguments\n      for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n      msg += ' = '\n\n      // Adding argument values\n      if (param.istuple) {\n        // Tuples are put in between parantheses\n        msg += '(';\n        param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n        msg = msg.substring(0, msg.length - 1) + ')';\n      } else if (param.type === 'select') {\n        msg += \"'\" + param.value + \"'\";\n      } else if (param.type === 'bool') {\n        msg += (param.value === true ? 'True' : 'False')\n      } else if (param.type === 'string') {\n        msg += '\"' + param.value + '\"'\n      } else {\n        msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n      }\n      msg += ','\n    }\n  })\n  if (padding) {\n    if (max_l > 0) {\n      msg += '\\n' + dent(indent, 1)\n    }\n    msg += ')'\n  }\n  return msg\n}\n\n\nexport function FormatParamInputs(flowpoints, input_keys) {\n  var msg = ''\n  input_keys.map(key => msg += getPointName(flowpoints, key) + ', ')\n  if (input_keys.length > 0) msg = msg.substring(0, msg.length - 2)\n  return msg\n}\n\n\nfunction getDummyLibrary(flowpoints) {\n  var dummies = {}\n  Object.keys(flowpoints).map(key => {\n    var dummy = {\n      base_ref: flowpoints[key].base_ref,\n      name: flowpoints[key].name,\n      inputs: [],\n      outputs: [],\n      ordered: false,\n      ready: false,\n      downStreamTested: false,\n      is_recurrent: false\n    }\n    Object.keys(flowpoints[key].outputs).map(out_key => {\n      dummy.outputs.push(out_key)\n    })\n    if (flowpoints[key].base_ref === 'Input') {\n      dummy.ready = true;\n    }\n    dummies[key] = dummy;\n  })\n\n  // Adding corresponding inputs\n  Object.keys(dummies).map(key => {\n    dummies[key].outputs.map(out_key => {\n      dummies[out_key].inputs.push(key)\n    })\n  })\n\n  // Returning\n  return dummies\n\n}\n\n\nfunction getInputs(flowpoints) {\n  var inps = [];\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Input') inps.push(key)\n  })\n  return inps\n}\n\n\nfunction recIsDownStream(dummies, target_key, test_key) {\n\n  // Returning if matching\n  if (target_key === test_key) return true;\n\n  // Continue only if havent been visited before\n  var found_downstream = false\n  if (!dummies[test_key].downStreamTested) {\n\n    // Marking self as visited on this run\n    dummies[test_key].downStreamTested = true;\n\n    // Looking deeper down\n    dummies[test_key].outputs.map(out_key => {\n      if (!found_downstream) {\n        found_downstream = recIsDownStream(dummies, target_key, out_key)\n      }\n    })\n  }\n\n  // Returning\n  return found_downstream\n\n}\n\n\nfunction isDownStream(dummies, target_key, test_key) {\n\n  // Resetting downstream helpers\n  Object.keys(dummies).map(r_key => dummies[r_key].downStreamTested = false)\n\n  // Running checks\n  return recIsDownStream(dummies, target_key, test_key)\n\n}\n\n\nfunction isReady(dummies, key) {\n  var ready = true;\n  dummies[key].inputs.map(test_key => {\n    if ((!dummies[test_key].ready && !isDownStream(dummies, test_key, key))) {\n      ready = false;\n    }\n  })\n  return ready\n}\n\n\nfunction recGetOrder(order, dummies, key) {\n\n  // Helper\n  var dummy = dummies[key];\n\n  // Checking dummy, going deeper\n  if (dummy) {\n\n    // Visited before? -> Return\n    if (dummy.ordered) return order\n\n    // Dummy ready?\n    if (isReady(dummies, key)) {\n\n      // Making sure dummy is ready\n      dummy.ready = true;\n\n      // Making sure dummy is added to order\n      dummy.ordered = true;\n      if (!order.includes(key)) order.push(key)\n\n      // Going deeper\n      dummy.outputs.sort().map(out_key => order = recGetOrder(order, dummies, out_key))\n\n    }\n\n  }\n\n  // Returning\n  return order\n\n}\n\n\nfunction getLastUser(order, dummies, target_key) {\n  var max_index = -1;\n  order.map((test_key, idx) => {\n    if (dummies[test_key].inputs.includes(target_key)) max_index = Math.max(max_index, idx)\n  })\n  return order[max_index]\n}\n\n\nfunction getStateNames(order, dummies) {\n  var states = {};\n\n  // Adding all states\n  order.map((key, idx) => {\n    const point = dummies[key];\n\n    // Adding to states\n    if (!(key in states)) {\n      states[key] = getPointName(dummies, key) + (point.base_ref === 'Input' ? '' : '_state');\n    }\n\n    // Setting state of last user\n    const last_user = getLastUser(order, dummies, key);\n    if (last_user !== null) {\n      states[last_user] = states[key];\n    }\n\n  })\n\n  // Setting state of last node to default\n  states[order[order.length - 1]] = 'self.state'\n\n  // Returning\n  return states\n\n}\n\n\nexport function FlowOrder(state) {\n\n  // Init helpers\n  var inps = getInputs(state.flowpoints);\n  var dummies = getDummyLibrary(state.flowpoints);\n  var order = [];\n  var init_states = [];\n  var outs = [];\n\n  // Adding input flowpoints to beginning of order\n  inps.map(key => order.push(key));\n\n  // Recursively mapping tree\n  inps.map(key => order = recGetOrder(order, dummies, key));\n\n  // Flagging flowpoints with recurrent connections and getting init states\n  order.map((key, idx) => {\n    var is_recurrent = false;\n    dummies[key].outputs.map(out_key => {\n      if (idx > order.indexOf(out_key) && !is_recurrent) is_recurrent = true;\n    })\n    if (is_recurrent || state.flowpoints[key].is_output) {\n      dummies[key].is_recurrent = true;\n      init_states.push(key)\n    }\n  })\n\n  // Outputs\n  order.map(key => {\n    if (state.flowpoints[key].is_output) outs.push(key)\n  })\n  if (outs.length === 0) outs = [order[order.length - 1]]\n\n  // State names\n  var states = getStateNames(order, dummies);\n\n  // Returning\n  return {order, inps, states, dummies, init_states, outs}\n\n}","import { getPointName, FormatParamInputs, dent } from \"./FlowOrder\";\n\n\nfunction getStateName(key, flowpoints, states, init_states) {\n  if (init_states.includes(key)) {\n    return 'self.' + getPointName(flowpoints, key) + '_state'\n  }\n  return states[key]\n}\n\n\nfunction getOutputTargetName(key, flowpoints) {\n  return getPointName(flowpoints, key) + '_target'\n}\n\n\nfunction PyTorchImports(indent) {\n  var msg = '# Importing PyTorch tools'\n  msg += '\\nimport torch, torchvision'\n  msg += '\\nfrom torch import nn, optim, cuda'\n  msg += '\\n\\n\\n# Importing other libraries'\n  msg += '\\nimport numpy as np'\n  msg += '\\nimport matplotlib.pyplot as plt'\n  msg += '\\nimport time'\n  return msg\n}\n\n\n\nfunction Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, modelID) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  let modelname = environment.modelname === '' ? 'NeuralNet' : environment.modelname\n  \n  // Basics\n  var msg = '# Model'\n  msg += '\\nclass ' + modelname + '(nn.Module):'\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def __init__(self):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Basics'\n  msg += '\\n' + dent(indent, 2) + 'super(' + modelname + ', self).__init__()'\n  msg += '\\n' + dent(indent, 2) + 'self.name        = ' + (modelID ? (\"'\" + modelID + \"'\") : \"'model'\")\n  msg += '\\n' + dent(indent, 2) + 'self.batch_first = ' + (environment.batch_first ? 'True' : 'False')\n\n  // Prep aligning recurrent states\n  var max_l = 0;\n  order.map(key => {\n    let dummy = dummies[key];\n    if (dummy.is_recurrent) {\n      max_l = Math.max(max_l, getStateName(key, flowpoints, states, init_states).length);\n    }\n  })\n\n  // Initializing recurrent states\n  if (max_l > 0) {\n    var state_msg = dent(indent, 2) + '# Initializing states with placeholder tensors';\n    order.map(key => {\n      let dummy = dummies[key];\n      if (dummy.is_recurrent) {\n\n        // Init state\n        state_msg += '\\n' + dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n\n        // Aligning equals sign\n        for (var i = 0; i < max_l - getStateName(key, flowpoints, states, init_states).length; i++) state_msg += ' '\n        state_msg += ' = torch.tensor([0], dtype=torch.float64)'\n\n      }\n    })\n    msg += '\\n\\n' + state_msg\n  }\n\n  // Initializing all layers\n  msg += '\\n\\n' + dent(indent, 2) + '# Initializing all layers'\n  order.map(key => {\n    let point = flowpoints[key];\n    \n    if (point.base_ref === 'Concatenate') {\n\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref === 'Flatten') {\n\n    } else if (point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        let content = point.content[environment.library.toLowerCase()];\n        let parameters = content.parameters\n\n        // Getting longest parameter name\n        var max_l = 0;\n        Object.keys(parameters).map(p_key => {\n          if (p_key !== 'extras') max_l = Math.max(p_key.length, max_l)\n        })\n\n        // Init object\n        let prefix = content.parameters.extras.torchvision ? 'torchvision.models.' : 'nn.'\n        msg += '\\n' + dent(indent, 2) + 'self.' + getPointName(flowpoints, key) + ' = ' + prefix + content.reference + '(';\n\n        // Adding arguments\n        Object.keys(parameters).map(p_key => {\n\n          if (p_key !== 'extras') {\n\n            let param = parameters[p_key];\n          \n            // Adding argument\n            msg += '\\n' + dent(indent, 3) + p_key\n\n            // Aligning with other arguments\n            for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n            msg += ' = '\n\n            // Adding argument values\n            if (param.istuple) {\n              // Tuples are put in between parantheses\n              msg += '(';\n              param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n              msg = msg.substring(0, msg.length - 1) + ')';\n            } else if (param.type === 'select') {\n              msg += \"'\" + param.value + \"'\";\n            } else if (param.type === 'bool') {\n              if (p_key === 'batch_first') {\n                msg += 'self.batch_first'\n              } else {\n                msg += (param.value === true ? 'True' : 'False')\n              }\n            } else {\n              msg += (param.value === '' ? 'None' : param.value)\n            }\n            msg += ','\n\n          }\n\n        })\n        if (max_l > 0) msg += '\\n' + dent(indent, 2)\n        msg += ')'\n      }\n    }\n  })\n\n  // Startup routines\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 2) + '# Running startup routines'\n    msg += '\\n' + dent(indent, 2) + 'self.reset_hidden_states()'\n  }\n\n  // Returning\n  return msg\n\n}\n\n\nfunction ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library) {\n  var msg = dent(indent, 1) + 'def reset_hidden_states(self, sample=None):'\n  msg += '\\n' + dent(indent, 2) + 'if type(sample) == torch.Tensor:'\n  msg += '\\n' + dent(indent, 3) + 'batch_size = sample.shape[0 if self.batch_first else 1]'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        const parameters = flowpoints[key].content[library].parameters;\n        if (parameters.extras.gothidden) {\n          if (parameters['hidden_size'] && parameters['num_layers']) {\n            msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = '\n            const hidden = '\\n' + dent(indent, 4) + 'torch.zeros((' + parameters['num_layers'].value + ', batch_size, ' + parameters['hidden_size'].value + '), device=sample.device)'\n            msg += '(' + hidden + ', ' + hidden + '\\n' + dent(indent, 3) + ')'\n          }\n        }\n      }\n    }\n  })\n  msg += '\\n' + dent(indent, 2) + 'else:'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = None'\n        }\n      }\n    }\n  })\n  return msg\n}\n\n\nfunction Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library) {\n  var msg = dent(indent, 1) + 'def forward(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  msg += formated_inputs + '):'\n\n  // Forwarding\n  var step_lib = [];\n  var outputs = [];\n  order.map(key => {\n    const point = dummies[key];\n    if (point.base_ref === 'Concatenate') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.cat(['\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n      step_msg = step_msg.substring(0, step_msg.length - 2) + '], dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Concatenate' })\n    } else if (point.base_ref === 'Mean') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.mean('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Mean' })\n    } else if (point.base_ref === 'Maximum') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.max('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')[0]'\n      step_lib.push({ msg:step_msg, title:'Max' })\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref === 'Flatten') {\n      let sn1 = getStateName(key, flowpoints, states, init_states)\n      let sn2 = getStateName(point.inputs[0], flowpoints, states, init_states)\n      var step_msg = dent(indent, 2) + sn1\n      step_msg += ' = ' + sn2 + '.view(' + sn2 + '.shape[0], -1)'\n      step_lib.push({ msg:step_msg, title:'Flatten' })\n    } else {\n      if (flowpoints[key].content[library]) {\n        var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', self.' + getPointName(flowpoints, key) + '_hidden'\n        step_msg += ' = self.' + getPointName(dummies, key) + '(';\n        if (point.inputs.length > 1) {\n          if (flowpoints[key].concat_inputs) {\n            //torch.cat(tensors, dim=0\n            step_msg += 'torch.cat(['\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n            step_msg = step_msg.substring(0, step_msg.length -2 ) + '], dim=' + flowpoints[key].concat_dim + ')'\n          } else {\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ');\n            step_msg = step_msg.substring(0, step_msg.length - 3);\n          }\n        } else {\n          step_msg += getStateName(point.inputs[0], flowpoints, states, init_states)\n        }\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', tuple([_.data for _ in self.' + getPointName(flowpoints, key) + '_hidden]) if self.' + getPointName(flowpoints, key) + '_hidden else None'\n        step_msg += ')'\n        step_lib.push({ msg:step_msg, title:point.base_ref });\n        if (flowpoints[key].contiguous) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states) + '.contiguous()'\n          if (flowpoints[key].reshape_ndims > 0) {\n            reshape_msg += '.view('\n            flowpoints[key].reshape_dims.map(val => {\n              reshape_msg += val + ', '\n            })\n            reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          }\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        } else if (flowpoints[key].reshape_ndims > 0) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states)\n          reshape_msg += '.view('\n          flowpoints[key].reshape_dims.map(val => {\n            reshape_msg += val + ', '\n          })\n          reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        }\n        if (flowpoints[key].is_output) outputs.push(key);\n      }\n    }\n  })\n\n  // Max length\n  var max_l = 0;\n  step_lib.map(step => max_l = Math.max(max_l, step.msg.length > 60 ? 0 : step.msg.length))\n\n  // Adding steps\n  step_lib.map(step => {\n    \n    // Adding step\n    msg += '\\n' + step.msg;\n\n    // Aligning comment with others\n    for (var i = 0; i < max_l - step.msg.length; i++) msg += ' ';\n    msg += ' # ' + step.title;\n  })\n\n  // Adding return\n  if (outputs.length === 0) outputs = [order[order.length-1]];\n  msg += '\\n' + dent(indent, 2) + 'return'\n  outputs.map(key => {\n    msg += ' ' + getStateName(key, flowpoints, states, init_states) + ','\n  })\n  msg = msg.slice(0, -1)\n\n  // Returning\n  return msg\n\n}\n\n\nfunction SaveLoad(flowpoints, dummies, order, indent, library, modelname) {\n  var msg = dent(indent, 1) + \"def save(self, name=None, extras={}):\"\n  msg += '\\n' + dent(indent, 2) + \"if not name: name = self.name\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"torch.save({\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 3) + \"'\" + pointcode + \"': self.\" + pointcode + ','\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 3) + \"'name': self.name,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'extras': extras,\"\n  msg += \"\\n\" + dent(indent, 2) + \"}, name)\"\n  msg += \"\\n\\n\\n\" + dent(indent, 1) + \"@staticmethod\"\n  msg += \"\\n\" + dent(indent, 1) + \"def load(name='model'):\"\n  msg += \"\\n\" + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"checkpoint = torch.load(name)\"\n  msg += \"\\n\" + dent(indent, 2) + \"model = \" + modelname + \"()\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 2) + \"model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 2) + \"model.name = checkpoint['name']\"\n  msg += \"\\n\" + dent(indent, 2) + \"return model, checkpoint['extras']\"\n\n  // Returning\n  return msg\n}\n\n\nfunction Fit(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library, outs) {\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  var msg = '# Helper function for training model'\n  msg += '\\n' + 'def fit(model, train, test=None, epochs=10, optimizer=optim.Adam, criterion=nn.CrossEntropyLoss, lr=0.001, batch_size=32, shuffle=True, workers=4, progress=True):'\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating data loaders'\n  msg += '\\n' + dent(indent, 1) + 'train_loader = torch.utils.data.DataLoader('\n  msg += '\\n' + dent(indent, 2) + 'train,'\n  msg += '\\n' + dent(indent, 2) + 'batch_size=batch_size,'\n  msg += '\\n' + dent(indent, 2) + 'shuffle=shuffle,'\n  msg += '\\n' + dent(indent, 2) + 'num_workers=workers'\n  msg += '\\n' + dent(indent, 1) + ')'\n  msg += '\\n' + dent(indent, 1) + 'if test:'\n  msg += '\\n' + dent(indent, 2) + 'test_loader = torch.utils.data.DataLoader('\n  msg += '\\n' + dent(indent, 3) + 'test,'\n  msg += '\\n' + dent(indent, 3) + 'batch_size=batch_size,'\n  msg += '\\n' + dent(indent, 3) + 'shuffle=False,'\n  msg += '\\n' + dent(indent, 3) + 'num_workers=workers'\n  msg += '\\n' + dent(indent, 2) + ')'\n  msg += '\\n\\n' + dent(indent, 1) + '# Init optimizer and criterion'\n  msg += '\\n' + dent(indent, 1) + \"optimizer = optimizer( model.parameters(), lr=lr )\"\n  msg += '\\n' + dent(indent, 1) + \"criterion = criterion()\"\n  msg += '\\n\\n' + dent(indent, 1) + '# Loss records'\n  msg += '\\n' + dent(indent, 1) + \"train_loss_rec = []\"\n  msg += '\\n' + dent(indent, 1) + \"test_loss_rec = []\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Device\"\n  msg += '\\n' + dent(indent, 1) + \"device = next(model.parameters()).device\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Prep model\"\n  msg += '\\n' + dent(indent, 1) + \"model.train()\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Showing progress?\"\n  msg += '\\n' + dent(indent, 1) + \"if progress:\"\n  msg += '\\n' + dent(indent, 2) + \"print(f'Running on {device}')\"\n  msg += '\\n' + dent(indent, 2) + \"epoch_l = max(2, len(str(epochs)))\"\n  msg += '\\n' + dent(indent, 2) + \"msg = '%sEpoch   Training loss' % ''.rjust(2 * epoch_l - 4, ' ')\"\n  msg += '\\n' + dent(indent, 2) + \"msg += ('   Testing loss   ' if test else '') + '   Time remaining'\"\n  msg += '\\n' + dent(indent, 2) + \"print(msg)\"\n  msg += '\\n' + dent(indent, 2) + \"t = time.time()\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Looping through epochs\"\n  msg += '\\n' + dent(indent, 1) + \"for epoch in range(epochs):\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Reset epoch loss\"\n  msg += '\\n' + dent(indent, 2) + \"train_loss = 0\"\n  msg += '\\n' + dent(indent, 2) + \"test_loss = 0\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Looping through training data\"\n  msg += '\\n' + dent(indent, 2) + \"for \" + formated_inputs + \",\"\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + ','\n  })\n  msg = msg.substring(0, msg.length - 1) + \" in train_loader:\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Loss\"\n  msg += '\\n' + dent(indent, 3) + \"loss = criterion( model(\"\n  inps.map(inp_key => {\n    msg += getStateName(inp_key, flowpoints, states, init_states) + '.to(device), '\n  })\n  msg = msg.substring(0, msg.length - 2)\n  msg += '),'\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + '.to(device),'\n  })\n  msg = msg.substring(0, msg.length - 1) + ' )'\n  msg += '\\n' + dent(indent, 3) + \"train_loss += loss.item()\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Backward pass and optimization\"\n  msg += '\\n' + dent(indent, 3) + \"loss.backward()       # Backward pass\"\n  msg += '\\n' + dent(indent, 3) + \"optimizer.step()      # Optimizing weights\"\n  msg += '\\n' + dent(indent, 3) + \"optimizer.zero_grad() # Clearing gradients\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Testing step\"\n  msg += '\\n' + dent(indent, 2) + \"if test:\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Switching off autograd\"\n  msg += '\\n' + dent(indent, 3) + \"with torch.no_grad():\"\n  msg += '\\n\\n' + dent(indent, 4) + \"for \" + formated_inputs + \",\"\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + ','\n  })\n  msg = msg.substring(0, msg.length - 1) + \" in train_loader:\"\n  msg += '\\n\\n' + dent(indent, 5) + \"# Loss\"\n  msg += '\\n' + dent(indent, 5) + \"loss = criterion( model(\"\n  inps.map(inp_key => {\n    msg += getStateName(inp_key, flowpoints, states, init_states) + '.to(device), '\n  })\n  msg = msg.substring(0, msg.length - 2)\n  msg += '),'\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + '.to(device),'\n  })\n  msg = msg.substring(0, msg.length - 1) + ' )'\n  msg += '\\n' + dent(indent, 5) + \"test_loss += loss.item()\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Adding loss to record\"\n  msg += '\\n' + dent(indent, 2) + \"train_loss_rec.append(train_loss / len(train))\"\n  msg += '\\n' + dent(indent, 2) + \"if test: test_loss_rec.append(test_loss / len(test))\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Showing progress?\"\n  msg += '\\n' + dent(indent, 2) + \"if progress:\"\n  msg += '\\n' + dent(indent, 3) + \"eta_s = ((time.time() - t) / (epoch + 1)) * (epochs - epoch - 1)\"\n  msg += '\\n' + dent(indent, 3) + \"msg = '%s/%s' % (str(epoch + 1).rjust(epoch_l, ' '), str(epochs).ljust(epoch_l, ' '))\"\n  msg += '\\n' + dent(indent, 3) + \"msg += ' | %s' % str(round(train_loss_rec[-1], 9)).ljust(13, ' ')\"\n  msg += '\\n' + dent(indent, 3) + \"if test: msg += ' | %s' % str(round(test_loss_rec[-1], 9)).ljust(15, ' ')\"\n  msg += '\\n' + dent(indent, 3) + \"msg += ' | '\"\n  msg += '\\n' + dent(indent, 3) + \"msg += '%sh ' % round(eta_s / 3600) if eta_s > 3600 else ''\"\n  msg += '\\n' + dent(indent, 3) + \"msg += '%sm ' % round(eta_s % 3600 / 60) if eta_s > 60 else ''\"\n  msg += '\\n' + dent(indent, 3) + \"msg += '%ss ' % round(eta_s % 60)\"\n  msg += '\\n' + dent(indent, 3) + \"print(msg)\"\n  msg += '\\n\\n' + dent(indent, 1) + '# Finish and return'\n  msg += '\\n' + dent(indent, 1) + 'model.eval()'\n  msg += '\\n' + dent(indent, 1) + 'return train_loss_rec, test_loss_rec'\n  return msg\n}\n\n\nexport function PyTorchParser(state, order, inps, states, dummies, indent, init_states, outs) {\n\n  var flowpoints = state.flowpoints;\n  const library = state.environment.library.toLowerCase()\n\n  // Imports\n  var msg = PyTorchImports(indent)\n\n  // Need hidden states?\n  var got_hidden_states = false\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          got_hidden_states = true\n        }\n      }\n    }\n  })\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, state.settings.modelID);\n  msg += '\\n\\n\\n' + Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library);\n  if (got_hidden_states) msg += '\\n\\n\\n' + ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library);\n  msg += '\\n\\n\\n' + SaveLoad(flowpoints, dummies, order, indent, library, state.environment.modelname === '' ? 'NeuralNet' : state.environment.modelname);\n  if (state.environment.include_training) msg += '\\n\\n\\n\\n' +  Fit(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library, outs)\n\n  // Returning\n  return msg\n}","import { FlowOrder } from \"./FlowOrder\";\nimport { PyTorchParser } from \"./PytorchParser\";\nimport { TensorFlowParser } from \"./TensorflowParser\";\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nconst code_parsers = {\n  pytorch: PyTorchParser,\n  tensorflow: TensorFlowParser\n}\n\n\nfunction DefaultMessage(state) {\n  var msg = \"\";\n  msg += \"'''\\n\";\n  msg += \"Created using flowpoints.io\\n\\n\";\n  if (state.settings.modelID) {\n    msg += \"Link to model:\\n\";\n    msg += \"https://mariusbrataas.github.io/flowpoints_ml/?p=\" + state.settings.modelID + \"\\n\\n\";\n  }\n  msg += \"LICENSE:\\n\"\n  msg += \"https://github.com/mariusbrataas/flowpoints_ml/blob/master/LICENSE\"\n  if (state.environment.notes !== '') {\n    var notes = state.environment.notes;\n    notes = ReplaceAll(notes, \"'\", '')\n    msg += '\\n\\nNOTES:\\n' + notes\n  }\n  msg += \"\\n'''\\n\\n\\n\"\n  return msg\n}\n\n\nexport function Parser(state) {\n\n  if (Object.keys(state.flowpoints).length > 0) {\n\n    // Order and inputs\n    const tmp = FlowOrder(state)\n    const flow_order = tmp.order;\n    const inps = tmp.inps;\n    const states = tmp.states;\n    const init_states = tmp.init_states;\n    const outs = tmp.outs;\n    var dummies = tmp.dummies;\n\n    // Init msg with default text\n    var msg = DefaultMessage(state)\n\n    // Parsing\n    const lib = state.environment.library.toLowerCase()\n    if (lib in code_parsers) {\n      msg += code_parsers[lib](state, flow_order, inps, states, dummies, '    ', init_states, outs)\n    }\n\n    // Returning\n    return {msg, order:flow_order, dummies}\n\n  }\n\n  return {msg:'', order:[], dummies:{}}\n\n}","import { getPointName, FormatParamInputs, dent, FormatInitParams } from \"./FlowOrder\";\n\n\nfunction TensorFlowImports() {\n  var msg = '# Importing TensorFlow tools'\n  msg += '\\nimport tensorflow as tf'\n  return msg\n}\n\n\nfunction Constructor(state, order, inps, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  // Basics\n  var msg = '# Model'\n  msg += \"\\ndef NeuralNet(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']):\"\n\n  // Initializing inputs\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing inputs'\n  order.map(key => {\n    let point = flowpoints[key]\n    let current_point_name = getPointName(flowpoints, key);\n\n    if (inps.includes(key)) {\n      let content = point.content;\n      msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Input(('\n      Object.keys(content.dimensions).sort().map(idx => msg += '' + content.dimensions[idx] + ',')\n      msg += \"), name='\" + current_point_name + \"')\"\n    }\n  })\n\n  // Initializing layers\n  var current_point_name = '';\n  var current_point_key = '';\n  var outputs = [];\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing layers'\n  order.map(key => {\n    let point = flowpoints[key]\n    current_point_name = getPointName(flowpoints, key);\n    current_point_key = key\n\n    if (point.base_ref !== 'Input') {\n      const content = point.content[environment.library.toLowerCase()];\n\n      if (content) {\n        const rawparams = content.parameters;\n        var parameters = { name:{type:'string', value:current_point_name} }\n        Object.keys(rawparams).map(raw_p_key => {\n          if (raw_p_key !== 'extras') parameters[raw_p_key] = rawparams[raw_p_key]\n        })\n        //parameters['name'] = {type:'string', value:current_point_name};\n        let inputs = dummies[key].inputs;\n\n        /*\n        Need an add-operation first?\n        If a node got multiple inputs and is not \"Concatenate\", those inputs should be added together.\n        */ \n        if (inputs.length > 1) {\n\n          if (point.base_ref === 'Concatenate') {\n\n            // Adding inputs\n            msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Concatenate(axis=' + point.concat_dim + ')('\n            msg += '\\n' + dent(indent, 2) + '['\n            inputs.map(inp_key => {\n              msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n            })\n            msg = msg.slice(0, -1)\n            msg += '\\n' + dent(indent, 2) + ']'\n            msg += '\\n' + dent(indent, 1) + ')'\n\n          } else {\n\n            if (point.concat_inputs) {\n\n              // Concat name\n              var concatname = \"'concat_\"\n              inputs.map(inp_key => concatname += getPointName(flowpoints, inp_key) + '_')\n              concatname = concatname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Concatenate(name=\" + concatname + \", axis=\" + point.concat_dim + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            } else {\n\n              // Adder name\n              var addname = \"'add_\"\n              inputs.map(inp_key => addname += getPointName(flowpoints, inp_key) + '_')\n              addname = addname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Add(name=\" + addname + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            }\n\n          }\n\n        } else {\n\n          // Creating layer\n          msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n          msg += FormatInitParams(parameters, 1, indent)\n          msg += '(' + getPointName(flowpoints, inputs[0]) + ')'\n\n        }\n        if (point.is_output) outputs.push(current_point_key)\n      } else {\n        msg += '\\n\\nCOULD NOT ADD ' + current_point_name + ' (' + point.base_ref + ')!'\n        msg += '\\nThe layertype is not available in the the currently selected library.\\n\\n'\n      }\n    }\n  })\n\n  // Fixing outputs?\n  if (outputs.length === 0 && current_point_key !== '') outputs.push(current_point_key)\n\n  // Creating model\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating model'\n  msg += '\\n' + dent(indent, 1) + '_model = tf.keras.models.Model('\n  if (inps.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'inputs  = [' + FormatParamInputs(dummies, inps) + '],'\n  }\n  if (outputs.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'outputs = [' + FormatParamInputs(dummies, outputs) + ']'\n  }\n  if (state.settings.modelID !== '' && state.settings.modelID !== null) {\n    msg += ','\n    msg += '\\n' + dent(indent, 2) + \"name    = 'flowpoints.io/?p=\" + state.settings.modelID + \"'\"\n  }\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Compiling model\n  msg += '\\n\\n' + dent(indent, 1) + '# Compiling model'\n  msg += '\\n' + dent(indent, 1) + \"_model.compile(\"\n  msg += '\\n' + dent(indent, 2) + \"optimizer = optimizer,\"\n  msg += '\\n' + dent(indent, 2) + \"loss      = loss,\"\n  msg += '\\n' + dent(indent, 2) + \"metrics   = metrics\"\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Returning model\n  msg += '\\n\\n' + dent(indent, 1) + '# Returning model'\n  msg += '\\n' + dent(indent, 1) + 'return _model'\n\n  // Returning\n  return msg\n\n}\n\n\n\nexport function TensorFlowParser(state, order, inps, states, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n\n  // Imports\n  var msg = TensorFlowImports()\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, inps, dummies, indent)\n\n  // Returning\n  return msg\n}","export function getBaseLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"tensorflow\": \"AbstractRNNCell\"\n    },\n    \"Activation\": {\n      \"tensorflow\": \"Activation\"\n    },\n    \"ActivityRegularization\": {\n      \"tensorflow\": \"ActivityRegularization\"\n    },\n    \"AdaptiveAvgPool1d\": {\n      \"pytorch\": \"AdaptiveAvgPool1d\"\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"pytorch\": \"AdaptiveAvgPool2d\"\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"pytorch\": \"AdaptiveAvgPool3d\"\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"pytorch\": \"AdaptiveLogSoftmaxWithLoss\"\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"pytorch\": \"AdaptiveMaxPool1d\"\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"pytorch\": \"AdaptiveMaxPool2d\"\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"pytorch\": \"AdaptiveMaxPool3d\"\n    },\n    \"Add\": {\n      \"tensorflow\": \"Add\"\n    },\n    \"AlphaDropout\": {\n      \"pytorch\": \"AlphaDropout\",\n      \"tensorflow\": \"AlphaDropout\"\n    },\n    \"Average\": {\n      \"tensorflow\": \"Average\"\n    },\n    \"AveragePooling1D\": {\n      \"tensorflow\": \"AveragePooling1D\"\n    },\n    \"AveragePooling2D\": {\n      \"tensorflow\": \"AveragePooling2D\"\n    },\n    \"AveragePooling3D\": {\n      \"tensorflow\": \"AveragePooling3D\"\n    },\n    \"AvgPool1d\": {\n      \"pytorch\": \"AvgPool1d\"\n    },\n    \"AvgPool2d\": {\n      \"pytorch\": \"AvgPool2d\"\n    },\n    \"AvgPool3d\": {\n      \"pytorch\": \"AvgPool3d\"\n    },\n    \"BatchNorm1d\": {\n      \"pytorch\": \"BatchNorm1d\"\n    },\n    \"BatchNorm2d\": {\n      \"pytorch\": \"BatchNorm2d\"\n    },\n    \"BatchNorm3d\": {\n      \"pytorch\": \"BatchNorm3d\"\n    },\n    \"BatchNormalization\": {\n      \"tensorflow\": \"BatchNormalization\"\n    },\n    \"Bidirectional\": {\n      \"tensorflow\": \"Bidirectional\"\n    },\n    \"Bilinear\": {\n      \"pytorch\": \"Bilinear\"\n    },\n    \"CELU\": {\n      \"pytorch\": \"CELU\"\n    },\n    \"Concatenate\": {\n      \"pytorch\": \"Concatenate\",\n      \"tensorflow\": \"Concatenate\"\n    },\n    \"ConstantPad1d\": {\n      \"pytorch\": \"ConstantPad1d\"\n    },\n    \"ConstantPad2d\": {\n      \"pytorch\": \"ConstantPad2d\"\n    },\n    \"ConstantPad3d\": {\n      \"pytorch\": \"ConstantPad3d\"\n    },\n    \"Conv1d\": {\n      \"pytorch\": \"Conv1d\",\n      \"tensorflow\": \"Conv1D\"\n    },\n    \"Conv2d\": {\n      \"pytorch\": \"Conv2d\",\n      \"tensorflow\": \"Conv2D\"\n    },\n    \"Conv3d\": {\n      \"pytorch\": \"Conv3d\",\n      \"tensorflow\": \"Conv3D\"\n    },\n    \"ConvLSTM2D\": {\n      \"tensorflow\": \"ConvLSTM2D\"\n    },\n    \"ConvTranspose1d\": {\n      \"pytorch\": \"ConvTranspose1d\"\n    },\n    \"ConvTranspose2d\": {\n      \"pytorch\": \"ConvTranspose2d\",\n      \"tensorflow\": \"Conv2DTranspose\"\n    },\n    \"ConvTranspose3d\": {\n      \"pytorch\": \"ConvTranspose3d\",\n      \"tensorflow\": \"Conv3DTranspose\"\n    },\n    \"Cropping1D\": {\n      \"tensorflow\": \"Cropping1D\"\n    },\n    \"Cropping2D\": {\n      \"tensorflow\": \"Cropping2D\"\n    },\n    \"Cropping3D\": {\n      \"tensorflow\": \"Cropping3D\"\n    },\n    \"Dense\": {\n      \"tensorflow\": \"Dense\"\n    },\n    \"DenseFeatures\": {\n      \"tensorflow\": \"DenseFeatures\"\n    },\n    \"DepthwiseConv2D\": {\n      \"tensorflow\": \"DepthwiseConv2D\"\n    },\n    \"Dot\": {\n      \"tensorflow\": \"Dot\"\n    },\n    \"Dropout\": {\n      \"pytorch\": \"Dropout\",\n      \"tensorflow\": \"Dropout\"\n    },\n    \"Dropout2d\": {\n      \"pytorch\": \"Dropout2d\"\n    },\n    \"Dropout3d\": {\n      \"pytorch\": \"Dropout3d\"\n    },\n    \"ELU\": {\n      \"pytorch\": \"ELU\",\n      \"tensorflow\": \"ELU\"\n    },\n    \"Embedding\": {\n      \"pytorch\": \"Embedding\",\n      \"tensorflow\": \"Embedding\"\n    },\n    \"EmbeddingBag\": {\n      \"pytorch\": \"EmbeddingBag\"\n    },\n    \"Flatten\": {\n      \"pytorch\": \"Flatten\",\n      \"tensorflow\": \"Flatten\"\n    },\n    \"Fold\": {\n      \"pytorch\": \"Fold\"\n    },\n    \"FractionalMaxPool2d\": {\n      \"pytorch\": \"FractionalMaxPool2d\"\n    },\n    \"GRU\": {\n      \"pytorch\": \"GRU\",\n      \"tensorflow\": \"GRU\"\n    },\n    \"GRUCell\": {\n      \"pytorch\": \"GRUCell\",\n      \"tensorflow\": \"GRUCell\"\n    },\n    \"GaussianDropout\": {\n      \"tensorflow\": \"GaussianDropout\"\n    },\n    \"GaussianNoise\": {\n      \"tensorflow\": \"GaussianNoise\"\n    },\n    \"GlobalAveragePooling1D\": {\n      \"tensorflow\": \"GlobalAveragePooling1D\"\n    },\n    \"GlobalAveragePooling2D\": {\n      \"tensorflow\": \"GlobalAveragePooling2D\"\n    },\n    \"GlobalAveragePooling3D\": {\n      \"tensorflow\": \"GlobalAveragePooling3D\"\n    },\n    \"GlobalMaxPool1D\": {\n      \"tensorflow\": \"GlobalMaxPool1D\"\n    },\n    \"GlobalMaxPool2D\": {\n      \"tensorflow\": \"GlobalMaxPool2D\"\n    },\n    \"GlobalMaxPool3D\": {\n      \"tensorflow\": \"GlobalMaxPool3D\"\n    },\n    \"GroupNorm\": {\n      \"pytorch\": \"GroupNorm\"\n    },\n    \"Hardshrink\": {\n      \"pytorch\": \"Hardshrink\"\n    },\n    \"Hardtanh\": {\n      \"pytorch\": \"Hardtanh\"\n    },\n    \"Identity\": {\n      \"pytorch\": \"Identity\"\n    },\n    \"InputLayer\": {\n      \"tensorflow\": \"InputLayer\"\n    },\n    \"InputSpec\": {\n      \"tensorflow\": \"InputSpec\"\n    },\n    \"InstanceNorm1d\": {\n      \"pytorch\": \"InstanceNorm1d\"\n    },\n    \"InstanceNorm2d\": {\n      \"pytorch\": \"InstanceNorm2d\"\n    },\n    \"InstanceNorm3d\": {\n      \"pytorch\": \"InstanceNorm3d\"\n    },\n    \"LPPool1d\": {\n      \"pytorch\": \"LPPool1d\"\n    },\n    \"LPPool2d\": {\n      \"pytorch\": \"LPPool2d\"\n    },\n    \"LSTM\": {\n      \"pytorch\": \"LSTM\",\n      \"tensorflow\": \"LSTM\"\n    },\n    \"LSTMCell\": {\n      \"pytorch\": \"LSTMCell\",\n      \"tensorflow\": \"LSTMCell\"\n    },\n    \"Lambda\": {\n      \"tensorflow\": \"Lambda\"\n    },\n    \"Layer\": {\n      \"tensorflow\": \"Layer\"\n    },\n    \"LayerNorm\": {\n      \"pytorch\": \"LayerNorm\"\n    },\n    \"LeakyReLU\": {\n      \"pytorch\": \"LeakyReLU\",\n      \"tensorflow\": \"LeakyReLU\"\n    },\n    \"Linear\": {\n      \"pytorch\": \"Linear\",\n      \"tensorflow\": \"Dense\"\n    },\n    \"LinearModel\": {\n      \"tensorflow\": \"LinearModel\"\n    },\n    \"LocalResponseNorm\": {\n      \"pytorch\": \"LocalResponseNorm\"\n    },\n    \"LocallyConnected1D\": {\n      \"tensorflow\": \"LocallyConnected1D\"\n    },\n    \"LocallyConnected2D\": {\n      \"tensorflow\": \"LocallyConnected2D\"\n    },\n    \"LogSigmoid\": {\n      \"pytorch\": \"LogSigmoid\"\n    },\n    \"LogSoftmax\": {\n      \"pytorch\": \"LogSoftmax\"\n    },\n    \"Masking\": {\n      \"tensorflow\": \"Masking\"\n    },\n    \"MaxPool1d\": {\n      \"pytorch\": \"MaxPool1d\",\n      \"tensorflow\": \"MaxPool1D\"\n    },\n    \"MaxPool2d\": {\n      \"pytorch\": \"MaxPool2d\",\n      \"tensorflow\": \"MaxPool2D\"\n    },\n    \"MaxPool3d\": {\n      \"pytorch\": \"MaxPool3d\",\n      \"tensorflow\": \"MaxPool3D\"\n    },\n    \"MaxUnpool1d\": {\n      \"pytorch\": \"MaxUnpool1d\"\n    },\n    \"MaxUnpool2d\": {\n      \"pytorch\": \"MaxUnpool2d\"\n    },\n    \"MaxUnpool3d\": {\n      \"pytorch\": \"MaxUnpool3d\"\n    },\n    \"Maximum\": {\n      \"pytorch\": \"Max\",\n      \"tensorflow\": \"Maximum\"\n    },\n    \"Mean\": {\n      \"pytorch\": \"Mean\"\n    },\n    \"Minimum\": {\n      \"tensorflow\": \"Minimum\"\n    },\n    \"MultiheadAttention\": {\n      \"pytorch\": \"MultiheadAttention\"\n    },\n    \"Multiply\": {\n      \"tensorflow\": \"Multiply\"\n    },\n    \"PReLU\": {\n      \"pytorch\": \"PReLU\",\n      \"tensorflow\": \"PReLU\"\n    },\n    \"Permute\": {\n      \"tensorflow\": \"Permute\"\n    },\n    \"RNN\": {\n      \"pytorch\": \"RNN\",\n      \"tensorflow\": \"RNN\"\n    },\n    \"RNNCell\": {\n      \"pytorch\": \"RNNCell\"\n    },\n    \"RReLU\": {\n      \"pytorch\": \"RReLU\"\n    },\n    \"ReLU\": {\n      \"pytorch\": \"ReLU\",\n      \"tensorflow\": \"ReLU\"\n    },\n    \"ReLU6\": {\n      \"pytorch\": \"ReLU6\"\n    },\n    \"ReflectionPad1d\": {\n      \"pytorch\": \"ReflectionPad1d\"\n    },\n    \"ReflectionPad2d\": {\n      \"pytorch\": \"ReflectionPad2d\"\n    },\n    \"RepeatVector\": {\n      \"tensorflow\": \"RepeatVector\"\n    },\n    \"ReplicationPad1d\": {\n      \"pytorch\": \"ReplicationPad1d\"\n    },\n    \"ReplicationPad2d\": {\n      \"pytorch\": \"ReplicationPad2d\"\n    },\n    \"ReplicationPad3d\": {\n      \"pytorch\": \"ReplicationPad3d\"\n    },\n    \"Reshape\": {\n      \"tensorflow\": \"Reshape\"\n    },\n    \"SELU\": {\n      \"pytorch\": \"SELU\"\n    },\n    \"SeparableConv1D\": {\n      \"tensorflow\": \"SeparableConv1D\"\n    },\n    \"SeparableConv2D\": {\n      \"tensorflow\": \"SeparableConv2D\"\n    },\n    \"Sigmoid\": {\n      \"pytorch\": \"Sigmoid\"\n    },\n    \"SimpleRNN\": {\n      \"tensorflow\": \"SimpleRNN\"\n    },\n    \"SimpleRNNCell\": {\n      \"tensorflow\": \"SimpleRNNCell\"\n    },\n    \"Softmax\": {\n      \"pytorch\": \"Softmax\",\n      \"tensorflow\": \"Softmax\"\n    },\n    \"Softmax2d\": {\n      \"pytorch\": \"Softmax2d\"\n    },\n    \"Softmin\": {\n      \"pytorch\": \"Softmin\"\n    },\n    \"Softplus\": {\n      \"pytorch\": \"Softplus\"\n    },\n    \"Softshrink\": {\n      \"pytorch\": \"Softshrink\"\n    },\n    \"Softsign\": {\n      \"pytorch\": \"Softsign\"\n    },\n    \"SpatialDropout1D\": {\n      \"tensorflow\": \"SpatialDropout1D\"\n    },\n    \"SpatialDropout2D\": {\n      \"tensorflow\": \"SpatialDropout2D\"\n    },\n    \"SpatialDropout3D\": {\n      \"tensorflow\": \"SpatialDropout3D\"\n    },\n    \"StackedRNNCells\": {\n      \"tensorflow\": \"StackedRNNCells\"\n    },\n    \"Subtract\": {\n      \"tensorflow\": \"Subtract\"\n    },\n    \"SyncBatchNorm\": {\n      \"pytorch\": \"SyncBatchNorm\"\n    },\n    \"Tanh\": {\n      \"pytorch\": \"Tanh\"\n    },\n    \"Tanhshrink\": {\n      \"pytorch\": \"Tanhshrink\"\n    },\n    \"Threshold\": {\n      \"pytorch\": \"Threshold\"\n    },\n    \"ThresholdedReLU\": {\n      \"tensorflow\": \"ThresholdedReLU\"\n    },\n    \"TimeDistributed\": {\n      \"tensorflow\": \"TimeDistributed\"\n    },\n    \"Unfold\": {\n      \"pytorch\": \"Unfold\"\n    },\n    \"UpSampling1D\": {\n      \"tensorflow\": \"UpSampling1D\"\n    },\n    \"UpSampling2D\": {\n      \"tensorflow\": \"UpSampling2D\"\n    },\n    \"UpSampling3D\": {\n      \"tensorflow\": \"UpSampling3D\"\n    },\n    \"Wrapper\": {\n      \"tensorflow\": \"Wrapper\"\n    },\n    \"ZeroPad2d\": {\n      \"pytorch\": \"ZeroPad2d\"\n    },\n    \"ZeroPadding1D\": {\n      \"tensorflow\": \"ZeroPadding1D\"\n    },\n    \"ZeroPadding2D\": {\n      \"tensorflow\": \"ZeroPadding2D\"\n    },\n    \"ZeroPadding3D\": {\n      \"tensorflow\": \"ZeroPadding3D\"\n    },\n    \"ResNet18\": {\n      \"pytorch\": \"resnet18\"\n    },\n    \"ResNet34\": {\n      \"pytorch\": \"resnet34\"\n    },\n    \"ResNet50\": {\n      \"pytorch\": \"resnet50\"\n    },\n    \"ResNet101\": {\n      \"pytorch\": \"resnet101\"\n    },\n    \"ResNet152\": {\n      \"pytorch\": \"resnet152\"\n    },\n    \"VGG11\": {\n      \"pytorch\": \"vgg11\"\n    },\n    \"VGG13\": {\n      \"pytorch\": \"vgg13\"\n    },\n    \"VGG16\": {\n      \"pytorch\": \"vgg16\"\n    },\n    \"VGG19\": {\n      \"pytorch\": \"vgg19\"\n    },\n    \"AlexNet\": {\n      \"pytorch\": \"alexnet\"\n    },\n    \"SqueezeNet1_0\": {\n      \"pytorch\": \"squeezenet1_0\"\n    },\n    \"SqueezeNet1_1\": {\n      \"pytorch\": \"squeezenet1_1\"\n    },\n    \"DenseNet121\": {\n      \"pytorch\": \"densenet121\"\n    },\n    \"DenseNet169\": {\n      \"pytorch\": \"densenet169\"\n    },\n    \"DenseNet161\": {\n      \"pytorch\": \"densenet161\"\n    },\n    \"DenseNet201\": {\n      \"pytorch\": \"densenet201\"\n    },\n    \"InceptionV3\": {\n      \"pytorch\": \"inception_v3\"\n    },\n    \"GoogLeNet\": {\n      \"pytorch\": \"googlenet\"\n    },\n    \"ShuffleNetV2_x0_5\": {\n      \"pytorch\": \"shufflenet_v2_x0_5\"\n    },\n    \"ShuffleNetV2_x1_0\": {\n      \"pytorch\": \"shufflenet_v2_x1_0\"\n    },\n    \"ShuffleNetV2_x1_5\": {\n      \"pytorch\": \"shufflenet_v2_x1_5\"\n    },\n    \"ShuffleNet\": {\n      \"pytorch\": \"shufflenet_v2_x2_0\"\n    },\n    \"MobileNetV2\": {\n      \"pytorch\": \"mobilenet_v2\"\n    },\n    \"ResNext50\": {\n      \"pytorch\": \"resnext50_32x4d\"\n    },\n    \"ResNext101\": {\n      \"pytorch\": \"resnext101_32x8d\"\n    },\n    \"Segmentation FCN ResNet50\": {\n      \"pytorch\": \"segmentation.fcn_resnet50\"\n    },\n    \"Segmentation FCN ResNet101\": {\n      \"pytorch\": \"segmentation.fcn_resnet101\"\n    },\n    \"Segmentation DeepLabV3 ResNet50\": {\n      \"pytorch\": \"segmentation.deeplabv3_resnet50\"\n    },\n    \"Segmentation DeepLabV3 ResNet101\": {\n      \"pytorch\": \"segmentation.deeplabv3_resnet101\"\n    },\n    \"Detection Faster R-CNN ResNet50\": {\n      \"pytorch\": \"detection.fasterrcnn_resnet50_fpn\"\n    },\n    \"Detection Mask R-CNN ResNet50\": {\n      \"pytorch\": \"detection.maskrcnn_resnet50_fpn\"\n    },\n    \"Keypoint R-CNN ResNet50\": {\n      \"pytorch\": \"detection.keypointrcnn_resnet50_fpn\"\n    }\n  }\n}","export function getPyTorchLibrary() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"n_classes\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"cutoffs\": {\n        \"type\": \"sequence\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"div_value\": {\n        \"type\": \"float\",\n        \"value\": 4.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"head_bias\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AlphaDropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Bilinear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in1_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"in2_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"CELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Concatenate\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Embedding\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_idx\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"EmbeddingBag\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mode\": {\n        \"type\": \"string\",\n        \"value\": \"'mean'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Flatten\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Fold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_ratio\": {\n        \"type\": \"float\",\n        \"value\": [\n          0.5,\n          0.5\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": 1\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRU\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRUCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GroupNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardtanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"min_val\": {\n        \"type\": \"float\",\n        \"value\": -1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_val\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Identity\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"InstanceNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTM\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTMCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LayerNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"normalized_shape\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"elementwise_affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LeakyReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"negative_slope\": {\n        \"type\": \"float\",\n        \"value\": 0.01,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Linear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocalResponseNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.0001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta\": {\n        \"type\": \"float\",\n        \"value\": 0.75,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"k\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LogSigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"LogSoftmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Max\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Mean\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MultiheadAttention\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"embed_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_heads\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"PReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_parameters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"init\": {\n        \"type\": \"float\",\n        \"value\": 0.25,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNN\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNNCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      }\n    },\n    \"RReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lower\": {\n        \"type\": \"float\",\n        \"value\": 0.125,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"upper\": {\n        \"type\": \"float\",\n        \"value\": 0.3333333333333333,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU6\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Sigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"1\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softmax2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmin\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softplus\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"beta\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 20,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softsign\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"SyncBatchNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Tanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Tanhshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Threshold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"threshold\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"value\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Unfold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"resnet18\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet34\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet152\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg11\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg13\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg16\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg19\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"alexnet\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"squeezenet1_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"squeezenet1_1\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet121\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet169\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet161\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet201\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"inception_v3\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"googlenet\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x0_5\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x1_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x1_5\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x2_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"mobilenet_v2\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnext50_32x4d\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnext101_32x8d\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.fcn_resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.fcn_resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.deeplabv3_resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.deeplabv3_resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.fasterrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.maskrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.keypointrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n  }\n}","export function getTensorFlowLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dynamic\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Activation\": {\n      \"activation\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ActivityRegularization\": {\n      \"l1\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"l2\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Add\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AlphaDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Average\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"BatchNormalization\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"epsilon\": {\n        \"type\": \"float\",\n        \"value\": 0.001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"center\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_mean_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_variance_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_clipping\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"fused\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"virtual_batch_size\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"adjustment\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Bidirectional\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"merge_mode\": {\n        \"type\": \"string\",\n        \"value\": \"concat\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"weights\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Concatenate\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ConvLSTM2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping1D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping2D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping3D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1,\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dense\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DenseFeatures\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DepthwiseConv2D\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dot\": {\n      \"axes\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"normalize\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Embedding\": {\n      \"input_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_dim\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask_zero\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"input_length\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Flatten\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRU\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRUCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianNoise\": {\n      \"stddev\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"InputSpec\": {\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"min_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"axes\": {\n        \"type\": \"string\",\n        \"value\": \"None)\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTM\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTMCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Lambda\": {\n      \"function\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"arguments\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Layer\": {\n      \")\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LeakyReLU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.3,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LinearModel\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse_combiner\": {\n        \"type\": \"string\",\n        \"value\": \"sum\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Masking\": {\n      \"mask_value\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Maximum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Minimum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Multiply\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"PReLU\": {\n      \"alpha_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shared_axes\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Permute\": {\n      \"dims\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RNN\": {\n      \"cell\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ReLU\": {\n      \"max_value\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"negative_slope\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RepeatVector\": {\n      \"n\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Reshape\": {\n      \"target_shape\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNN\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNNCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Softmax\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout1D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout2D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout3D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"StackedRNNCells\": {\n      \"cells\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Subtract\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ThresholdedReLU\": {\n      \"theta\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"TimeDistributed\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling1D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling2D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"interpolation\": {\n        \"type\": \"string\",\n        \"value\": \"nearest\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling3D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Wrapper\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding1D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding2D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding3D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    }\n  }\n}","export function getPyTorchAutoparams() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp.slice(0, inp.length - 1)\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AlphaDropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value)\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = 1 + ((inp[inp.length - 3] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[2] - p.kernel_size.value[2]) / p.stride.value[2])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 3] = Math.ceil(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 3] = Math.floor(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"BatchNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Bilinear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.out_features.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"CELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Concatenate\": {\n      outshape: (inp, p) => {\n        var tmp = inp[0]\n        inp.slice(1).map(row => {tmp[p.dim.value] += row[p.dim.value]})\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[0]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[1]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = inp[inp.length - 3] + 2 * p.padding.value[0]\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[1]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[2]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Conv1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"Conv2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"Conv3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"ConvTranspose1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = (L_in - 1) * p.stride.value + p.dilation.value * (p.kernel_size.value - 1) + p.output_padding.value + 1\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"ConvTranspose2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = (H_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const W_out = (W_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"ConvTranspose3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = (D_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const H_out = (H_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        const W_out = (W_in - 1) * p.stride.value[2] + p.dilation.value[2] * (p.kernel_size.value[2] - 1) + p.output_padding.value[2] + 1\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"Dropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Embedding\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        inp[inp.length - 1] = p.embedding_dim.value\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_embeddings.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"EmbeddingBag\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        tmp.push(p.embedding_dim.value)\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Flatten\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var features = 1/inp[0]\n        inp.map(val => {features *= val})\n        return [inp[0], Math.round(features)]\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_in\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"GRU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GRUCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GroupNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_channels.value = inp[1]\n        return p\n      }\n    },\n    \"Hardshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Identity\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"InstanceNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"LPPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var L_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value\n        if (p.ceil_mode.value) {\n          L_out = Math.ceil(L_out)\n        } else {\n          L_out = Math.floor(L_out)\n        }\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LPPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var H_out = 1 + (inp[inp.length - 2] + 2 * p.padding.value[0] - p.dilation[0] * (p.kernel_size[0] - 1) - 1) / p.stride.value[0]\n        var W_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value[1] - p.dilation[1] * (p.kernel_size[1] - 1) - 1) / p.stride.value[1]\n        if (p.ceil_mode.value) {\n          H_out = Math.ceil(H_out)\n          W_out = Math.ceil(W_out)\n        } else {\n          H_out = Math.floor(H_out)\n          W_out = Math.floor(W_out)\n        }\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LSTM\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LSTMCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LayerNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LeakyReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Linear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0;\n        var out_shape = inp.map((val, index) => {\n          idx = index;\n          return val\n        });\n        out_shape[idx] = p.out_features.value;\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_features.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"LocalResponseNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSoftmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Max\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        inp[inp.length - 1] = L_out;\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 1]\n        inp[inp.length - 1] = (H_in - 1) * p.stride.value - 2 * p.padding.value + p.kernel_size.value\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 3] = (D_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[2] - 2 * p.padding.value[2] + p.kernel_size.value[2]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Mean\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"PReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"RNN\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RNNCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU6\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let D_out = inp[inp.length - 3] + 2 * p.padding.value[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[1]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[2]\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Sigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmin\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softplus\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softsign\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SyncBatchNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Tanh\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Tanhshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Threshold\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ZeroPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_out = inp[inp.length - 2] + 2 * p.padding[0]\n        const W_out = inp[inp.length - 1] + 2 * p.padding[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"resnet18\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet34\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet152\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg11\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg13\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg16\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg19\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"alexnet\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"squeezenet1_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"squeezenet1_1\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet121\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet169\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet161\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet201\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"inception_v3\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"googlenet\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x0_5\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x1_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x1_5\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x2_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"mobilenet_v2\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnext50_32x4d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnext101_32x8d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.fcn_resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.fcn_resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.deeplabv3_resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.deeplabv3_resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.fasterrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.maskrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.keypointrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n  }\n}","import { MainLibrary } from \"./MainLibrary\";\n\n\n// Cascaded simplifying and de-simplifying\n\n// Parameters\nfunction SimplifyParameters(parameters) {\n  var new_parameters = [];\n  var keys = [];\n  Object.keys(parameters).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.sort().map((p_key, idx) => {\n    new_parameters.push(parameters[p_key].value)\n  })\n  new_parameters.push(parameters.extras)\n  return new_parameters\n}\nfunction DeSimplifyParameters(parameters, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  const recipe_copy = JSON.parse(JSON.stringify(recipe))\n  var new_param_lib = {};\n  var keys = [];\n  Object.keys(recipe).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.map(p_key => new_param_lib[p_key] = null)\n  keys.sort().map((p_key, idx) => {\n    new_param_lib[p_key] = recipe[p_key];\n    new_param_lib[p_key].value = parameters[idx];\n    if (new_param_lib[p_key].value === undefined) {\n      new_param_lib[p_key].value = recipe_copy[p_key].value\n    }\n  })\n  if (parameters[keys.length]) {\n    new_param_lib.extras = parameters[keys.length]\n  } else {\n    new_param_lib.extras = recipe.extras\n  }\n  return new_param_lib\n}\n\n// Content\nfunction SimplifyContent(content) {\n  var new_content = {};\n  Object.keys(content).sort().map((library_key, idx) => {\n    new_content[library_key] = [\n      content[library_key].reference,\n      SimplifyParameters(content[library_key].parameters)\n    ]\n  })\n  return new_content\n}\nfunction DeSimplifyContent(content, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  var new_content_lib = {}\n  Object.keys(recipe).sort().map((library_key, idx) => {\n    if (library_key in content) {\n      new_content_lib[library_key] = {\n        reference: content[library_key][0],\n        parameters: DeSimplifyParameters(content[library_key][1], recipe[library_key].parameters)\n      }\n    } else {\n      new_content_lib[library_key] = recipe[library_key]\n    }\n  })\n  return new_content_lib\n}\n\n// Outputs\nfunction SimplifyOutputs(outputs) {\n  var new_outputs = [];\n  Object.keys(outputs).sort().map(key => {\n    new_outputs.push(key)\n  })\n  return new_outputs\n}\nfunction DeSimplifyOutputs(outputs) {\n  var new_outputs_lib = {};\n  outputs.map(key => {\n    new_outputs_lib[key] = {}\n  })\n  return new_outputs_lib\n}\n\n// Position\nfunction SimplifyPosition(pos) {\n  return [\n    pos.x,\n    pos.y\n  ]\n}\nfunction DeSimplifyPosition(pos) {\n  return {\n    x: pos[0],\n    y: pos[1]\n  }\n}\n\n// Entire flowpoint\nfunction SimplifyFlowpoint(flowpoint) {\n  var new_flowpoint = {\n    ref: flowpoint.base_ref,\n    name: flowpoint.name,\n    isout: flowpoint.is_output,\n    out: SimplifyOutputs(flowpoint.outputs),\n    pos: SimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs,\n    concat_dim: flowpoint.concat_dim,\n    cont: {},\n    contig: flowpoint.contiguous,\n    re_ndims: flowpoint.reshape_ndims,\n    re_dims: flowpoint.reshape_dims\n  }\n  if (flowpoint.base_ref === 'Input') {\n    new_flowpoint.cont = flowpoint.content;\n  } else {\n    new_flowpoint.cont = SimplifyContent(flowpoint.content)\n  }\n  return new_flowpoint\n}\nfunction DeSimplifyFlowpoint(flowpoint, getEmptyFlowpointContent) {\n  const recipe = getEmptyFlowpointContent(flowpoint.ref);\n  var new_flowpoint_lib = {\n    base_ref: flowpoint.ref,\n    name: flowpoint.name,\n    is_output: flowpoint.isout,\n    outputs: DeSimplifyOutputs(flowpoint.out),\n    pos: DeSimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs || false,\n    concat_dim: flowpoint.concat_dim || 0,\n    output_shape: [],\n    content: {},\n    contiguous: flowpoint.contig || false,\n    reshape_ndims: flowpoint.re_ndims || 0,\n    reshape_dims: flowpoint.re_dims || []\n  };\n  if (flowpoint.ref === 'Input') {\n    new_flowpoint_lib.content = flowpoint.cont;\n  } else {\n    new_flowpoint_lib.content = DeSimplifyContent(flowpoint.cont, recipe, flowpoint.ref === 'Softmax')\n  }\n  return new_flowpoint_lib\n}\n\n// Fix tuples\nfunction FixTuples(flowpoints) {\n  Object.keys(flowpoints).map(key => {\n    var point = flowpoints[key];\n    if (point.base_ref !== 'Input') {\n      Object.keys(point.content).map(lib_key => {\n        var content = flowpoints[key].content[lib_key];\n        Object.keys(content.parameters).map(param_key => {\n          var param = flowpoints[key].content[lib_key].parameters[param_key];\n          if (param.istuple && !Array.isArray(param.value)) {\n\n            if (point.base_ref.toLowerCase().includes('1d')) {\n              param.value = [param.value];\n            } else if (point.base_ref.toLowerCase().includes('2d')) {\n              param.value = [param.value, param.value]\n            } else if (point.base_ref.toLowerCase().includes('3d')) {\n              param.value = [param.value, param.value, param.value]\n            }\n\n            if (!Array.isArray(param.value)) {\n              var sample_tuple = null;\n              Object.keys(content).map(param_key_2 => {\n                const p2 = content[param_key_2];\n                if (p2.istuple && Array.isArray(p2.value)) sample_tuple = p2.value.map(val => 1 * val)\n              })\n            }\n\n            if (!Array.isArray(param.value)) console.log('Could not fix', point)\n\n          }\n        })\n      })\n    }\n  })\n  return flowpoints\n}\n\n// Flowpoints (like plural)\nfunction SimplifyFlowpoints(flowpoints) {\n  var new_flowpoints = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints[key] = SimplifyFlowpoint(flowpoints[key])\n  })\n  return new_flowpoints\n}\nfunction DeSimplifyFlowpoints(flowpoints, getEmptyFlowpointContent) {\n  var new_flowpoints_lib = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints_lib[key] = DeSimplifyFlowpoint(flowpoints[key], getEmptyFlowpointContent)\n  })\n  return FixTuples(new_flowpoints_lib)\n}\n\n// Environment\nfunction SimplifyEnvironment(env) {\n  return [\n    env.library,\n    env.notes,\n    env.batch_first,\n    env.modelname,\n    env.include_training\n  ]\n}\nfunction DeSimplifyEnvironment(env, main_env) {\n  var new_env_lib = JSON.parse(JSON.stringify(main_env));\n  new_env_lib.library = '' + env[0]\n  new_env_lib.notes = '' + env[1]\n  new_env_lib.batch_first = env[2] || false\n  new_env_lib.modelname = env[3] || 'NeuralNet'\n  new_env_lib.include_training = env[4] || true\n  new_env_lib.autoparams = main_env.autoparams\n  return new_env_lib\n}\n\n// Visual\nfunction SimplifyVisual(vis) {\n  return [\n    vis.darkTheme,\n    vis.theme,\n    vis.background,\n    vis.variant,\n    vis.drawerOpen,\n    vis.showShape,\n    vis.showName,\n    vis.snap\n  ]\n}\nfunction DeSimplifyVisual(vis, main_vis) {\n  var new_vis_lib = JSON.parse(JSON.stringify(main_vis));\n  new_vis_lib.darkTheme = vis[0]\n  new_vis_lib.theme = vis[1]\n  new_vis_lib.background = vis[2]\n  new_vis_lib.variant = vis[3]\n  new_vis_lib.drawerOpen = vis[4]\n  new_vis_lib.showShape = vis[5]\n  new_vis_lib.showName = vis[6]\n  new_vis_lib.snap = vis[7]\n  return new_vis_lib\n}\n\n// Settings\nfunction SimplifySettings(settings) {\n  return [\n    settings.modelID,\n    settings.count,\n    settings.lastPos\n  ]\n}\nfunction DeSimplifySettings(settings, main_set) {\n  var new_set_lib = JSON.parse(JSON.stringify(main_set));\n  new_set_lib.modelID = settings[0]\n  new_set_lib.count = settings[1]\n  new_set_lib.lastPos = settings[2]\n  return new_set_lib\n}\n\n// Try to parse json\nfunction TryParseJSON(msg) {\n  try {\n    return JSON.parse(msg)\n  } catch(err) {}\n  return msg\n}\n\n// Full\nfunction Simplify(state) {\n  return {\n    flowpoints: SimplifyFlowpoints(state.flowpoints),\n    environment: SimplifyEnvironment(state.environment),\n    visual: SimplifyVisual(state.visual),\n    settings: SimplifySettings(state.settings),\n  }\n}\nfunction DeSimplify(state, getEmptyFlowpointContent, main_lib) {\n  state = TryParseJSON(state)\n  //var main_lib = MainLibrary();\n  return {\n    flowpoints: DeSimplifyFlowpoints(state.flowpoints, getEmptyFlowpointContent),\n    environment: DeSimplifyEnvironment(state.environment, main_lib.environment),\n    visual: DeSimplifyVisual(state.visual, main_lib.visual),\n    settings: DeSimplifySettings(state.settings, main_lib.settings),\n    notification: main_lib.notification\n  }\n}\n\n\nexport function Library2String(state) {\n\n  return JSON.stringify(Simplify(state))\n\n}\n\n\nexport function String2Library(msg, getEmptyFlowpointContent, main_lib) {\n  \n  return DeSimplify(msg, getEmptyFlowpointContent, main_lib)\n\n}","var axios = require('axios');\n\nfunction rjust(msg, n, rep) {\n  msg = '' + msg\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(() => {\n    msg = rep + msg\n  })\n  return msg\n}\n\n\nfunction num2bigBase(num, lib) {\n  if (!lib) {\n    lib = '0123456789'\n    lib += 'abcdefghijklmnopqrstuvwxyz'\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  }\n  if (num < lib.length) {\n    return lib[num]\n  } else {\n    return num2bigBase(Math.floor(num / lib.length)) + lib[num % lib.length]\n  }\n}\n\n\nfunction getId(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var lib = '0123456789'\n  lib += 'abcdefghijklmnopqrstuvwxyz'\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var msg = ''\n  msg += Math.round(Math.random() * 100)\n  var d = new Date()\n  msg += rjust(d.getSeconds(), 2, 0)\n  msg += rjust(d.getMinutes(), 2, 0)\n  msg += rjust(d.getHours(), 2, 0)\n  msg += rjust(d.getDate(), 2, 0)\n  msg += rjust(d.getMonth(), 2, 0)\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\n  msg = num2bigBase(msg, lib)\n  Array.from(Array(l - msg.length).keys()).map(() => {\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\n  })\n  return msg\n}\n\n\nexport function PostToDataBase(data, cb) {\n  let model_id = getId(12)\n  data.match(/.{1,5000}/g).map((msg, idx) => {\n    try {\n      var url = 'https://docs.google.com/forms/d/e/1FAIpQLSfA4C6HCBGWLtdfUI4th6VDR7cjtSsj0fp0Tomw96CbgqjO9g/formResponse?usp=pp_url'\n      url += '&entry.1116133740=' + model_id;\n      url += '&entry.1405886587=' + msg + '_NnUuMmBbEeRr_' + rjust('' + idx, 4, '0');\n      url += '&submit=Submit'\n      axios.get(url).then(() => {})\n    } catch(err) {}\n  })\n  if (cb) cb(model_id)\n}\n\n\nexport function LoadDataBase(cb) {\n  axios.get('https://docs.google.com/spreadsheets/d/10LoweeCDvGHQBHb8Plr_1IrLXPy4-N7CFqzcO73MqCs/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0').then(res => {\n    var data = {};\n    var concat_data = {};\n    var raw = res.data.split('\\r\\n');\n    var tmp;\n    for (var idx = 1; idx < raw.length; idx++) {\n      tmp = raw[idx].split(',')\n      if (!(tmp[0] in concat_data)) concat_data[tmp[0]] = {}\n      var number = tmp[1].substring(tmp[1].length - 18)\n      if (number.includes('NnUuMmBbEeRr')) concat_data[tmp[0]][number] = tmp[1].substring(0, tmp[1].length - 18)\n    }\n    // Concating data\n    Object.keys(concat_data).map(key => {\n      data[key] = ''\n      Object.keys(concat_data[key]).sort().map(msg => {\n        data[key] += concat_data[key][msg]\n      })\n    })\n    if (cb) cb(data)\n  })\n}","var CryptoJS = require(\"crypto-js\");\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nfunction getSpecialsLib(reversed) {\n  var lib = {\n    '§': '%C2%A7',\n    '\"': '%22',\n    '#': '%23',\n    '%': '%25',\n    '&': '%26',\n    '=': '%3D',\n    '`': '%60',\n    '^': '%5E',\n    '+': '%2B',\n    '´': '%C2%B4',\n    '¨': '%C2%A8'\n  }\n  if (reversed) {\n    var revlib = {}\n    Object.keys(lib).map(key => {\n      revlib[lib[key]] = key\n    })\n    return revlib\n  }\n  return lib\n}\n\n\nexport function Encrypt(data, key) {\n  var toEncrypt = {\n    test_string: 'there_are_fish_in_the_ocean',\n    data: data\n  }\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(toEncrypt), key).toString()\n  const specials = getSpecialsLib()\n  Object.keys(specials).map(key => {\n    encrypted = ReplaceAll(encrypted, key, specials[key])\n  })\n  return encrypted\n}\n\n\nexport function Decrypt(data, key) {\n  var msg = data\n  const specials = getSpecialsLib(true)\n  Object.keys(specials).map(key => {\n    msg = ReplaceAll(msg, key, specials[key])\n  })\n  var decrypted = '';\n  try {\n    decrypted = CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8)\n  } catch(err) {\n    return false\n  }\n  if (decrypted.includes('there_are_fish_in_the_ocean')) {\n    return JSON.parse(decrypted).data\n  }\n  return false\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\n\n\nclass WhatIsThis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    }\n  }\n  render() {\n    return (\n      <div style={{padding:0}}>\n        <Button color='primary' style={{textTransform:'none', padding:'1', marginLeft:-7}} onClick={() => {this.setState({open:!this.state.open}); this.props.onClick()}}>\n          What is this?\n        </Button>\n        <div style={{marginLeft:20, marginTop:10}} onClick={() => {this.setState({open:false}); this.props.onClick()}}>\n          <Collapse in={this.state.open}>\n            <Typography color='inherit' paragraph>Model protection, using AES encryption.</Typography>\n            <Typography color='inherit' paragraph>\n              When a model is saved, it's content is converted to a string and stored in a\n              publicly view-able google sheet.<br/>\n              Altough anyone can see the model in this google sheet, encryption will make it\n              impossible for anyone without the password to read the model.\n            </Typography>\n            <Typography color='inherit' paragraph>\n              If you choose to encrypt your model, your own device will perform the\n              encryption, and then send the encrypted model to the google sheet.<br/><br/>\n\n              When you try to load an encrypted model, the encrypted string will be downloaded\n              from the google sheet, and then decrypted by your device.<br/><br/>\n              This ensures point-to-point encryption, in which no un-encrypted data is ever\n              transmitted over the internet.\n            </Typography>\n            <Typography color='inherit' style={{fontWeight:'bold'}} paragraph>\n              NB!<br/>\n              The password is NEVER STORED! If you forget your password, the contents\n              of your model cannot be recovered.\n            </Typography>\n          </Collapse>\n        </div>\n        <br/>\n      </div>\n    )\n  }\n}\n\n\nexport class LoadDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Encrypted model</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please type your password in order to decrypt the model<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (this.state.pswd === '') {\n                this.props.onClose()\n              } else {\n                this.props.onSubmit(this.state.pswd)\n              }\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'CONTINUE WITHOUT LOADING MODEL') : 'DECRYPT MODEL'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\n\nexport class SaveDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Model encryption (optional)</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Type a password to encrypt your model, or leave the\n            password field empty in order to create a public link<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) this.props.onSubmit(this.state.pswd)\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              this.props.onSubmit(this.state.pswd)\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'Continue without password') : 'Continue'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}","import React from 'react';\nimport { Typography, Dialog, DialogTitle, DialogContentText, DialogContent, ExpansionPanel, ExpansionPanelSummary, Stepper, StepContent, StepLabel, Step, Link } from \"@material-ui/core\";\n\n\nexport class HelpDialog extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { step:0 }\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo(idx) {\n    this.setState({ step:idx })\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        fullWidth\n        maxWidth='sm'\n        style={{maxHeight:'90vh', height:'auto'}}>\n\n        <DialogTitle>Getting started</DialogTitle>\n\n        <div style={{overflow:'scroll', width:'100%'}}>\n\n          <DialogContent>\n            <DialogContentText>\n              Welcome to Flowpoints ML!<br/>\n              Here you can design deep learning models graphically.<br/><br/>\n              The following few sections will help you get going :)<br/>\n              You can also check out the <Link href='https://github.com/mariusbrataas/flowpoints_ml#readme' target='_blank'>documentation</Link> for more information.<br/><br/>\n              Found an bug? Please open a new <Link href=\"https://github.com/mariusbrataas/flowpoints_ml/issues\" target='_blank'>issue</Link>, and feel free to fix it!\n            </DialogContentText>\n          </DialogContent>\n\n          <Stepper activeStep={this.state.step} orientation='vertical'>\n\n            <Step key={0} completed={false}>\n              <StepLabel onClick={() => {this.goTo(0)}}>The main parts of the screen</StepLabel>\n              <StepContent>\n                <Typography>\n                  Before we get started you should know the main parts of this tool.<br/><br/>\n                  \n                  The little stack of colored buttons:<br/>\n                  You'll use these for creating new flowpoints, copy the entire code of your model,\n                  create shareable links to your model, show/hide the panel on the left of your screen,\n                  and to view this guide.<br/><br/>\n                  \n                  The \"Misc\" tab in the side panel:<br/>\n                  Here you can change what library you want to utilize to create your model,\n                  write some notes about your work, and change the appearance of things.\n                  \n                  The \"Code\" tab in the side panel:<br/>\n                  When you create a model, it's corresponding code will be displayed here.<br/><br/>\n                  \n                  The \"Flowpoint\" tab:<br/>\n                  All parameters of the selected flowpoint can be viewed and changed in this tab.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={1} completed={false}>\n              <StepLabel onClick={() => {this.goTo(1)}}>Creating a new flowpoint</StepLabel>\n              <StepContent>\n                <Typography>\n                  Click the + button in the button stack. This should create a new\n                  flowpoint on your screen and move focus to this one automatically.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={2} completed={false}>\n              <StepLabel onClick={() => {this.goTo(2)}}>Connecting flowpoints</StepLabel>\n              <StepContent>\n                <Typography>\n                  First create two flowpoints.<br/>\n                  Did they create a connection automatically? No worries, that is supposed\n                  to happen whenever you create a flowpoint while another flowpoint is selected.<br/><br/>\n                  To create a new connection manually, start by selecting the flowpoint\n                  you want to get the output from. Next, hold shift while clicking the flowpoint\n                  that should receive the output. Poof! They're connected!<br/><br/>\n                  Disconnecting flowpoints is just as simple. Select the flowpoint that supplies the output,\n                  hold shift, and click the flowpoint that's receiving the input.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={3} completed={false}>\n              <StepLabel onClick={() => {this.goTo(3)}}>Direction of connections</StepLabel>\n              <StepContent>\n                <Typography>\n                  All connections between flowpoints signify what direction data is moving.<br/><br/>\n                  When connecting two flowpoints, the first flowpoint you select will be used as\n                  the \"sender\" in that connection, while the second flowpoint will be the \"receiver\".<br/><br/>\n                  The color-gradient of connections help identify which is which.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={4} completed={false}>\n              <StepLabel onClick={() => {this.goTo(4)}}>Changing a flowpoint's parameters</StepLabel>\n              <StepContent>\n                <Typography>\n                  If you head over to the \"Flowpoint\" tab you should see a bunch of fields\n                  (click on a flowpoint if you can't see any such fields).<br/><br/>\n                  To change the value of a field, click it, and try typing something.\n                  Note that some fields will only accept numbers.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={5} completed={false}>\n              <StepLabel onClick={() => {this.goTo(5)}}>Layer types</StepLabel>\n              <StepContent>\n                <Typography>\n                  The field at the very top in the \"Flowpoint\" tab is where you assign\n                  a layer type to your flowpoint.<br/><br/>\n                  When you click this field, a long list will pop up. These are all\n                  the layers available. Small, colored badges indicate what libraries the\n                  layer is available in, i.e. TF for TensorFlow, or PT for PyTorch.<br/><br/>\n                  If you start typing the name of a layer, the list will try to suggest a smaller selection of layers.<br/><br/>\n                  Ideally, it should be possible to create models utilizing layers that are available\n                  in either library, and quickly switch between them by just changing the \"Library\" field\n                  in the \"Misc\" tab.<br/>\n                  This won't always be the case, but entertain this idea, paramaters from all libraries\n                  will be stored whenever you create a link to your model.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={6} completed={false}>\n              <StepLabel onClick={() => {this.goTo(6)}}>Changing appearance</StepLabel>\n              <StepContent>\n                <Typography>\n                  Head over to the \"Misc\" tab. You'll see the fields \"Theme\" and \"Variant\",\n                  and a couple of buttons just beneath.<br/><br/>\n                  These have no practical application what-so-ever, but you'll be able to\n                  create deep learning models with style! I recommend trying the theme \"orange\"\n                  with the variant \"paper\".<br/><br/>\n                  Play arround till you find something you like. When you share a model, any\n                  changes to it's appearance will be included.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={7} completed={false}>\n              <StepLabel onClick={() => {this.goTo(7)}}>Sharing</StepLabel>\n              <StepContent>\n                <Typography>\n                  Ready to show off your work?<br/><br/>\n                  Click the button in the button stack showing a link. This should open a new box on your\n                  screen, asking wether you'd like to encrypt your model.<br/><br/>\n                  Adding encryption will ensure that no one without the correct password can open your model.<br/><br/>\n                  If you want to create a public link, just leave the text field empty and click continue.<br/><br/>\n                  The link will be copied to your clip-board, and the current URL should at the top of your\n                  browser will change in order to match the link.<br/><br/>\n                  If you chose to add a password, this password will be requested the next time you open your model.<br/><br/>\n                  Note that if you forget your password, the data of your model can be considered lost.\n                  Your password is not stored anywhere, and there exists no other keys that can decrypt your data.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={8} completed={false}>\n              <StepLabel onClick={() => {this.goTo(8)}}>Examples</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=KlHpdLzP3SDx\" target=\"_blank\">TensorFlow CNN used for the CIFAR10 example</Link><br/>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=9fehu18ra4ty\" target=\"_blank\">PyTorch CNN used for the CIFAR10 example</Link>\n                </Typography>\n              </StepContent>\n            </Step>\n\n          </Stepper>\n        </div>\n      </Dialog>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\n// Importing installed tools\nimport { Flowpoint, Flowspace } from 'flowpoints';\nimport copy from 'copy-to-clipboard';\n\n\n// Importing local tools\nimport { Sidebar } from './sidebar/Sidebar.js';\nimport { MainButtons } from './MainButtons';\nimport { Parser } from './parser/Parser';\nimport { Library2String, String2Library } from './LibraryParser';\nimport { PostToDataBase, LoadDataBase } from './DataBaseHandler';\nimport { Encrypt, Decrypt } from './Cryptographer';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { LoadDialog, SaveDialog } from './PasswordDialog.js';\nimport { MainLibrary } from './MainLibrary';\nimport { HelpDialog } from './HelpDialog';\n\n\nfunction shapeBox(shape) {\n  var msg = '['\n  shape.map(val => {\n    msg += val + ','\n  })\n  if (shape.length > 0) msg = msg.substring(0, msg.length - 1)\n  msg += ']'\n  return (\n    <div style={{textAlign:'center', paddingBottom:'10px'}}>\n      {\n        msg\n      }\n    </div>\n  )\n}\n\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props);\n\n    // Building state library\n    this.state = MainLibrary()\n\n    // Helpers\n    this.diagramRef = null;\n\n    // Binding class methods\n    this.showNotification = this.showNotification.bind(this);\n    this.updateCode = this.updateCode.bind(this);\n    this.updateAvailableLayers = this.updateAvailableLayers.bind(this);\n    this.prepOutputShapes = this.prepOutputShapes.bind(this);\n    this.loadDecryptedModel = this.loadDecryptedModel.bind(this);\n    this.getEmptyFlowpointContent = this.getEmptyFlowpointContent.bind(this);\n    this.addFlowpoint = this.addFlowpoint.bind(this);\n    this.copyCode = this.copyCode.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.showHideHelp = this.showHideHelp.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.deleteFlowpoint = this.deleteFlowpoint.bind(this);\n    this.deleteSelected = this.deleteSelected.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n\n  \n  componentDidMount() {\n\n    // Open drawer\n    var visual = this.state.visual;\n    visual.drawerOpen = true;\n    this.setState({visual});\n\n    // Loading model?\n    var query = window.location.href.split(this.state.settings.baseUrl)[1]\n    if (query.includes('p=')) {\n\n      query = query.substring(query.indexOf('p=') + 2, query.length)\n      query = query.substring(0, 12)\n\n      // Notify user that model is trying to load\n      this.showNotification('Trying to load model...', 'info')\n\n      // Loading database\n      LoadDataBase(data => {\n\n        // Model in data?\n        if (query in data) {\n          var decrypted = Decrypt(data[query], 'Hello world')\n          // Encryption?\n          if (decrypted) {\n            this.loadDecryptedModel(decrypted, query)\n          } else {\n            this.showNotification('Model is encrypted')\n            var visual = this.state.visual;\n            var environment = this.state.environment;\n            var settings = this.state.settings;\n            settings.modelID = query;\n            environment.encrypted_model = data[query]\n            visual.show_load_dialog = true;\n            this.setState({visual, environment, settings})\n          }\n\n        } else {\n          this.showNotification('Could not find model in database', 'error')\n        }\n\n      })\n\n    }\n\n    // Updating available layers\n    this.updateAvailableLayers()\n\n  }\n\n\n  showNotification(msg, color) {\n    if (!((color || 'nothing').includes('#'))) {\n      switch(color) {\n        case 'info':\n          color = '#2979ff'\n          break;\n        case 'error':\n          color = '#dd2c00'\n          break;\n        case 'warning':\n          color = '#ffd600'\n          break;\n        case 'success':\n          color = '#00b843'\n          break;\n        default:\n          color = '#37474f'\n      }\n    }\n    var notification = this.state.notification;\n    notification.queue.push({\n      msg,\n      color,\n      key: new Date().getTime()\n    })\n    if (notification.show) {\n      notification.show = false;\n    } else {\n      if (notification.queue.length) {\n        notification.content = notification.queue.shift()\n        notification.show = true\n      }\n    }\n    this.setState({notification})\n  }\n\n\n  updateCode(cb) {\n    var environment = this.state.environment;\n    let tmp = Parser(this.state)\n    environment.code = tmp.msg;\n    environment.order = tmp.order;\n    environment.dummies = tmp.dummies;\n    this.setState({environment})\n    this.prepOutputShapes();\n    if (cb) cb(environment.code)\n  }\n\n\n  updateAvailableLayers() {\n\n    var environment = this.state.environment;\n\n    // Creating list\n    var availableLayers = {Input: Object.keys(environment.libraryFetchers)};\n    Object.keys(environment.baseLib).map(layer_key => {\n      availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\n    })\n\n    // Updating environment\n    environment.availableLayers = availableLayers;\n\n    // Updating state\n    this.setState({environment})\n\n  }\n\n\n  prepOutputShapes(cb) {\n\n    if (this.state.environment.library in this.state.environment.autoparams) {\n\n      // Helpers\n      const autoparams = this.state.environment.autoparams[this.state.environment.library]();\n      var flowpoints = this.state.flowpoints;\n      var dummies = this.state.environment.dummies;\n      const order = this.state.environment.order;\n      const library = this.state.environment.library;\n\n      // Setting output-shapes of inputs\n      var visited = []\n      order.map(key => {\n        var point = flowpoints[key]\n        if (point.base_ref === 'Input') {\n          point.output_shape = Object.keys(point.content.dimensions).map(dimkey => {\n            return parseInt(point.content.dimensions[dimkey])\n          })\n          visited.push(key)\n        }\n      })\n\n      // Setting all output-shapes\n      order.map(key => {\n        if (!visited.includes(key)) {\n          var point = flowpoints[key];\n          if (point.content[library]) {\n            var tmp_autoparams = autoparams[point.content[library].reference];\n            if (tmp_autoparams) {\n              var bestInp = null\n              var all_inps = []\n              dummies[key].inputs.map(inp_key => {\n                if (visited.includes(inp_key)) {\n                  bestInp = inp_key\n                  all_inps.push(flowpoints[inp_key].output_shape.map(value => 1 * value))\n                }\n              })\n              if (flowpoints[bestInp]) {\n                const prevshape = flowpoints[bestInp].output_shape.map(value => 1 * value);\n                point.content[library].parameters = tmp_autoparams.autoparams(all_inps, point.content[library].parameters)\n                point.output_shape = tmp_autoparams.outshape(all_inps, point.content[library].parameters).map(value => parseInt(value))\n                visited.push(key)\n              }\n            }\n          } else {\n            point.output_shape = []\n          }\n        }\n      })\n\n      // Updating state\n      this.setState({ flowpoints })\n\n    }\n\n  }\n\n\n  loadDecryptedModel(decrypted, model_id) {\n\n    // Parsing\n    var new_state = String2Library(decrypted, this.getEmptyFlowpointContent, this.state)\n\n    // Updating visual\n    new_state.visual.show_load_dialog = false;\n    new_state.visual.load_dialog_error = false;\n    new_state.visual.show_save_dialog = false;\n\n    // Ensuring getbaselib and library fetchers are added\n    new_state.environment.getBaseLibrary = this.state.environment.getBaseLibrary\n    new_state.environment.libraryFetchers = this.state.environment.libraryFetchers\n\n    // Fixing model ID\n    new_state.settings.modelID = model_id || this.state.settings.modelID;\n\n    // Setting state\n    this.setState({flowpoints:{}, settings:{...this.state.settings, count:0}}, () => {\n      this.setState(new_state, () => {\n        // Showing notification\n        this.showNotification('Loaded model', '#00b24a')\n  \n        // Updating code and layers\n        this.updateAvailableLayers()\n        this.updateCode()\n      })\n    })\n\n  }\n\n\n  getEmptyFlowpointContent(base_ref) {\n\n    // Input nodes are treated differently from all other nodes\n    if (base_ref === 'Input') {\n      return {\n        n_dims: 4,\n        dimensions: {\n          0: 1,\n          1: 1,\n          2: 1,\n          3: 1\n        }\n      }\n    }\n\n    // Not an input node? Getting base_library references\n    var environment = this.state.environment;\n    const base_point = environment.getBaseLibrary()[base_ref];\n\n    // Adding contents and returning\n    var content = {};\n    Object.keys(base_point).map(library_key => {\n      if (library_key in environment.libraryFetchers) {\n        content[library_key] = {\n          reference: base_point[library_key],\n          parameters: environment.libraryFetchers[library_key]()[base_point[library_key]]\n        }\n      }\n    })\n    return content\n\n  }\n\n\n  addFlowpoint() {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Creating flowpoint\n    const base_ref = settings.count === 0 ? 'Input' : 'Linear';\n    var newPoint = {\n      base_ref: base_ref,\n      name: '',\n      outputs: {},\n      is_output: false,\n      concat_inputs: false,\n      concat_dim: 0,\n      output_shape: [],\n      contiguous: false,\n      reshape_ndims: 0,\n      reshape_dims: [],\n      pos: {\n        x: settings.lastPos.x,\n        y: settings.lastPos.y + 90\n      },\n      content: this.getEmptyFlowpointContent(base_ref)\n    }\n\n    // Adding flowpoint\n    flowpoints['' + settings.count] = newPoint;\n\n    // Connecting previously selected flowpoint to this one (maybe)\n    if (settings.selected) flowpoints[settings.selected].outputs['' + settings.count] = {}\n\n    // Updating settings\n    settings.selected = '' + settings.count\n    settings.count += 1\n    settings.lastPos = {\n      x: settings.lastPos.x,\n      y: settings.lastPos.y + 90\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n    this.updateCode()\n\n  }\n\n\n  copyCode() {\n    this.updateCode(code => {\n      copy(code);\n      this.showNotification('Code copied to clip-board', 'info')\n    })\n  }\n\n\n  createLink() {\n    var visual = this.state.visual;\n\n    // Showing encryption dialog\n    visual.show_save_dialog = true\n\n    // Updating state\n    this.setState({visual})\n\n  }\n\n\n  showHideHelp() {\n    var visual = this.state.visual;\n    visual.show_help_dialog = !visual.show_help_dialog;\n    this.setState({visual})\n  }\n\n\n  showHide() {\n    \n    // Loading from state\n    var visual = this.state.visual;\n    \n    // Open/close drawer\n    visual.drawerOpen = !visual.drawerOpen;\n\n    // Updating state\n    this.setState({ visual })\n\n  }\n\n\n  deleteFlowpoint(key) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Removing selected?\n    if (key === settings.selected) settings.selected = null;\n\n    // Deleting flowpoint\n    delete flowpoints[key];\n\n    // Removing any connections other flowpoints have to the deleted one\n    Object.keys(flowpoints).map(test_key => {\n      if (key in flowpoints[test_key].outputs) {\n        delete flowpoints[test_key].outputs[key]\n      }\n    })\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  deleteSelected() {\n    this.deleteFlowpoint(this.state.settings.selected);\n  }\n\n\n  handleClick(key, e) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Handling click\n    if (e.shiftKey) {\n      // If shift is pressed: Create / delete connection\n      if (settings.selected === null) {\n        // Nothing selected: selecting current\n        settings.selected = key;\n      } else {\n        if (settings.selected !== key) {\n          // Creating connection from previously clicked to current clicked\n          var pointA = flowpoints[settings.selected]\n          if (key in pointA.outputs) {\n            delete pointA.outputs[key]\n          } else {\n            pointA.outputs[key] = {}\n          }\n          this.updateCode()\n        }\n      }\n    } else {\n      // If not shift pressed: Select / deselect flowpoint\n      settings.selected = (settings.selected === null ? key : (settings.selected == key ? null : key))\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div style={{backgroundColor: (this.state.visual.darkTheme ? 'black' : 'white')}}>\n\n\n        <Sidebar\n          state={this.state}\n          refresh={() => {return this.state}}\n          updateFlowpoints={flowpoints => {this.setState({flowpoints}); this.updateCode()}}\n          updateEnvironment={environment => {this.setState({environment}); this.updateCode()}}\n          updateVisual={visual => this.setState({visual})}\n          updateSettings={settings => {this.setState({settings}); this.updateCode()}}\n          notification={(msg, color) => this.showNotification(msg, color)}\n          getEmptyFlowpointContent={this.getEmptyFlowpointContent}\n          deleteSelected={this.deleteSelected}\n          updateAvailableLayers={this.updateAvailableLayers}\n          diagramRef={this.diagramRef}\n          prepOutputShapes={this.prepOutputShapes}/>\n        \n\n        <Flowspace\n          theme={this.state.visual.theme}\n          variant={this.state.visual.variant}\n          background={this.state.visual.darkTheme ? 'black' : 'white'}\n          selected={this.state.settings.selected}\n          getDiagramRef={ref => {this.diagramRef = ref}}\n          avoidCollisions\n          onClick={() => {\n            \n            // Loading from state\n            var settings = this.state.settings;\n            settings.selected = null;\n\n            // Updating state\n            this.setState({settings})\n\n          }}\n          style={{\n            height: '100vh',\n            width: 'calc(100vw - ' + this.state.visual.drawerWidth * this.state.visual.drawerOpen + ')',\n            marginLeft: this.state.visual.drawerWidth * this.state.visual.drawerOpen,\n            transition: 'margin-left 0.4s ease-out'\n          }}>\n\n          {\n            Object.keys(this.state.flowpoints).map(key => {\n              const point = this.state.flowpoints[key];\n              return (\n                <Flowpoint\n                  key={key}\n                  outputs={point.outputs}\n                  onClick={e => {this.handleClick(key, e)}}\n                  startPosition={point.pos}\n                  snap={{x:10, y:10}}\n                  style={{\n                    width:'auto',\n                    height:'auto',\n                    minWidth:150,\n                    maxHeight: (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? 150 : 50\n                  }}\n                  onDrag={pos => {\n                    var flowpoints = this.state.flowpoints;\n                    var settings = this.state.settings;\n                    flowpoints[key].pos = pos;\n                    settings.lastPos = pos;\n                    this.setState({flowpoints, settings})\n                  }}>\n                  <div style={{height:'auto', paddingLeft:4, paddingRight:4}}>\n                      <div style={{display:'table', width:'100%', height:'50px'}}>\n                        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n                          {\n                            this.state.visual.showName ? (point.name !== '' ? point.name : 'p_' + key) : point.base_ref\n                          }\n                        </div>\n                      </div>\n                      {\n                        (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? shapeBox(point.output_shape) : null\n                      }\n                  </div>\n                </Flowpoint>\n              )\n            })\n          }\n\n        </Flowspace>\n\n\n        <MainButtons\n          state={this.state}\n          addFlowpoint={this.addFlowpoint}\n          copyCode={this.copyCode}\n          createLink={this.createLink}\n          showHide={this.showHide}\n          showHideHelp={this.showHideHelp}/>\n        \n\n        <Snackbar\n          autoHideDuration={4000}\n          onClose={() => {\n            var notification = this.state.notification;\n            notification.show = false;\n            this.setState({notification})\n          }}\n          onExited={() => {\n            var notification = this.state.notification;\n            if (notification.queue.length > 0) {\n              notification.content = notification.queue.shift();\n              notification.show = true\n            }\n            this.setState({notification})\n          }}\n          anchorOrigin={{vertical:'top', horizontal:'right'}}\n          open={this.state.notification.show}>\n          <SnackbarContent\n            message={this.state.notification.content.msg}\n            style={{backgroundColor:this.state.notification.content.color, boxShadow:'none'}}/>\n        </Snackbar>\n\n\n        <HelpDialog\n          open={this.state.visual.show_help_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_help_dialog = false;\n            this.setState({visual})\n          }}/>\n\n        \n        <LoadDialog\n          error={this.state.visual.load_dialog_error}\n          open={this.state.visual.show_load_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_load_dialog = false;\n            this.setState({visual, settings:{...this.state.settings, modelID:null}})\n          }}\n          onSubmit={pswd => {\n            var environment = this.state.environment;\n            var decrypted = Decrypt(environment.encrypted_model, pswd)\n            if (decrypted) {\n              this.loadDecryptedModel(decrypted)\n            } else {\n              var visual = this.state.visual;\n              visual.load_dialog_error = true;\n              this.setState({visual})\n              this.showNotification('Wrong password', 'error')\n            }\n          }}/>\n\n\n        <SaveDialog\n          error={this.state.visual.save_dialog_error}\n          open={this.state.visual.show_save_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n          }}\n          onSubmit={pswd => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n            PostToDataBase(Encrypt(Library2String(this.state), (pswd === '' ? 'Hello world' : pswd)), model_id => {\n\n              // Loading from state\n              var settings = this.state.settings;\n              var newUrl = settings.baseUrl + '?p=' + model_id;\n\n              // Setting model id\n              settings.modelID = model_id;\n\n              // Updating state\n              this.setState({settings})\n\n              // Updating code\n              this.updateCode()\n\n              // Changing current url\n              window.history.pushState({}, model_id, newUrl);\n\n              // Copy link to clip-board and display notification\n              copy(newUrl)\n              this.showNotification('Model saved and link copied to clip-board')\n\n            })\n          }}/>\n      \n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { getBaseLibrary } from \"./libraries/base_library\";\nimport { getPyTorchLibrary } from \"./libraries/pytorch_library\";\nimport { getTensorFlowLibrary } from \"./libraries/tensorflow_library\";\nimport { getPyTorchAutoparams } from \"./libraries/pytorch_autoparams\";\n\nexport function MainLibrary() {\n  return {\n    flowpoints: {},\n    environment: {\n      getBaseLibrary: getBaseLibrary,\n      baseLib: getBaseLibrary(),\n      library: 'pytorch',\n      libraryFetchers: {\n        pytorch: getPyTorchLibrary,\n        tensorflow: getTensorFlowLibrary\n      },\n      autoparams: {\n        pytorch: getPyTorchAutoparams\n      },\n      availableLayers: [],\n      code: 'Dont panick',\n      encrypted_model: '',\n      notes: '',\n      order: [],\n      dummies: {},\n      batch_first: true,\n      modelname: 'NeuralNet',\n      include_training: true\n    },\n    visual: {\n      darkTheme: false,\n      theme: 'indigo',\n      background: 'white',\n      variant: 'outlined',\n      drawerOpen: false,\n      drawerWidth: 360,\n      showShape: false,\n      showName: false,\n      snap: true,\n      show_load_dialog: false,\n      load_dialog_error: false,\n      show_save_dialog: false,\n      show_help_dialog: false\n    },\n    settings: {\n      tab: 'Misc',\n      modelID: null,\n      baseUrl: window.location.href.split('/?')[0],\n      count: 0,\n      selected: null,\n      lastPos: {x:50, y:-40}\n    },\n    notification: {\n      show: false,\n      content: {\n        msg: 'Hello world',\n        color: '#00e676'\n      },\n      queue: []\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}