{"version":3,"sources":["sidebar/SidebarHead.js","sidebar/FrontHelpers.js","sidebar/MiscTab.js","sidebar/CodeTab.js","sidebar/FlowpointTab.js","sidebar/SidebarContents.js","sidebar/TabContainer.js","sidebar/Sidebar.js","MainButtons.js","parser/FlowOrder.js","parser/PytorchParser.js","parser/Parser.js","parser/TensorflowParser.js","libraries/base_library.js","libraries/pytorch_library.js","libraries/tensorflow_library.js","libraries/pytorch_autoparams.js","LibraryParser.js","DataBaseHandler.js","Cryptographer.js","PasswordDialog.js","HelpDialog.js","App.js","MainLibrary.js","serviceWorker.js","index.js"],"names":["SidebarHead","props","react_default","a","createElement","Typography_default","href","gutterBottom","variant","component","style","padding","index_es","color","underline","position","right","top","IconButton_default","target","index_esm","TextFieldContainer","label","value","placeholder","type","rows","margin","multiline","onChange","e","SelectContainer","FormControl_default","htmlFor","inputProps","name","id","options","map","opt","Autosuggest","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","initmsg","open","arrow_idx","wrapperRef","handleClickOutside","bind","assertThisInitialized","inherits","createClass","key","document","addEventListener","removeEventListener","contains","setState","_this2","opt_keys","idx","keys","chips","val","push","fontSize","height","marginLeft","backgroundColor","toLowerCase","includes","selected","onClick","class","length","disabled","width","paddingTop","marginTop","onKeyDown","keyCode","Math","max","min","ref","node","maxHeight","overflow","React","Component","SwitchContainer","clickable","marginBottom","themes","variants","htmlToImage","require","NotesSection","FrontHelpers_TextFieldContainer","environment","notes","refresh","updateEnvironment","EnvironmentSection","modelname","FrontHelpers_SelectContainer","library","libraryFetchers","updateAvailableLayers","FrontHelpers_SwitchContainer","batch_first","CustomizeViewSection","visual","theme","paddingRight","paddingBottom","updateVisual","tmp","autoparams","showShape","prepOutputShapes","diagramRef","toPng","then","dataUrl","Image","src","link","download","click","MiscTab","MiscTab_EnvironmentSection","MiscTab_CustomizeViewSection","MiscTab_NotesSection","github","hljs","background","CodeTab","codetheme","darkTheme","atelierForestDark","default_highlight","language","showLineNumbers","code","fieldChanger","updateFlowpoints","flowpoints","settings","content","parameters","fieldChanger_base","TransformsSection","point","bools","ints","tuples","contiguous","reshape_ndims","new_dims","Array","from","parseInt","reshape_dims","new_value","ParametersSection","fields","int","float","select","tuple","bool","string","unknown","base_ref","p_key","parameter","istuple","n_dims","round","Infinity","dims","dimensions","ButtonContainer","title","tooltip","placement","aria-label","children","SettingsSection","FrontHelpers_Autosuggest","availableLayers","getEmptyFlowpointContent","FlowpointTab_ButtonContainer","deleteSelected","Delete_default","is_output","concat_inputs","concat_dim","FlowpointTab","display","verticalAlign","textAlign","show_param_section","FlowpointTab_SettingsSection","FlowpointTab_ParametersSection","FlowpointTab_TransformsSection","SidebarContents","tab","MiscTab_MiscTab","updateSettings","notification","CodeTab_CodeTab","FlowpointTab_FlowpointTab","TabContainer","undefined","tabs","indexOf","classes","ceil","className","root","Tabs_default","onSelectTab","textColor","tabsRoot","indicator","tabsIndicator","scrollButtons","Tab_default","disableRipple","tabRoot","tabSelected","withStyles","flexGrow","borderBottom","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","unit","fontFamily","join","&:hover","opacity","&$tabSelected","&:focus","darkMuiTheme","createMuiTheme","palette","useNextVariants","lightMuiTheme","Sidebar","styles","Drawer_default","anchor","drawerOpen","maxWidth","drawerWidth","SidebarHead_SidebarHead","sidebar_TabContainer","SidebarContents_SidebarContents","disableTriggerFocus","disableFocusListener","zIndex","boxShadow","MainButtons","bottom","left","transition","MainButtons_ButtonContainer","addFlowpoint","Add_default","copyCode","FileCopy_default","createLink","Link_default","showHideHelp","Help_default","showHide","Menu_default","getPointName","p","replace","dent","indent","n","FormatInitParams","indentation","max_l","param","i","substring","FormatParamInputs","input_keys","isDownStream","dummies","target_key","test_key","r_key","downStreamTested","recIsDownStream","found_downstream","outputs","out_key","recGetOrder","order","dummy","ordered","ready","inputs","isReady","sort","getStateNames","states","last_user","max_index","getLastUser","FlowOrder","inps","getInputs","is_recurrent","getDummyLibrary","init_states","outs","getStateName","code_parsers","pytorch","got_hidden_states","extras","gothidden","modelID","state_msg","prefix","torchvision","reference","Constructor","formated_inputs","step_lib","step_msg","inp_key","dim","sn1","sn2","reshape_msg","step","slice","Forward","hidden","ResetHidden","pointcode","SaveLoad","tensorflow","current_point_name","current_point_key","rawparams","raw_p_key","concatname","addname","getBaseLibrary","AbstractRNNCell","Activation","ActivityRegularization","AdaptiveAvgPool1d","AdaptiveAvgPool2d","AdaptiveAvgPool3d","AdaptiveLogSoftmaxWithLoss","AdaptiveMaxPool1d","AdaptiveMaxPool2d","AdaptiveMaxPool3d","Add","AlphaDropout","Average","AveragePooling1D","AveragePooling2D","AveragePooling3D","AvgPool1d","AvgPool2d","AvgPool3d","BatchNorm1d","BatchNorm2d","BatchNorm3d","BatchNormalization","Bidirectional","Bilinear","CELU","Concatenate","ConstantPad1d","ConstantPad2d","ConstantPad3d","Conv1d","Conv2d","Conv3d","ConvLSTM2D","ConvTranspose1d","ConvTranspose2d","ConvTranspose3d","Cropping1D","Cropping2D","Cropping3D","Dense","DenseFeatures","DepthwiseConv2D","Dot","Dropout","Dropout2d","Dropout3d","ELU","Embedding","EmbeddingBag","Flatten","Fold","FractionalMaxPool2d","GRU","GRUCell","GaussianDropout","GaussianNoise","GlobalAveragePooling1D","GlobalAveragePooling2D","GlobalAveragePooling3D","GlobalMaxPool1D","GlobalMaxPool2D","GlobalMaxPool3D","GroupNorm","Hardshrink","Hardtanh","Identity","InputLayer","InputSpec","InstanceNorm1d","InstanceNorm2d","InstanceNorm3d","LPPool1d","LPPool2d","LSTM","LSTMCell","Lambda","Layer","LayerNorm","LeakyReLU","Linear","LinearModel","LocalResponseNorm","LocallyConnected1D","LocallyConnected2D","LogSigmoid","LogSoftmax","Masking","MaxPool1d","MaxPool2d","MaxPool3d","MaxUnpool1d","MaxUnpool2d","MaxUnpool3d","Maximum","Mean","Minimum","MultiheadAttention","Multiply","PReLU","Permute","RNN","RNNCell","RReLU","ReLU","ReLU6","ReflectionPad1d","ReflectionPad2d","RepeatVector","ReplicationPad1d","ReplicationPad2d","ReplicationPad3d","Reshape","SELU","SeparableConv1D","SeparableConv2D","Sigmoid","SimpleRNN","SimpleRNNCell","Softmax","Softmax2d","Softmin","Softplus","Softshrink","Softsign","SpatialDropout1D","SpatialDropout2D","SpatialDropout3D","StackedRNNCells","Subtract","SyncBatchNorm","Tanh","Tanhshrink","Threshold","ThresholdedReLU","TimeDistributed","Unfold","UpSampling1D","UpSampling2D","UpSampling3D","Wrapper","ZeroPad2d","ZeroPadding1D","ZeroPadding2D","ZeroPadding3D","ResNet18","ResNet34","ResNet50","ResNet101","ResNet152","VGG11","VGG13","VGG16","VGG19","AlexNet","SqueezeNet1_0","SqueezeNet1_1","DenseNet121","DenseNet169","DenseNet161","DenseNet201","InceptionV3","GoogLeNet","ShuffleNetV2_x0_5","ShuffleNetV2_x1_0","ShuffleNetV2_x1_5","ShuffleNet","MobileNetV2","ResNext50","ResNext101","Segmentation FCN ResNet50","Segmentation FCN ResNet101","Segmentation DeepLabV3 ResNet50","Segmentation DeepLabV3 ResNet101","Detection Faster R-CNN ResNet50","Detection Mask R-CNN ResNet50","Keypoint R-CNN ResNet50","getPyTorchLibrary","output_size","in_features","n_classes","cutoffs","div_value","head_bias","return_indices","inplace","kernel_size","stride","ceil_mode","count_include_pad","num_features","eps","momentum","affine","track_running_stats","in1_features","in2_features","out_features","bias","alpha","in_channels","out_channels","padding_mode","dilation","groups","output_padding","num_embeddings","embedding_dim","padding_idx","max_norm","norm_type","scale_grad_by_freq","sparse","mode","output_ratio","input_size","hidden_size","num_layers","dropout","bidirectional","num_groups","num_channels","lambd","min_val","max_val","normalized_shape","elementwise_affine","negative_slope","size","beta","k","Max","keepdim","embed_dim","num_heads","num_parameters","init","nonlinearity","lower","upper","threshold","resnet18","pretrained","progress","num_classes","resnet34","resnet50","resnet101","resnet152","vgg11","vgg13","vgg16","vgg19","alexnet","squeezenet1_0","squeezenet1_1","densenet121","densenet169","densenet161","densenet201","inception_v3","googlenet","shufflenet_v2_x0_5","shufflenet_v2_x1_0","shufflenet_v2_x1_5","shufflenet_v2_x2_0","mobilenet_v2","resnext50_32x4d","resnext101_32x8d","segmentation.fcn_resnet50","segmentation.fcn_resnet101","segmentation.deeplabv3_resnet50","segmentation.deeplabv3_resnet101","detection.fasterrcnn_resnet50_fpn","pretrained_backbone","detection.maskrcnn_resnet50_fpn","detection.keypointrcnn_resnet50_fpn","getTensorFlowLibrary","trainable","dtype","dynamic","activation","l1","l2","rate","noise_shape","seed","pool_size","strides","data_format","axis","epsilon","center","scale","beta_initializer","gamma_initializer","moving_mean_initializer","moving_variance_initializer","beta_regularizer","gamma_regularizer","beta_constraint","gamma_constraint","renorm","renorm_clipping","renorm_momentum","fused","virtual_batch_size","adjustment","layer","merge_mode","weights","Conv1D","filters","dilation_rate","use_bias","kernel_initializer","bias_initializer","kernel_regularizer","bias_regularizer","activity_regularizer","kernel_constraint","bias_constraint","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","recurrent_activation","recurrent_initializer","unit_forget_bias","recurrent_regularizer","recurrent_constraint","return_sequences","go_backwards","stateful","recurrent_dropout","cropping","units","feature_columns","depth_multiplier","depthwise_initializer","depthwise_regularizer","depthwise_constraint","axes","normalize","input_dim","output_dim","embeddings_initializer","embeddings_regularizer","embeddings_constraint","mask_zero","input_length","implementation","return_state","unroll","time_major","reset_after","stddev","shape","ndim","max_ndim","min_ndim","function","output_shape","mask","arguments",")","sparse_combiner","mask_value","MaxPool1D","MaxPool2D","MaxPool3D","alpha_initializer","alpha_regularizer","alpha_constraint","shared_axes","cell","max_value","target_shape","pointwise_initializer","pointwise_regularizer","pointwise_constraint","cells","theta","interpolation","getPyTorchAutoparams","outshape","inp","floor","current","row","L_in","L_out","H_in","W_in","H_out","W_out","D_in","D_out","features","out_shape","index","SimplifyParameters","new_parameters","DeSimplifyParameters","recipe","JSON","parse","stringify","recipe_copy","new_param_lib","SimplifyOutputs","new_outputs","DeSimplifyOutputs","new_outputs_lib","SimplifyFlowpoint","flowpoint","pos","new_flowpoint","isout","out","x","y","cont","contig","re_ndims","re_dims","new_content","library_key","SimplifyContent","DeSimplifyFlowpoint","new_flowpoint_lib","new_content_lib","DeSimplifyContent","SimplifyFlowpoints","new_flowpoints","DeSimplifyFlowpoints","new_flowpoints_lib","lib_key","param_key","isArray","param_key_2","p2","console","log","FixTuples","DeSimplifyEnvironment","env","main_env","new_env_lib","DeSimplifyVisual","vis","main_vis","new_vis_lib","showName","snap","DeSimplifySettings","main_set","new_set_lib","count","lastPos","DeSimplify","main_lib","err","TryParseJSON","Library2String","Simplify","axios","rjust","rep","getId","l","lib","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2bigBase","num","getYear","toString","CryptoJS","ReplaceAll","str","search","replacement","newstr","split","getSpecialsLib","reversed","§","\"","#","%","&","=","`","^","+","´","¨","revlib","Decrypt","data","specials","decrypted","AES","decrypt","enc","Utf8","WhatIsThis","Button_default","Collapse_default","in","paragraph","LoadDialog","_React$Component2","_this3","pswd","fieldRef","_this4","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","PasswordDialog_WhatIsThis","focus","autoComplete","onSubmit","preventDefault","TextField_default","error","InputLabelProps","shrink","inputRef","input","DialogActions_default","continueMsg","SaveDialog","_React$Component3","_this5","_this6","HelpDialog","goTo","fullWidth","activeStep","orientation","completed","App","baseLib","encrypted_model","show_load_dialog","load_dialog_error","show_save_dialog","show_help_dialog","baseUrl","window","location","show","queue","showNotification","updateCode","loadDecryptedModel","deleteFlowpoint","handleClick","cb","query","get","res","concat_data","raw","number","getTime","shift","flow_order","DefaultMessage","Parser","Input","layer_key","visited","dimkey","tmp_autoparams","bestInp","all_inps","model_id","new_state","objectSpread","0","1","2","3","base_point","newPoint","copy","shiftKey","pointA","Sidebar_Sidebar","dist","getDiagramRef","avoidCollisions","startPosition","onDrag","paddingLeft","shapeBox","MainButtons_MainButtons","autoHideDuration","onExited","anchorOrigin","vertical","horizontal","message","HelpDialog_HelpDialog","PasswordDialog_LoadDialog","PasswordDialog_SaveDialog","save_dialog_error","match","url","PostToDataBase","toEncrypt","test_string","encrypted","encrypt","Encrypt","newUrl","history","pushState","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1a50d05d.chunk.js","sourcesContent":["import React from 'react';\n\n// Material\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// Icons\nimport { FaGithub, FaLinkedin, FaNpm } from \"react-icons/fa\";\nimport { Link } from '@material-ui/core';\n\n\nexport const SidebarHead = props => {\n  return (\n    <div>\n\n      <Typography href='https://mariusbrataas.github.io/flowpoints_ml' gutterBottom variant=\"h5\" component=\"h2\" style={{padding:'15px'}}>\n        <Link href='https://mariusbrataas.github.io/flowpoints_ml' color='inherit' underline='none'>\n          Flowpoints\n        </Link>\n      </Typography>\n\n      <div style={{position:'absolute', right:5, top:5}}>\n        <IconButton target='_blank' href='https://www.npmjs.com/package/flowpoints'>\n          <FaNpm/>\n        </IconButton>\n        <IconButton target='_blank' href='https://www.linkedin.com/in/mariusbrataas/'>\n          <FaLinkedin/>\n        </IconButton>\n        <IconButton target='_blank' href='https://github.com/mariusbrataas/flowpoints_ml#readme'>\n          <FaGithub/>\n        </IconButton>\n      </div>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './FrontHelpers.css'\n\n// Material\nimport FormControl from '@material-ui/core/FormControl';\nimport { Paper, InputLabel, Select, MenuItem, FormControlLabel, Switch, TextField, Tooltip, Chip } from '@material-ui/core';\n\n\nexport const TextFieldContainer = props => {\n  return (\n    <TextField\n      label={props.label}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n      rows={props.rows}\n      variant={props.variant}\n      margin={props.margin ? props.margin : 'tight'}\n      style={props.style}\n      multiline={props.multiline}\n      onChange={e => {\n        if (props.onChange) props.onChange(e.target.value)\n      }}/>\n  )\n}\n\n\nexport const SelectContainer = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            props.options.map(opt => {\n              return (\n                <MenuItem value={opt}>{opt}</MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport const SelectContainerTooltips = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            Object.keys(props.options).map(opt => {\n              var chips = []\n              props.options[opt].map(val => {\n                chips.push(\n                  <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n                )\n              })\n              return (\n                <MenuItem value={opt}>\n                <div class='container'>\n                  <div class='option'>{opt}</div>\n                  <div class='chips'>{chips}</div>\n                </div>\n                </MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport class Autosuggest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      msg: this.props.value,\n      initmsg: this.props.value,\n      options: this.props.options,\n      open: false,\n      arrow_idx: 0\n    }\n    this.wrapperRef = null;\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside(e) {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) this.setState({open:false, msg:this.props.value})\n  }\n  render() {\n    if (this.state.initmsg !== this.props.value) {\n      this.setState({\n        msg: this.props.value,\n        initmsg: this.props.value,\n        open: false,\n        arrow_idx: 0\n      })\n    }\n    var options = [];\n    var opt_keys = [];\n    var idx = 0;\n    Object.keys(this.state.options).map(opt => {\n      var chips = [];\n      this.state.options[opt].map(val => {\n        chips.push(\n          <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n        )\n      })\n      if (opt.toLowerCase().includes(this.state.msg.toLowerCase())) {\n        options.push(\n          <MenuItem\n            value={opt}\n            selected={this.state.arrow_idx === idx}\n            onClick={e => {\n              this.setState({arrow_idx:idx, msg:opt, open:false})\n              if (this.props.onChange) this.props.onChange(opt)\n            }}>\n            <div class='container'>\n              <div class='option'>{opt}</div>\n              <div class='chips'>{chips}</div>\n            </div>\n          </MenuItem>\n        )\n        opt_keys.push(opt)\n        idx += 1\n      }\n    })\n    if (options.length === 0) options.push( <MenuItem disabled value='Nothing'>No available layers</MenuItem> )\n    return (\n      <div style={{width:'100%'}}>\n        <TextField\n          style={{width:'100%', paddingTop:0, marginTop:0}}\n          onClick={() => {this.setState({open:!this.state.open})}}\n          label=\"Layer type\"\n          value={this.state.msg}\n          onChange={e => {this.setState({msg:e.target.value, arrow_idx:0, open:true})}}\n          margin=\"normal\"\n          onKeyDown={e => {\n            if (e.keyCode === 40) {\n              this.setState({arrow_idx: Math.max(Math.min(options.length - 1, this.state.arrow_idx + 1), 0)})\n            } else if (e.keyCode === 38) {\n              this.setState({arrow_idx: Math.min(Math.max(0, this.state.arrow_idx - 1), options.length)})\n            } else if (e.keyCode === 13) {\n              if (opt_keys.length > this.state.arrow_idx) {\n                this.setState({msg:opt_keys[this.state.arrow_idx], open:false})\n                if (this.props.onChange) this.props.onChange(opt_keys[this.state.arrow_idx])\n              }\n            }\n          }}\n        />\n        {\n          this.state.open ? <div ref={node => {this.wrapperRef = node}}>\n            <Paper style={{maxHeight:'40vh', overflow:'scroll'}}>\n              {\n                options\n              }\n            </Paper></div> : null\n        }\n      </div>\n    )\n  }\n}\n\n\n/*export const SwitchContainer = props => {\n  return (\n    <FormControlLabel\n      style={props.style}\n      control={\n        <Switch\n          checked={props.value}\n          color='primary'\n          onChange={e => {\n            if (props.onChange) props.onChange(!props.value)\n          }}/>\n      }\n      label={props.label}/>\n  )\n}*/\n\n\nexport const SwitchContainer = props => {\n  return (\n    <Chip\n      label={props.label}\n      clickable\n      style={{\n        marginLeft:5,\n        marginTop:2,\n        marginBottom:2,\n        backgroundColor:(props.value ? '#64b5f6' : '#e0e0e0'),\n        color:(props.value ? 'white' : '#424242')\n      }}\n      onClick={e => {\n        if (props.onChange) props.onChange(!props.value)\n      }}/>\n  )\n}\n\nexport const themes = [\n  'red',\n  'pink',\n  'purple',\n  'deep-purple',\n  'indigo',\n  'blue',\n  'light-blue',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'blue-grey',\n  'black',\n  'white'\n]\n\nexport const variants = [\n  'paper',\n  'outlined',\n  'filled'\n]","import React, { Component } from 'react';\n\n// Local tools\nimport { SelectContainer, themes, variants, SwitchContainer, TextFieldContainer } from './FrontHelpers.js';\nimport { Button } from '@material-ui/core';\n\n// Other imports\n\nconst htmlToImage = require('html-to-image');\n\n\n\nconst NotesSection = props => {\n  return (\n    <div style={{paddingTop:30}}>\n\n      <TextFieldContainer\n        label='Model notes'\n        multiline={true}\n        value={props.state.environment.notes}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.notes = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n    </div>\n  )\n}\n\n\nconst EnvironmentSection = props => {\n  var environment = props.state.environment;\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Model name</h3>\n\n      <TextFieldContainer\n        label='Model name'\n        multiline={true}\n        value={props.state.environment.modelname}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.modelname = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n      <h3 style={{marginTop:30}}>Environment</h3>\n\n      <SelectContainer\n        label='Library'\n        value={environment.library}\n        options={Object.keys(environment.libraryFetchers)}\n        onChange={val => {\n          \n          // Loading from state\n          var environment = props.refresh().environment;\n          environment.library = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n          // Updating available layers\n          props.updateAvailableLayers()\n\n        }}/>\n\n      {\n        environment.library === 'pytorch' ? <div style={{paddingTop:20}}><SwitchContainer\n          label='batch first'\n          value={environment.batch_first}\n          style={{paddingTop:0}}\n          onChange={val => {\n\n            // Loading from state\n            var environment = props.refresh().environment;\n            environment.batch_first = val;\n\n            // Updating state\n            props.updateEnvironment(environment)\n\n          }}/></div> : null\n      }\n\n    </div>\n  )\n}\n\n\nconst CustomizeViewSection = props => {\n  var visual = props.state.visual;\n  var environment = props.state.environment;\n  return (\n    <div style={{paddingTop:20, width:'100%'}}>\n      \n      <h3>Customize view</h3>\n\n      <div>\n\n        <SelectContainer\n          label='Theme'\n          value={visual.theme}\n          options={themes}\n          style={{width:'48%', paddingRight:10, paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.theme = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n        \n        <SelectContainer\n          label='Variant'\n          value={visual.variant}\n          options={variants}\n          style={{width:'48%', paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.variant = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n\n      </div>\n\n\n      <div style={{paddingTop:20}}>\n        {\n          [\n            {ref:'darkTheme', label:'Dark theme'},\n            {ref:'showName', label:'Show names'}\n          ].map(tmp => {\n            return (\n              <SwitchContainer\n                label={tmp.label}\n                value={visual[tmp.ref]}\n                style={{paddingTop:0}}\n                onChange={val => {\n\n                  // Loading from state\n                  var visual = props.refresh().visual;\n                  visual[tmp.ref] = val;\n\n                  // Updating state\n                  props.updateVisual(visual)\n\n                }}/>\n            )\n          })\n        }\n        {\n          environment.library in environment.autoparams ? <SwitchContainer\n            label='Show shapes'\n            value={visual.showShape}\n            style={{paddingTop:0}}\n            onChange={val => {\n              var visual = props.refresh().visual;\n              visual.showShape = val;\n              props.updateVisual(visual);\n              if (val) props.prepOutputShapes();\n            }}/> : null\n        }\n      </div>\n\n      {\n        props.diagramRef ? <div style={{paddingTop:20}}>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                htmlToImage.toPng(props.diagramRef).then(function (dataUrl) {\n                  var img = new Image();\n                  img.src = dataUrl;\n                  var link = document.createElement('a');\n                  link.download = 'diagram.png';\n                  link.href = dataUrl;\n                  link.click();\n                })\n              }}>\n              Export png\n            </Button></div> : null\n      }\n\n    </div>\n  )\n}\n\n\n\nexport const MiscTab = props => {\n  return (\n    <div style={{padding:15}}>\n\n      <EnvironmentSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}\n        updateAvailableLayers={props.updateAvailableLayers}/>\n      \n      <CustomizeViewSection\n        state={props.state}\n        refresh={props.refresh}\n        updateVisual={props.updateVisual}\n        diagramRef={props.diagramRef}\n        prepOutputShapes={props.prepOutputShapes}/>\n      \n      <NotesSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}/>\n      \n    </div>\n  )\n}","import React, { Component } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierForestDark } from 'react-syntax-highlighter/dist/styles/hljs';\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github';\n\ngithub.hljs.background = '#ffffff';\n\nexport const CodeTab = props => {\n  const codetheme = props.state.visual.darkTheme ? atelierForestDark : github\n  return (\n    <div style={{fontSize:12}}>\n\n      <SyntaxHighlighter language='python' style={codetheme} showLineNumbers>\n      {\n        props.state.environment.code\n      }\n      </SyntaxHighlighter>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { Autosuggest, SelectContainer, TextFieldContainer, SwitchContainer, SelectContainerTooltips } from './FrontHelpers';\nimport { IconButton, TextField, MenuItem, Paper, FormControl, Chip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Tooltip } from '@material-ui/core';\n\n\n\nfunction fieldChanger(refresh, updateFlowpoints, key, value) {\n  var state = refresh();\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[environment.library.toLowerCase()].parameters[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_input(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_base(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected][key] = value;\n  updateFlowpoints(flowpoints)\n}\n\n\nconst TransformsSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected]\n\n  // Container for bools\n  var bools = [];\n  var ints = [];\n  var tuples = [];\n\n  // Adding bools\n  bools.push(\n    <SwitchContainer\n      label='contiguous'\n      value={point.contiguous}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'contiguous',\n          val\n        )\n      }}/>\n  )\n\n  // Adding ints\n  ints.push(\n    <TextFieldContainer\n      label='Reshape dimensions'\n      value={point.reshape_ndims}\n      type='number'\n      variant='outlined'\n      margin='dense'\n      style={{\n        width: 150,\n        paddingRight: 5\n      }}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'reshape_ndims',\n          val\n        )\n        if (val) {\n          var new_dims = [];\n          Array.from(Array(parseInt(val)).keys()).map(idx => {\n            new_dims.push(point.reshape_dims[idx] ? point.reshape_dims[idx] : 0)\n          })\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_dims\n          )\n        }\n      }}/>\n  )\n\n  // Tuples\n  Array.from(Array(parseInt(point.reshape_ndims ? point.reshape_ndims : 0)).keys()).map(idx => {\n    tuples.push(\n      <TextFieldContainer\n        label={'reshape dim ' + idx}\n        value={point.reshape_dims[idx]}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n          var new_value = point.reshape_dims;\n          new_value[idx] = val\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_value\n          )\n        }}/>\n    )\n  })\n\n  // Returning\n  return (\n    <div>\n  \n      <h3 style={{marginTop:30}}>Tensor transforms</h3>\n\n      <div style={{paddingTop:0, marginTop:0, marginLeft:-5, paddingBottom:10}}>{ bools }</div>\n      <div>{ ints }</div>\n      <div>{ tuples }</div>\n\n    </div>\n  )\n\n}\n\n\nconst ParametersSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected];\n\n  // Creating all fields\n  var fields = {\n    int: [],\n    float: [],\n    select: [],\n    tuple: [],\n    bool: [],\n    string: [],\n    unknown: []\n  }\n\n  if (point.base_ref !== 'Input') {\n\n    var parameters = point.content[props.state.environment.library.toLowerCase()].parameters;\n\n    // Adding fields\n    Object.keys(parameters).map(p_key => {\n\n      if (p_key !== 'extras') {\n\n        const parameter = parameters[p_key]\n        if (parameter.istuple) {\n          fields.tuple.push(\n            <div style={{paddingTop:15}}><h5 style={{margin:0}}>{p_key}</h5></div>\n          )\n          parameter.value.map((value, idx) => {\n            fields.tuple.push(\n              <TextFieldContainer\n                label={p_key + ' ' + idx}\n                value={value}\n                type='number'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  var new_value = parameter.value;\n                  new_value[idx] = val;\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    new_value\n                  )\n                }}/>\n            )\n          })\n        } else {\n\n          switch(parameter.type) {\n            case 'int':\n              fields.int.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'float':\n              fields.float.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'string':\n            fields.string.push(\n              <TextFieldContainer\n                label={p_key}\n                value={parameter.value}\n                type='text'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    val\n                  )\n                }}/>\n            )\n            break;\n            \n            case 'bool':\n              if (p_key === 'batch_first') {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={props.state.environment.batch_first}\n                    onChange={val => {}}/>\n                )\n              } else {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={parameter.value}\n                    onChange={val => {\n                      fieldChanger(\n                        props.refresh,\n                        props.updateFlowpoints,\n                        p_key,\n                        val\n                      )\n                    }}/>\n                )\n              }\n            break;\n          \n          case null:\n          fields.unknown.push(\n            <TextFieldContainer\n              label={p_key}\n              value={parameter.value}\n              type='text'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n            \n          case 'select':\n          fields.select.push(\n            <SelectContainer\n              label={p_key}\n              value={parameter.value}\n              options={parameter.options}\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n\n          }\n\n        }\n\n      }\n\n    })\n  } else {\n    var parameters = point.content;\n\n    // Adding n_dims field\n    fields.int.push(\n      <TextFieldContainer\n        label='n_dimensions'\n        value={parameters.n_dims}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n\n          val = val === '' ? '' : Math.max(Math.min(Math.round(val), Infinity), 1)\n\n          // Making sure dims got the correct number of parameters\n          var dims = {};\n          Array.from(Array(val).keys()).map(idx => {\n            if (idx in parameters.dimensions) {\n              dims[idx] = parameters.dimensions[idx];\n            } else {\n              dims[idx] = 1;\n            }\n          })\n\n          // Changing parameters\n          var state = props.refresh()\n          var flowpoints = state.flowpoints;\n          const selected = state.settings.selected;\n          flowpoints[selected].content.n_dims = val;\n          flowpoints[selected].content.dimensions = dims;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n    )\n\n\n    // Adding dimensions field\n    fields.tuple.push(\n      <div style={{paddingTop:15}}><h5 style={{margin:0}}>Dimensions</h5></div>\n    )\n    Object.keys(parameters.dimensions).map((p_key, idx) => {\n      fields.tuple.push(\n        <TextFieldContainer\n          label={'dimension ' + p_key}\n          value={parameters.dimensions[p_key]}\n          type='number'\n          variant='outlined'\n          margin='dense'\n          style={{\n            width: 150,\n            paddingRight: 5\n          }}\n          onChange={val => {\n            var state = props.refresh();\n            var flowpoints = state.flowpoints;\n            state.flowpoints[state.settings.selected].content.dimensions[p_key] = val;\n            props.updateFlowpoints(flowpoints)\n          }}/>\n      )\n    })\n  }\n\n\n  if ((fields.int.length + fields.float.length + fields.select.length + fields.tuple.length + fields.bool.length ) > 0) {\n    return (\n      <div>\n  \n        <h3 style={{marginTop:30}}>Parameters</h3>\n  \n        <div>{ fields.int }</div>\n        <div>{ fields.float }</div>\n        <div>{ fields.select }</div>\n        <div>{ fields.tuple }</div>\n        <div>{ fields.string }</div>\n        <div style={{paddingTop:10, marginLeft:-5}}>{ fields.bool }</div>\n        {\n          fields.unknown.length > 0 ? <div>\n            <h5 style={{paddingTop:5, paddingBottom:0}}>Unknown datatypes. Put your own code here.</h5>\n            { fields.unknown }\n          </div> : null\n        }\n  \n      </div>\n    )\n  }\n\n  return null\n\n}\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\">\n      <IconButton\n        aria-label={props.tooltip}\n        style={props.style}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </IconButton>\n    </Tooltip>\n  )\n}\n\n/*\n<SelectContainerTooltips\n        label='Layer type'\n        value={point.base_ref}\n        options={environment.availableLayers}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var state = props.refresh();\n          var settings = state.settings;\n          var flowpoints = state.flowpoints;\n\n          // Changing flowpoint layer type\n          var point = flowpoints[settings.selected];\n          point.content = props.getEmptyFlowpointContent(val)\n          point.base_ref = val;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n*/\n\n\nconst SettingsSection = props => {\n  var settings = props.state.settings;\n  var flowpoints = props.state.flowpoints;\n  var environment = props.state.environment;\n  const point = flowpoints[settings.selected];\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Flowpoint settings</h3>\n\n        <Autosuggest\n          value={point.base_ref}\n          options={environment.availableLayers}\n          onChange={val => {\n\n            // Loading from state\n            var state = props.refresh();\n            var settings = state.settings;\n            var flowpoints = state.flowpoints;\n  \n            // Changing flowpoint layer type\n            var point = flowpoints[settings.selected];\n            point.content = props.getEmptyFlowpointContent(val)\n            point.base_ref = val;\n  \n            // Updating state\n            props.updateFlowpoints(flowpoints)\n  \n          }}/>\n\n\n        <div style={{paddingTop:15}}>\n\n          <TextFieldContainer\n            label='Layer name'\n            value={point.name}\n            style={{width:'80%'}}\n            onChange={val => {\n\n              // Loading from state\n              var state = props.refresh();\n              var flowpoints = state.flowpoints;\n              var settings = state.settings;\n\n              // Changing layer name\n              flowpoints[settings.selected].name = val;\n\n              // Updating state\n              props.updateFlowpoints(flowpoints)\n\n            }}/>\n\n            <ButtonContainer\n              tooltip='Delete flowpoint'\n              style={{\n                marginLeft: 15,\n                marginTop: 5\n              }}\n              onClick={props.deleteSelected}>\n              <DeleteIcon/>\n            </ButtonContainer>\n\n        </div>\n\n\n        {\n          point.base_ref !== 'Input' ? <div style={{paddingTop:10, marginLeft:-10}}>\n              <SwitchContainer\n                label='Use as output'\n                value={point.is_output}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].is_output = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n                }}/>\n              <SwitchContainer\n                label='Concatenate inputs'\n                value={point.concat_inputs}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].concat_inputs = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n              }}/>\n            </div> : null\n        }\n\n        {\n          point.concat_inputs ? <div style={{paddingTop:15}}>\n            <TextFieldContainer\n              label='Concat dim'\n              value={point.concat_dim}\n              type='number'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                var flowpoints = props.refresh().flowpoints;\n                flowpoints[settings.selected].concat_dim = val;\n                props.updateFlowpoints(flowpoints)\n              }}/>\n          </div> : null\n        }\n\n    </div>\n  )\n}\n\n\n\nexport const FlowpointTab = props => {\n  var settings = props.state.settings;\n\n  // Nothing selected? Returning msg to select something\n  if (settings.selected === null) {\n    return (\n      <div style={{display:'table', width:'100%', height:'50px'}}>\n        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n          Select a flowpoint to display it's settings.\n        </div>\n      </div>\n    )\n  }\n\n  // Layer type doesnt exist in current library?\n  var show_param_section = true;\n  if (!(props.state.environment.library in props.state.flowpoints[props.state.settings.selected].content) && props.state.flowpoints[props.state.settings.selected].base_ref !== 'Input') {\n    show_param_section = false;\n  }\n\n  // Paramaters and settings of selected\n  var flowpoints = props.state.flowpoints;\n  const point = flowpoints[settings.selected];\n  return (\n    <div style={{padding:15}}>\n      \n      <SettingsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}\n        getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n        deleteSelected={props.deleteSelected}/>\n      \n      {\n        show_param_section ? <ParametersSection\n          state={props.state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}/> : <div style={{display:'table', width:'100%', height:'50px', paddingTop:20}}>\n            <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n              Layer type is not available in your current library.\n            </div>\n          </div>\n      }\n\n      <TransformsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}/>\n\n    </div>\n  )\n\n}","import React, { Component } from 'react';\n\n// Importing local tools\nimport { MiscTab } from './MiscTab.js';\nimport { CodeTab } from './CodeTab.js';\nimport { FlowpointTab } from './FlowpointTab.js';\n\n\n// Styles\nimport './SidebarContents.css';\n\nexport const SidebarContents = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <div\n      class='sidebarContents'\n      style={{\n        backgroundColor: (visual.darkTheme ? '#1b1918' : null)\n      }}>\n\n      {\n        settings.tab === 'Misc' ? <MiscTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          updateAvailableLayers={props.updateAvailableLayers}\n          diagramRef={props.diagramRef}\n          prepOutputShapes={props.prepOutputShapes}/> : null\n      }\n      {\n        settings.tab === 'Code' ? <CodeTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}/> : null\n      }\n      {\n        settings.tab === 'Flowpoint' ? <FlowpointTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n          deleteSelected={props.deleteSelected}/> : null\n      }\n\n    </div>\n  )\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\n// Styling\nconst styles = theme => ({\n  root: {\n    flexGrow: 0,\n    overflow:'scroll',\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #1890ff',\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: 50,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing.unit * 0,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$tabSelected': {\n      color: '#1890ff',\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 0,\n  },\n});\n\n\n// Main class\nclass TabContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: props.tab !== undefined ? props.tabs.indexOf(props.tab) : 0\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    const width = Math.ceil(this.props.width/this.props.tabs.length) + 'px'\n\n    return (\n      <div className={classes.root} style={{overflow:'hidden'}}>\n        <Tabs\n          value={value}\n          onChange={(e, value) => {\n            this.setState({ value });\n            if (this.props.onSelectTab) this.props.onSelectTab(this.props.tabs[value]);\n          }}\n          textColor=\"primary\"\n          classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\n          scrollButtons={false}>\n          {\n            this.props.tabs.map(value => {\n              return (\n                <Tab\n                  disableRipple\n                  classes={{ root: classes.tabRoot, selected: classes.tabSelected }}\n                  label={value}\n                  style={{width: width}}\n                />\n              )\n            })\n          }\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n// Setting proptypes\nTabContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Exporting\nexport default withStyles(styles)(TabContainer);\n","import React, { Component } from 'react';\n\n// Styles\nimport './Sidebar.css';\n\n// Material\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\n// Local tools\nimport { SidebarHead } from './SidebarHead.js';\nimport { SidebarContents } from './SidebarContents.js';\nimport TabContainer from './TabContainer.js';\n\n\n// Themes\nconst darkMuiTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: { useNextVariants: true }\n});\n\nconst lightMuiTheme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: { useNextVariants: true }\n});\n\n\n// Sidebar\nexport const Sidebar = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <MuiThemeProvider theme={visual.darkTheme ? darkMuiTheme : lightMuiTheme}>\n\n      <Drawer variant='persistent' anchor='left' open={visual.drawerOpen}>\n        <div\n          class='fullSidebar'\n          style={{\n            maxWidth: visual.drawerWidth,\n            color: (visual.darkTheme ? 'white' : 'black'),\n            width: visual.drawerWidth\n          }}>\n\n          <SidebarHead/>\n\n          <div>\n            <TabContainer\n              tabs={['Misc', 'Code', 'Flowpoint']}\n              tab={settings.tab}\n              width={360}\n              onSelectTab={tab => {\n\n                // Loading state\n                var state = props.refresh();\n                var settings = state.settings;\n                var visual = state.visual;\n\n                // Changing tab\n                settings.tab = tab;\n\n                // Wider drawer if displaying code\n                if (tab === 'Code') {\n                  visual.drawerWidth = 600;\n                } else {\n                  visual.drawerWidth = 360;\n                }\n\n                // Updating state\n                props.updateSettings(settings);\n                props.updateVisual(visual);\n\n              }}/>\n          </div>\n          \n          <SidebarContents\n            state={state}\n            refresh={props.refresh}\n            updateFlowpoints={props.updateFlowpoints}\n            updateEnvironment={props.updateEnvironment}\n            updateVisual={props.updateVisual}\n            updateSettings={props.updateSettings}\n            notification={props.notification}\n            getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n            deleteSelected={props.deleteSelected}\n            updateAvailableLayers={props.updateAvailableLayers}\n            diagramRef={props.diagramRef}\n            prepOutputShapes={props.prepOutputShapes}/>\n\n        </div>\n      </Drawer>\n\n    </MuiThemeProvider>\n  )\n}","import React, { Component } from 'react';\nimport { Fab, Tooltip } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LinkIcon from '@material-ui/icons/Link';\nimport HelpIcon from '@material-ui/icons/Help';\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\" disableTriggerFocus disableFocusListener>\n      <Fab\n        style={{\n          background: props.color,\n          color: '#ffffff',\n          zIndex: 6,\n          boxShadow: 'none'\n        }}\n        aria-label={props.tooltip}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </Fab>\n    </Tooltip>\n  )\n}\n\n\nexport const MainButtons = props => {\n  var visual = props.state.visual;\n  return (\n    <div\n      style={{\n        bottom:'5px',\n        left: visual.drawerWidth * visual.drawerOpen + 5 + 'px',\n        position: 'fixed',\n        transition: 'left 0.4s ease-out'\n      }}>\n      <div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#00b0ff'\n            tooltip='Add flowpoint'\n            onClick={props.addFlowpoint}>\n            <AddIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#2979ff'\n            tooltip='Copy code to clip-board'\n            onClick={props.copyCode}>\n            <FileCopyIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#3d5afe'\n            tooltip='Share link to current model'\n            onClick={props.createLink}>\n            <LinkIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#651fff'\n            tooltip='Help'\n            onClick={props.showHideHelp}>\n            <HelpIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div>\n          <ButtonContainer\n            color='#b0bec5'\n            tooltip='Show/hide sidebar'\n            onClick={props.showHide}>\n            <MenuIcon/>\n          </ButtonContainer>\n        </div>\n\n      </div>\n    </div>\n  )\n}","export function getPointName(flowpoints, key) {\n  let p = flowpoints[key];\n  return (p.name === '' ? ('p_' + key) : p.name).replace(/ /g, '_')\n}\n\n\nexport function dent(indent, n) {\n  var msg = ''\n  Array.from(Array(n).keys()).map(idx => msg += indent)\n  return msg\n}\n\n\nexport function FormatInitParams(parameters, indentation, indent, padding) {\n  if (padding === undefined) padding = true\n  // Getting longest parameter name\n  var max_l = 0;\n  Object.keys(parameters).map(p_key => {\n    if (parameters[p_key].value !== 'None') max_l = Math.max(p_key.length, max_l)\n  })\n  var msg = ''\n  if (padding) msg += '('\n  Object.keys(parameters).map(p_key => {\n    let param = parameters[p_key];\n\n    if (param.value !== 'None') {\n      // Adding argument\n      msg += '\\n' + dent(indent, indentation + 1) + p_key\n\n      // Aligning with other arguments\n      for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n      msg += ' = '\n\n      // Adding argument values\n      if (param.istuple) {\n        // Tuples are put in between parantheses\n        msg += '(';\n        param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n        msg = msg.substring(0, msg.length - 1) + ')';\n      } else if (param.type === 'select') {\n        msg += \"'\" + param.value + \"'\";\n      } else if (param.type === 'bool') {\n        msg += (param.value === true ? 'True' : 'False')\n      } else if (param.type === 'string') {\n        msg += '\"' + param.value + '\"'\n      } else {\n        msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n      }\n      msg += ','\n    }\n  })\n  if (padding) {\n    if (max_l > 0) {\n      msg += '\\n' + dent(indent, 1)\n    }\n    msg += ')'\n  }\n  return msg\n}\n\n\nexport function FormatParamInputs(flowpoints, input_keys) {\n  var msg = ''\n  input_keys.map(key => msg += getPointName(flowpoints, key) + ', ')\n  if (input_keys.length > 0) msg = msg.substring(0, msg.length - 2)\n  return msg\n}\n\n\nfunction getDummyLibrary(flowpoints) {\n  var dummies = {}\n  Object.keys(flowpoints).map(key => {\n    var dummy = {\n      base_ref: flowpoints[key].base_ref,\n      name: flowpoints[key].name,\n      inputs: [],\n      outputs: [],\n      ordered: false,\n      ready: false,\n      downStreamTested: false,\n      is_recurrent: false\n    }\n    Object.keys(flowpoints[key].outputs).map(out_key => {\n      dummy.outputs.push(out_key)\n    })\n    if (flowpoints[key].base_ref === 'Input') {\n      dummy.ready = true;\n    }\n    dummies[key] = dummy;\n  })\n\n  // Adding corresponding inputs\n  Object.keys(dummies).map(key => {\n    dummies[key].outputs.map(out_key => {\n      dummies[out_key].inputs.push(key)\n    })\n  })\n\n  // Returning\n  return dummies\n\n}\n\n\nfunction getInputs(flowpoints) {\n  var inps = [];\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Input') inps.push(key)\n  })\n  return inps\n}\n\n\nfunction recIsDownStream(dummies, target_key, test_key) {\n\n  // Returning if matching\n  if (target_key === test_key) return true;\n\n  // Continue only if havent been visited before\n  var found_downstream = false\n  if (!dummies[test_key].downStreamTested) {\n\n    // Marking self as visited on this run\n    dummies[test_key].downStreamTested = true;\n\n    // Looking deeper down\n    dummies[test_key].outputs.map(out_key => {\n      if (!found_downstream) {\n        found_downstream = recIsDownStream(dummies, target_key, out_key)\n      }\n    })\n  }\n\n  // Returning\n  return found_downstream\n\n}\n\n\nfunction isDownStream(dummies, target_key, test_key) {\n\n  // Resetting downstream helpers\n  Object.keys(dummies).map(r_key => dummies[r_key].downStreamTested = false)\n\n  // Running checks\n  return recIsDownStream(dummies, target_key, test_key)\n\n}\n\n\nfunction isReady(dummies, key) {\n  var ready = true;\n  dummies[key].inputs.map(test_key => {\n    if ((!dummies[test_key].ready && !isDownStream(dummies, test_key, key))) {\n      ready = false;\n    }\n  })\n  return ready\n}\n\n\nfunction recGetOrder(order, dummies, key) {\n\n  // Helper\n  var dummy = dummies[key];\n\n  // Checking dummy, going deeper\n  if (dummy) {\n\n    // Visited before? -> Return\n    if (dummy.ordered) return order\n\n    // Dummy ready?\n    if (isReady(dummies, key)) {\n\n      // Making sure dummy is ready\n      dummy.ready = true;\n\n      // Making sure dummy is added to order\n      dummy.ordered = true;\n      if (!order.includes(key)) order.push(key)\n\n      // Going deeper\n      dummy.outputs.sort().map(out_key => order = recGetOrder(order, dummies, out_key))\n\n    }\n\n  }\n\n  // Returning\n  return order\n\n}\n\n\nfunction getLastUser(order, dummies, target_key) {\n  var max_index = -1;\n  order.map((test_key, idx) => {\n    if (dummies[test_key].inputs.includes(target_key)) max_index = Math.max(max_index, idx)\n  })\n  return order[max_index]\n}\n\n\nfunction getStateNames(order, dummies) {\n  var states = {};\n\n  // Adding all states\n  order.map((key, idx) => {\n    const point = dummies[key];\n\n    // Adding to states\n    if (!(key in states)) {\n      states[key] = getPointName(dummies, key) + (point.base_ref === 'Input' ? '' : '_state');\n    }\n\n    // Setting state of last user\n    const last_user = getLastUser(order, dummies, key);\n    if (last_user !== null) {\n      states[last_user] = states[key];\n    }\n\n  })\n\n  // Setting state of last node to default\n  states[order[order.length - 1]] = 'self.state'\n\n  // Returning\n  return states\n\n}\n\n\nexport function FlowOrder(state) {\n\n  // Init helpers\n  var inps = getInputs(state.flowpoints);\n  var dummies = getDummyLibrary(state.flowpoints);\n  var order = [];\n  var init_states = [];\n  var outs = [];\n\n  // Adding input flowpoints to beginning of order\n  inps.map(key => order.push(key));\n\n  // Recursively mapping tree\n  inps.map(key => order = recGetOrder(order, dummies, key));\n\n  // Flagging flowpoints with recurrent connections and getting init states\n  order.map((key, idx) => {\n    var is_recurrent = false;\n    dummies[key].outputs.map(out_key => {\n      if (idx > order.indexOf(out_key) && !is_recurrent) is_recurrent = true;\n    })\n    if (is_recurrent || state.flowpoints[key].is_output) {\n      dummies[key].is_recurrent = true;\n      init_states.push(key)\n    }\n  })\n\n  // Outputs\n  order.map(key => {\n    if (state.flowpoints[key].is_output) outs.push(key)\n  })\n  if (outs.length === 0) outs = [order[order.length - 1]]\n\n  // State names\n  var states = getStateNames(order, dummies);\n\n  // Returning\n  return {order, inps, states, dummies, init_states, outs}\n\n}","import { getPointName, FormatParamInputs, dent } from \"./FlowOrder\";\n\n\nfunction getStateName(key, flowpoints, states, init_states) {\n  if (init_states.includes(key)) {\n    return 'self.' + getPointName(flowpoints, key) + '_state'\n  }\n  return states[key]\n}\n\n\nfunction getOutputTargetName(key, flowpoints) {\n  return getPointName(flowpoints, key) + '_target'\n}\n\n\nfunction PyTorchImports(indent) {\n  var msg = '# Importing PyTorch tools'\n  msg += '\\nimport torch, torchvision'\n  msg += '\\nfrom torch import nn, optim, cuda'\n  msg += '\\n\\n\\n# Importing other libraries'\n  msg += '\\nimport numpy as np'\n  msg += '\\nimport matplotlib.pyplot as plt'\n  msg += '\\nimport time'\n  return msg\n}\n\n\n\nfunction Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, modelID) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  let modelname = environment.modelname === '' ? 'NeuralNet' : environment.modelname\n  \n  // Basics\n  var msg = '# Model'\n  msg += '\\nclass ' + modelname + '(nn.Module):'\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def __init__(self):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Basics'\n  msg += '\\n' + dent(indent, 2) + 'super(' + modelname + ', self).__init__()'\n  msg += '\\n' + dent(indent, 2) + 'self.name        = ' + (modelID ? (\"'\" + modelID + \"'\") : \"'model'\")\n  msg += '\\n' + dent(indent, 2) + 'self.batch_first = ' + (environment.batch_first ? 'True' : 'False')\n\n  // Prep aligning recurrent states\n  var max_l = 0;\n  order.map(key => {\n    let dummy = dummies[key];\n    if (dummy.is_recurrent) {\n      max_l = Math.max(max_l, getStateName(key, flowpoints, states, init_states).length);\n    }\n  })\n\n  // Initializing recurrent states\n  if (max_l > 0) {\n    var state_msg = dent(indent, 2) + '# Initializing states with placeholder tensors';\n    order.map(key => {\n      let dummy = dummies[key];\n      if (dummy.is_recurrent) {\n\n        // Init state\n        state_msg += '\\n' + dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n\n        // Aligning equals sign\n        for (var i = 0; i < max_l - getStateName(key, flowpoints, states, init_states).length; i++) state_msg += ' '\n        state_msg += ' = torch.tensor([0], dtype=torch.float64)'\n\n      }\n    })\n    msg += '\\n\\n' + state_msg\n  }\n\n  // Initializing all layers\n  msg += '\\n\\n' + dent(indent, 2) + '# Initializing all layers'\n  order.map(key => {\n    let point = flowpoints[key];\n    \n    if (point.base_ref === 'Concatenate') {\n\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref === 'Flatten') {\n\n    } else if (point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        let content = point.content[environment.library.toLowerCase()];\n        let parameters = content.parameters\n\n        // Getting longest parameter name\n        var max_l = 0;\n        Object.keys(parameters).map(p_key => {\n          if (p_key !== 'extras') max_l = Math.max(p_key.length, max_l)\n        })\n\n        // Init object\n        let prefix = content.parameters.extras.torchvision ? 'torchvision.models.' : 'nn.'\n        msg += '\\n' + dent(indent, 2) + 'self.' + getPointName(flowpoints, key) + ' = ' + prefix + content.reference + '(';\n\n        // Adding arguments\n        Object.keys(parameters).map(p_key => {\n\n          if (p_key !== 'extras') {\n\n            let param = parameters[p_key];\n          \n            // Adding argument\n            msg += '\\n' + dent(indent, 3) + p_key\n\n            // Aligning with other arguments\n            for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n            msg += ' = '\n\n            // Adding argument values\n            if (param.istuple) {\n              // Tuples are put in between parantheses\n              msg += '(';\n              param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n              msg = msg.substring(0, msg.length - 1) + ')';\n            } else if (param.type === 'select') {\n              msg += \"'\" + param.value + \"'\";\n            } else if (param.type === 'bool') {\n              if (p_key === 'batch_first') {\n                msg += 'self.batch_first'\n              } else {\n                msg += (param.value === true ? 'True' : 'False')\n              }\n            } else {\n              msg += (param.value === '' ? 'None' : param.value)\n            }\n            msg += ','\n\n          }\n\n        })\n        if (max_l > 0) msg += '\\n' + dent(indent, 2)\n        msg += ')'\n      }\n    }\n  })\n\n  // Startup routines\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 2) + '# Running startup routines'\n    msg += '\\n' + dent(indent, 2) + 'self.reset_hidden_states()'\n  }\n\n  // Returning\n  return msg\n\n}\n\n\nfunction StartupRoutines(indent) {\n  var msg = dent(indent, 1) + 'def startup_routines(self):'\n  msg += '\\n' + dent(indent, 2) + 'self.optimizer = self.optim_type(self.parameters(), lr=self.alpha)'\n  msg += '\\n' + dent(indent, 2) + 'if self.use_cuda:'\n  msg += '\\n' + dent(indent, 3) + 'self.cuda()'\n  return msg\n}\n\n\nfunction ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library) {\n  var msg = dent(indent, 1) + 'def reset_hidden_states(self, sample=None):'\n  msg += '\\n' + dent(indent, 2) + 'if type(sample) == torch.Tensor:'\n  msg += '\\n' + dent(indent, 3) + 'batch_size = sample.shape[0 if self.batch_first else 1]'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        const parameters = flowpoints[key].content[library].parameters;\n        if (parameters.extras.gothidden) {\n          if (parameters['hidden_size'] && parameters['num_layers']) {\n            msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = '\n            const hidden = '\\n' + dent(indent, 4) + 'torch.zeros((' + parameters['num_layers'].value + ', batch_size, ' + parameters['hidden_size'].value + '), device=sample.device)'\n            msg += '(' + hidden + ', ' + hidden + '\\n' + dent(indent, 3) + ')'\n          }\n        }\n      }\n    }\n  })\n  msg += '\\n' + dent(indent, 2) + 'else:'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = None'\n        }\n      }\n    }\n  })\n  return msg\n}\n\n\nfunction Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library) {\n  var msg = dent(indent, 1) + 'def forward(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  msg += formated_inputs + '):'\n\n  // Forwarding\n  var step_lib = [];\n  var outputs = [];\n  order.map(key => {\n    const point = dummies[key];\n    if (point.base_ref === 'Concatenate') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.cat(['\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n      step_msg = step_msg.substring(0, step_msg.length - 2) + '], dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Concatenate' })\n    } else if (point.base_ref === 'Mean') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.mean('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Mean' })\n    } else if (point.base_ref === 'Maximum') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.max('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')[0]'\n      step_lib.push({ msg:step_msg, title:'Max' })\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref === 'Flatten') {\n      let sn1 = getStateName(key, flowpoints, states, init_states)\n      let sn2 = getStateName(point.inputs[0], flowpoints, states, init_states)\n      var step_msg = dent(indent, 2) + sn1\n      step_msg += ' = ' + sn2 + '.view(' + sn2 + '.shape[0], -1)'\n      step_lib.push({ msg:step_msg, title:'Flatten' })\n    } else {\n      if (flowpoints[key].content[library]) {\n        var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', self.' + getPointName(flowpoints, key) + '_hidden'\n        step_msg += ' = self.' + getPointName(dummies, key) + '(';\n        if (point.inputs.length > 1) {\n          if (flowpoints[key].concat_inputs) {\n            //torch.cat(tensors, dim=0\n            step_msg += 'torch.cat(['\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n            step_msg = step_msg.substring(0, step_msg.length -2 ) + '], dim=' + flowpoints[key].concat_dim + ')'\n          } else {\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ');\n            step_msg = step_msg.substring(0, step_msg.length - 3);\n          }\n        } else {\n          step_msg += getStateName(point.inputs[0], flowpoints, states, init_states)\n        }\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', tuple([_.data for _ in self.' + getPointName(flowpoints, key) + '_hidden]) if self.' + getPointName(flowpoints, key) + '_hidden else None'\n        step_msg += ')'\n        step_lib.push({ msg:step_msg, title:point.base_ref });\n        if (flowpoints[key].contiguous) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states) + '.contiguous()'\n          if (flowpoints[key].reshape_ndims > 0) {\n            reshape_msg += '.view('\n            flowpoints[key].reshape_dims.map(val => {\n              reshape_msg += val + ', '\n            })\n            reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          }\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        } else if (flowpoints[key].reshape_ndims > 0) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states)\n          reshape_msg += '.view('\n          flowpoints[key].reshape_dims.map(val => {\n            reshape_msg += val + ', '\n          })\n          reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        }\n        if (flowpoints[key].is_output) outputs.push(key);\n      }\n    }\n  })\n\n  // Max length\n  var max_l = 0;\n  step_lib.map(step => max_l = Math.max(max_l, step.msg.length > 60 ? 0 : step.msg.length))\n\n  // Adding steps\n  step_lib.map(step => {\n    \n    // Adding step\n    msg += '\\n' + step.msg;\n\n    // Aligning comment with others\n    for (var i = 0; i < max_l - step.msg.length; i++) msg += ' ';\n    msg += ' # ' + step.title;\n  })\n\n  // Adding return\n  if (outputs.length === 0) outputs = [order[order.length-1]];\n  msg += '\\n' + dent(indent, 2) + 'return'\n  outputs.map(key => {\n    msg += ' ' + getStateName(key, flowpoints, states, init_states) + ','\n  })\n  msg = msg.slice(0, -1)\n\n  // Returning\n  return msg\n\n}\n\n\nfunction SaveLoad(flowpoints, dummies, order, indent, library, modelname) {\n  var msg = dent(indent, 1) + \"def save(self, name=None, extras={}):\"\n  msg += '\\n' + dent(indent, 2) + \"if not name: name = self.name\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"torch.save({\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 3) + \"'\" + pointcode + \"': self.\" + pointcode + ','\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 3) + \"'name': self.name,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'extras': extras,\"\n  msg += \"\\n\" + dent(indent, 2) + \"}, name)\"\n  msg += \"\\n\\n\\n\" + dent(indent, 1) + \"@staticmethod\"\n  msg += \"\\n\" + dent(indent, 1) + \"def load(name='model'):\"\n  msg += \"\\n\" + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"checkpoint = torch.load(name)\"\n  msg += \"\\n\" + dent(indent, 2) + \"model = \" + modelname + \"()\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 2) + \"model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 2) + \"model.name = checkpoint['name']\"\n  msg += \"\\n\" + dent(indent, 2) + \"return model, checkpoint['extras']\"\n\n  // Returning\n  return msg\n}\n\n\nexport function PyTorchParser(state, order, inps, states, dummies, indent, init_states, outs) {\n\n  var flowpoints = state.flowpoints;\n  const library = state.environment.library.toLowerCase()\n\n  // Imports\n  var msg = PyTorchImports(indent)\n\n  // Need hidden states?\n  var got_hidden_states = false\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          got_hidden_states = true\n        }\n      }\n    }\n  })\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, state.settings.modelID);\n  msg += '\\n\\n\\n' + Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library);\n  if (got_hidden_states) msg += '\\n\\n\\n' + ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library);\n  msg += '\\n\\n\\n' + SaveLoad(flowpoints, dummies, order, indent, library, state.environment.modelname === '' ? 'NeuralNet' : state.environment.modelname);\n\n  // Returning\n  return msg\n}","import { FlowOrder } from \"./FlowOrder\";\nimport { PyTorchParser } from \"./PytorchParser\";\nimport { TensorFlowParser } from \"./TensorflowParser\";\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nconst code_parsers = {\n  pytorch: PyTorchParser,\n  tensorflow: TensorFlowParser\n}\n\n\nfunction DefaultMessage(state) {\n  var msg = \"\";\n  msg += \"'''\\n\";\n  msg += \"Created using flowpoints.io\\n\\n\";\n  if (state.settings.modelID) {\n    msg += \"Link to model:\\n\";\n    msg += \"https://mariusbrataas.github.io/flowpoints_ml/?p=\" + state.settings.modelID + \"\\n\\n\";\n  }\n  msg += \"LICENSE:\\n\"\n  msg += \"https://github.com/mariusbrataas/flowpoints_ml/blob/master/LICENSE\"\n  if (state.environment.notes !== '') {\n    var notes = state.environment.notes;\n    notes = ReplaceAll(notes, \"'\", '')\n    msg += '\\n\\nNOTES:\\n' + notes\n  }\n  msg += \"\\n'''\\n\\n\\n\"\n  return msg\n}\n\n\nexport function Parser(state) {\n\n  if (Object.keys(state.flowpoints).length > 0) {\n\n    // Order and inputs\n    const tmp = FlowOrder(state)\n    const flow_order = tmp.order;\n    const inps = tmp.inps;\n    const states = tmp.states;\n    const init_states = tmp.init_states;\n    const outs = tmp.outs;\n    var dummies = tmp.dummies;\n\n    // Init msg with default text\n    var msg = DefaultMessage(state)\n\n    // Parsing\n    const lib = state.environment.library.toLowerCase()\n    if (lib in code_parsers) {\n      msg += code_parsers[lib](state, flow_order, inps, states, dummies, '    ', init_states, outs)\n    }\n\n    // Returning\n    return {msg, order:flow_order, dummies}\n\n  }\n\n  return {msg:'', order:[], dummies:{}}\n\n}","import { getPointName, FormatParamInputs, dent, FormatInitParams } from \"./FlowOrder\";\n\n\nfunction TensorFlowImports() {\n  var msg = '# Importing TensorFlow tools'\n  msg += '\\nimport tensorflow as tf'\n  return msg\n}\n\n\nfunction Constructor(state, order, inps, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  // Basics\n  var msg = '# Model'\n  msg += \"\\ndef NeuralNet(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']):\"\n\n  // Initializing inputs\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing inputs'\n  order.map(key => {\n    let point = flowpoints[key]\n    let current_point_name = getPointName(flowpoints, key);\n\n    if (inps.includes(key)) {\n      let content = point.content;\n      msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Input(('\n      Object.keys(content.dimensions).sort().map(idx => msg += '' + content.dimensions[idx] + ',')\n      msg += \"), name='\" + current_point_name + \"')\"\n    }\n  })\n\n  // Initializing layers\n  var current_point_name = '';\n  var current_point_key = '';\n  var outputs = [];\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing layers'\n  order.map(key => {\n    let point = flowpoints[key]\n    current_point_name = getPointName(flowpoints, key);\n    current_point_key = key\n\n    if (point.base_ref !== 'Input') {\n      const content = point.content[environment.library.toLowerCase()];\n\n      if (content) {\n        const rawparams = content.parameters;\n        var parameters = { name:{type:'string', value:current_point_name} }\n        Object.keys(rawparams).map(raw_p_key => {\n          if (raw_p_key !== 'extras') parameters[raw_p_key] = rawparams[raw_p_key]\n        })\n        //parameters['name'] = {type:'string', value:current_point_name};\n        let inputs = dummies[key].inputs;\n\n        /*\n        Need an add-operation first?\n        If a node got multiple inputs and is not \"Concatenate\", those inputs should be added together.\n        */ \n        if (inputs.length > 1) {\n\n          if (point.base_ref === 'Concatenate') {\n\n            // Adding inputs\n            msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Concatenate(axis=' + point.concat_dim + ')('\n            msg += '\\n' + dent(indent, 2) + '['\n            inputs.map(inp_key => {\n              msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n            })\n            msg = msg.slice(0, -1)\n            msg += '\\n' + dent(indent, 2) + ']'\n            msg += '\\n' + dent(indent, 1) + ')'\n\n          } else {\n\n            if (point.concat_inputs) {\n\n              // Concat name\n              var concatname = \"'concat_\"\n              inputs.map(inp_key => concatname += getPointName(flowpoints, inp_key) + '_')\n              concatname = concatname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Concatenate(name=\" + concatname + \", axis=\" + point.concat_dim + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            } else {\n\n              // Adder name\n              var addname = \"'add_\"\n              inputs.map(inp_key => addname += getPointName(flowpoints, inp_key) + '_')\n              addname = addname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Add(name=\" + addname + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            }\n\n          }\n\n        } else {\n\n          // Creating layer\n          msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n          msg += FormatInitParams(parameters, 1, indent)\n          msg += '(' + getPointName(flowpoints, inputs[0]) + ')'\n\n        }\n        if (point.is_output) outputs.push(current_point_key)\n      } else {\n        msg += '\\n\\nCOULD NOT ADD ' + current_point_name + ' (' + point.base_ref + ')!'\n        msg += '\\nThe layertype is not available in the the currently selected library.\\n\\n'\n      }\n    }\n  })\n\n  // Fixing outputs?\n  if (outputs.length === 0 && current_point_key !== '') outputs.push(current_point_key)\n\n  // Creating model\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating model'\n  msg += '\\n' + dent(indent, 1) + '_model = tf.keras.models.Model('\n  if (inps.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'inputs  = [' + FormatParamInputs(dummies, inps) + '],'\n  }\n  if (outputs.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'outputs = [' + FormatParamInputs(dummies, outputs) + ']'\n  }\n  if (state.settings.modelID !== '' && state.settings.modelID !== null) {\n    msg += ','\n    msg += '\\n' + dent(indent, 2) + \"name    = 'flowpoints.io/?p=\" + state.settings.modelID + \"'\"\n  }\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Compiling model\n  msg += '\\n\\n' + dent(indent, 1) + '# Compiling model'\n  msg += '\\n' + dent(indent, 1) + \"_model.compile(\"\n  msg += '\\n' + dent(indent, 2) + \"optimizer = optimizer,\"\n  msg += '\\n' + dent(indent, 2) + \"loss      = loss,\"\n  msg += '\\n' + dent(indent, 2) + \"metrics   = metrics\"\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Returning model\n  msg += '\\n\\n' + dent(indent, 1) + '# Returning model'\n  msg += '\\n' + dent(indent, 1) + 'return _model'\n\n  // Returning\n  return msg\n\n}\n\n\n\nexport function TensorFlowParser(state, order, inps, states, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n\n  // Imports\n  var msg = TensorFlowImports()\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, inps, dummies, indent)\n\n  // Returning\n  return msg\n}","export function getBaseLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"tensorflow\": \"AbstractRNNCell\"\n    },\n    \"Activation\": {\n      \"tensorflow\": \"Activation\"\n    },\n    \"ActivityRegularization\": {\n      \"tensorflow\": \"ActivityRegularization\"\n    },\n    \"AdaptiveAvgPool1d\": {\n      \"pytorch\": \"AdaptiveAvgPool1d\"\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"pytorch\": \"AdaptiveAvgPool2d\"\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"pytorch\": \"AdaptiveAvgPool3d\"\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"pytorch\": \"AdaptiveLogSoftmaxWithLoss\"\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"pytorch\": \"AdaptiveMaxPool1d\"\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"pytorch\": \"AdaptiveMaxPool2d\"\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"pytorch\": \"AdaptiveMaxPool3d\"\n    },\n    \"Add\": {\n      \"tensorflow\": \"Add\"\n    },\n    \"AlphaDropout\": {\n      \"pytorch\": \"AlphaDropout\",\n      \"tensorflow\": \"AlphaDropout\"\n    },\n    \"Average\": {\n      \"tensorflow\": \"Average\"\n    },\n    \"AveragePooling1D\": {\n      \"tensorflow\": \"AveragePooling1D\"\n    },\n    \"AveragePooling2D\": {\n      \"tensorflow\": \"AveragePooling2D\"\n    },\n    \"AveragePooling3D\": {\n      \"tensorflow\": \"AveragePooling3D\"\n    },\n    \"AvgPool1d\": {\n      \"pytorch\": \"AvgPool1d\"\n    },\n    \"AvgPool2d\": {\n      \"pytorch\": \"AvgPool2d\"\n    },\n    \"AvgPool3d\": {\n      \"pytorch\": \"AvgPool3d\"\n    },\n    \"BatchNorm1d\": {\n      \"pytorch\": \"BatchNorm1d\"\n    },\n    \"BatchNorm2d\": {\n      \"pytorch\": \"BatchNorm2d\"\n    },\n    \"BatchNorm3d\": {\n      \"pytorch\": \"BatchNorm3d\"\n    },\n    \"BatchNormalization\": {\n      \"tensorflow\": \"BatchNormalization\"\n    },\n    \"Bidirectional\": {\n      \"tensorflow\": \"Bidirectional\"\n    },\n    \"Bilinear\": {\n      \"pytorch\": \"Bilinear\"\n    },\n    \"CELU\": {\n      \"pytorch\": \"CELU\"\n    },\n    \"Concatenate\": {\n      \"pytorch\": \"Concatenate\",\n      \"tensorflow\": \"Concatenate\"\n    },\n    \"ConstantPad1d\": {\n      \"pytorch\": \"ConstantPad1d\"\n    },\n    \"ConstantPad2d\": {\n      \"pytorch\": \"ConstantPad2d\"\n    },\n    \"ConstantPad3d\": {\n      \"pytorch\": \"ConstantPad3d\"\n    },\n    \"Conv1d\": {\n      \"pytorch\": \"Conv1d\",\n      \"tensorflow\": \"Conv1D\"\n    },\n    \"Conv2d\": {\n      \"pytorch\": \"Conv2d\",\n      \"tensorflow\": \"Conv2D\"\n    },\n    \"Conv3d\": {\n      \"pytorch\": \"Conv3d\",\n      \"tensorflow\": \"Conv3D\"\n    },\n    \"ConvLSTM2D\": {\n      \"tensorflow\": \"ConvLSTM2D\"\n    },\n    \"ConvTranspose1d\": {\n      \"pytorch\": \"ConvTranspose1d\"\n    },\n    \"ConvTranspose2d\": {\n      \"pytorch\": \"ConvTranspose2d\",\n      \"tensorflow\": \"Conv2DTranspose\"\n    },\n    \"ConvTranspose3d\": {\n      \"pytorch\": \"ConvTranspose3d\",\n      \"tensorflow\": \"Conv3DTranspose\"\n    },\n    \"Cropping1D\": {\n      \"tensorflow\": \"Cropping1D\"\n    },\n    \"Cropping2D\": {\n      \"tensorflow\": \"Cropping2D\"\n    },\n    \"Cropping3D\": {\n      \"tensorflow\": \"Cropping3D\"\n    },\n    \"Dense\": {\n      \"tensorflow\": \"Dense\"\n    },\n    \"DenseFeatures\": {\n      \"tensorflow\": \"DenseFeatures\"\n    },\n    \"DepthwiseConv2D\": {\n      \"tensorflow\": \"DepthwiseConv2D\"\n    },\n    \"Dot\": {\n      \"tensorflow\": \"Dot\"\n    },\n    \"Dropout\": {\n      \"pytorch\": \"Dropout\",\n      \"tensorflow\": \"Dropout\"\n    },\n    \"Dropout2d\": {\n      \"pytorch\": \"Dropout2d\"\n    },\n    \"Dropout3d\": {\n      \"pytorch\": \"Dropout3d\"\n    },\n    \"ELU\": {\n      \"pytorch\": \"ELU\",\n      \"tensorflow\": \"ELU\"\n    },\n    \"Embedding\": {\n      \"pytorch\": \"Embedding\",\n      \"tensorflow\": \"Embedding\"\n    },\n    \"EmbeddingBag\": {\n      \"pytorch\": \"EmbeddingBag\"\n    },\n    \"Flatten\": {\n      \"pytorch\": \"Flatten\",\n      \"tensorflow\": \"Flatten\"\n    },\n    \"Fold\": {\n      \"pytorch\": \"Fold\"\n    },\n    \"FractionalMaxPool2d\": {\n      \"pytorch\": \"FractionalMaxPool2d\"\n    },\n    \"GRU\": {\n      \"pytorch\": \"GRU\",\n      \"tensorflow\": \"GRU\"\n    },\n    \"GRUCell\": {\n      \"pytorch\": \"GRUCell\",\n      \"tensorflow\": \"GRUCell\"\n    },\n    \"GaussianDropout\": {\n      \"tensorflow\": \"GaussianDropout\"\n    },\n    \"GaussianNoise\": {\n      \"tensorflow\": \"GaussianNoise\"\n    },\n    \"GlobalAveragePooling1D\": {\n      \"tensorflow\": \"GlobalAveragePooling1D\"\n    },\n    \"GlobalAveragePooling2D\": {\n      \"tensorflow\": \"GlobalAveragePooling2D\"\n    },\n    \"GlobalAveragePooling3D\": {\n      \"tensorflow\": \"GlobalAveragePooling3D\"\n    },\n    \"GlobalMaxPool1D\": {\n      \"tensorflow\": \"GlobalMaxPool1D\"\n    },\n    \"GlobalMaxPool2D\": {\n      \"tensorflow\": \"GlobalMaxPool2D\"\n    },\n    \"GlobalMaxPool3D\": {\n      \"tensorflow\": \"GlobalMaxPool3D\"\n    },\n    \"GroupNorm\": {\n      \"pytorch\": \"GroupNorm\"\n    },\n    \"Hardshrink\": {\n      \"pytorch\": \"Hardshrink\"\n    },\n    \"Hardtanh\": {\n      \"pytorch\": \"Hardtanh\"\n    },\n    \"Identity\": {\n      \"pytorch\": \"Identity\"\n    },\n    \"InputLayer\": {\n      \"tensorflow\": \"InputLayer\"\n    },\n    \"InputSpec\": {\n      \"tensorflow\": \"InputSpec\"\n    },\n    \"InstanceNorm1d\": {\n      \"pytorch\": \"InstanceNorm1d\"\n    },\n    \"InstanceNorm2d\": {\n      \"pytorch\": \"InstanceNorm2d\"\n    },\n    \"InstanceNorm3d\": {\n      \"pytorch\": \"InstanceNorm3d\"\n    },\n    \"LPPool1d\": {\n      \"pytorch\": \"LPPool1d\"\n    },\n    \"LPPool2d\": {\n      \"pytorch\": \"LPPool2d\"\n    },\n    \"LSTM\": {\n      \"pytorch\": \"LSTM\",\n      \"tensorflow\": \"LSTM\"\n    },\n    \"LSTMCell\": {\n      \"pytorch\": \"LSTMCell\",\n      \"tensorflow\": \"LSTMCell\"\n    },\n    \"Lambda\": {\n      \"tensorflow\": \"Lambda\"\n    },\n    \"Layer\": {\n      \"tensorflow\": \"Layer\"\n    },\n    \"LayerNorm\": {\n      \"pytorch\": \"LayerNorm\"\n    },\n    \"LeakyReLU\": {\n      \"pytorch\": \"LeakyReLU\",\n      \"tensorflow\": \"LeakyReLU\"\n    },\n    \"Linear\": {\n      \"pytorch\": \"Linear\",\n      \"tensorflow\": \"Dense\"\n    },\n    \"LinearModel\": {\n      \"tensorflow\": \"LinearModel\"\n    },\n    \"LocalResponseNorm\": {\n      \"pytorch\": \"LocalResponseNorm\"\n    },\n    \"LocallyConnected1D\": {\n      \"tensorflow\": \"LocallyConnected1D\"\n    },\n    \"LocallyConnected2D\": {\n      \"tensorflow\": \"LocallyConnected2D\"\n    },\n    \"LogSigmoid\": {\n      \"pytorch\": \"LogSigmoid\"\n    },\n    \"LogSoftmax\": {\n      \"pytorch\": \"LogSoftmax\"\n    },\n    \"Masking\": {\n      \"tensorflow\": \"Masking\"\n    },\n    \"MaxPool1d\": {\n      \"pytorch\": \"MaxPool1d\",\n      \"tensorflow\": \"MaxPool1D\"\n    },\n    \"MaxPool2d\": {\n      \"pytorch\": \"MaxPool2d\",\n      \"tensorflow\": \"MaxPool2D\"\n    },\n    \"MaxPool3d\": {\n      \"pytorch\": \"MaxPool3d\",\n      \"tensorflow\": \"MaxPool3D\"\n    },\n    \"MaxUnpool1d\": {\n      \"pytorch\": \"MaxUnpool1d\"\n    },\n    \"MaxUnpool2d\": {\n      \"pytorch\": \"MaxUnpool2d\"\n    },\n    \"MaxUnpool3d\": {\n      \"pytorch\": \"MaxUnpool3d\"\n    },\n    \"Maximum\": {\n      \"pytorch\": \"Max\",\n      \"tensorflow\": \"Maximum\"\n    },\n    \"Mean\": {\n      \"pytorch\": \"Mean\"\n    },\n    \"Minimum\": {\n      \"tensorflow\": \"Minimum\"\n    },\n    \"MultiheadAttention\": {\n      \"pytorch\": \"MultiheadAttention\"\n    },\n    \"Multiply\": {\n      \"tensorflow\": \"Multiply\"\n    },\n    \"PReLU\": {\n      \"pytorch\": \"PReLU\",\n      \"tensorflow\": \"PReLU\"\n    },\n    \"Permute\": {\n      \"tensorflow\": \"Permute\"\n    },\n    \"RNN\": {\n      \"pytorch\": \"RNN\",\n      \"tensorflow\": \"RNN\"\n    },\n    \"RNNCell\": {\n      \"pytorch\": \"RNNCell\"\n    },\n    \"RReLU\": {\n      \"pytorch\": \"RReLU\"\n    },\n    \"ReLU\": {\n      \"pytorch\": \"ReLU\",\n      \"tensorflow\": \"ReLU\"\n    },\n    \"ReLU6\": {\n      \"pytorch\": \"ReLU6\"\n    },\n    \"ReflectionPad1d\": {\n      \"pytorch\": \"ReflectionPad1d\"\n    },\n    \"ReflectionPad2d\": {\n      \"pytorch\": \"ReflectionPad2d\"\n    },\n    \"RepeatVector\": {\n      \"tensorflow\": \"RepeatVector\"\n    },\n    \"ReplicationPad1d\": {\n      \"pytorch\": \"ReplicationPad1d\"\n    },\n    \"ReplicationPad2d\": {\n      \"pytorch\": \"ReplicationPad2d\"\n    },\n    \"ReplicationPad3d\": {\n      \"pytorch\": \"ReplicationPad3d\"\n    },\n    \"Reshape\": {\n      \"tensorflow\": \"Reshape\"\n    },\n    \"SELU\": {\n      \"pytorch\": \"SELU\"\n    },\n    \"SeparableConv1D\": {\n      \"tensorflow\": \"SeparableConv1D\"\n    },\n    \"SeparableConv2D\": {\n      \"tensorflow\": \"SeparableConv2D\"\n    },\n    \"Sigmoid\": {\n      \"pytorch\": \"Sigmoid\"\n    },\n    \"SimpleRNN\": {\n      \"tensorflow\": \"SimpleRNN\"\n    },\n    \"SimpleRNNCell\": {\n      \"tensorflow\": \"SimpleRNNCell\"\n    },\n    \"Softmax\": {\n      \"pytorch\": \"Softmax\",\n      \"tensorflow\": \"Softmax\"\n    },\n    \"Softmax2d\": {\n      \"pytorch\": \"Softmax2d\"\n    },\n    \"Softmin\": {\n      \"pytorch\": \"Softmin\"\n    },\n    \"Softplus\": {\n      \"pytorch\": \"Softplus\"\n    },\n    \"Softshrink\": {\n      \"pytorch\": \"Softshrink\"\n    },\n    \"Softsign\": {\n      \"pytorch\": \"Softsign\"\n    },\n    \"SpatialDropout1D\": {\n      \"tensorflow\": \"SpatialDropout1D\"\n    },\n    \"SpatialDropout2D\": {\n      \"tensorflow\": \"SpatialDropout2D\"\n    },\n    \"SpatialDropout3D\": {\n      \"tensorflow\": \"SpatialDropout3D\"\n    },\n    \"StackedRNNCells\": {\n      \"tensorflow\": \"StackedRNNCells\"\n    },\n    \"Subtract\": {\n      \"tensorflow\": \"Subtract\"\n    },\n    \"SyncBatchNorm\": {\n      \"pytorch\": \"SyncBatchNorm\"\n    },\n    \"Tanh\": {\n      \"pytorch\": \"Tanh\"\n    },\n    \"Tanhshrink\": {\n      \"pytorch\": \"Tanhshrink\"\n    },\n    \"Threshold\": {\n      \"pytorch\": \"Threshold\"\n    },\n    \"ThresholdedReLU\": {\n      \"tensorflow\": \"ThresholdedReLU\"\n    },\n    \"TimeDistributed\": {\n      \"tensorflow\": \"TimeDistributed\"\n    },\n    \"Unfold\": {\n      \"pytorch\": \"Unfold\"\n    },\n    \"UpSampling1D\": {\n      \"tensorflow\": \"UpSampling1D\"\n    },\n    \"UpSampling2D\": {\n      \"tensorflow\": \"UpSampling2D\"\n    },\n    \"UpSampling3D\": {\n      \"tensorflow\": \"UpSampling3D\"\n    },\n    \"Wrapper\": {\n      \"tensorflow\": \"Wrapper\"\n    },\n    \"ZeroPad2d\": {\n      \"pytorch\": \"ZeroPad2d\"\n    },\n    \"ZeroPadding1D\": {\n      \"tensorflow\": \"ZeroPadding1D\"\n    },\n    \"ZeroPadding2D\": {\n      \"tensorflow\": \"ZeroPadding2D\"\n    },\n    \"ZeroPadding3D\": {\n      \"tensorflow\": \"ZeroPadding3D\"\n    },\n    \"ResNet18\": {\n      \"pytorch\": \"resnet18\"\n    },\n    \"ResNet34\": {\n      \"pytorch\": \"resnet34\"\n    },\n    \"ResNet50\": {\n      \"pytorch\": \"resnet50\"\n    },\n    \"ResNet101\": {\n      \"pytorch\": \"resnet101\"\n    },\n    \"ResNet152\": {\n      \"pytorch\": \"resnet152\"\n    },\n    \"VGG11\": {\n      \"pytorch\": \"vgg11\"\n    },\n    \"VGG13\": {\n      \"pytorch\": \"vgg13\"\n    },\n    \"VGG16\": {\n      \"pytorch\": \"vgg16\"\n    },\n    \"VGG19\": {\n      \"pytorch\": \"vgg19\"\n    },\n    \"AlexNet\": {\n      \"pytorch\": \"alexnet\"\n    },\n    \"SqueezeNet1_0\": {\n      \"pytorch\": \"squeezenet1_0\"\n    },\n    \"SqueezeNet1_1\": {\n      \"pytorch\": \"squeezenet1_1\"\n    },\n    \"DenseNet121\": {\n      \"pytorch\": \"densenet121\"\n    },\n    \"DenseNet169\": {\n      \"pytorch\": \"densenet169\"\n    },\n    \"DenseNet161\": {\n      \"pytorch\": \"densenet161\"\n    },\n    \"DenseNet201\": {\n      \"pytorch\": \"densenet201\"\n    },\n    \"InceptionV3\": {\n      \"pytorch\": \"inception_v3\"\n    },\n    \"GoogLeNet\": {\n      \"pytorch\": \"googlenet\"\n    },\n    \"ShuffleNetV2_x0_5\": {\n      \"pytorch\": \"shufflenet_v2_x0_5\"\n    },\n    \"ShuffleNetV2_x1_0\": {\n      \"pytorch\": \"shufflenet_v2_x1_0\"\n    },\n    \"ShuffleNetV2_x1_5\": {\n      \"pytorch\": \"shufflenet_v2_x1_5\"\n    },\n    \"ShuffleNet\": {\n      \"pytorch\": \"shufflenet_v2_x2_0\"\n    },\n    \"MobileNetV2\": {\n      \"pytorch\": \"mobilenet_v2\"\n    },\n    \"ResNext50\": {\n      \"pytorch\": \"resnext50_32x4d\"\n    },\n    \"ResNext101\": {\n      \"pytorch\": \"resnext101_32x8d\"\n    },\n    \"Segmentation FCN ResNet50\": {\n      \"pytorch\": \"segmentation.fcn_resnet50\"\n    },\n    \"Segmentation FCN ResNet101\": {\n      \"pytorch\": \"segmentation.fcn_resnet101\"\n    },\n    \"Segmentation DeepLabV3 ResNet50\": {\n      \"pytorch\": \"segmentation.deeplabv3_resnet50\"\n    },\n    \"Segmentation DeepLabV3 ResNet101\": {\n      \"pytorch\": \"segmentation.deeplabv3_resnet101\"\n    },\n    \"Detection Faster R-CNN ResNet50\": {\n      \"pytorch\": \"detection.fasterrcnn_resnet50_fpn\"\n    },\n    \"Detection Mask R-CNN ResNet50\": {\n      \"pytorch\": \"detection.maskrcnn_resnet50_fpn\"\n    },\n    \"Keypoint R-CNN ResNet50\": {\n      \"pytorch\": \"detection.keypointrcnn_resnet50_fpn\"\n    }\n  }\n}","export function getPyTorchLibrary() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"n_classes\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"cutoffs\": {\n        \"type\": \"sequence\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"div_value\": {\n        \"type\": \"float\",\n        \"value\": 4.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"head_bias\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AlphaDropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Bilinear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in1_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"in2_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"CELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Concatenate\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Embedding\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_idx\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"EmbeddingBag\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mode\": {\n        \"type\": \"string\",\n        \"value\": \"'mean'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Flatten\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Fold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_ratio\": {\n        \"type\": \"float\",\n        \"value\": [\n          0.5,\n          0.5\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": 1\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRU\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRUCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GroupNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardtanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"min_val\": {\n        \"type\": \"float\",\n        \"value\": -1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_val\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Identity\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"InstanceNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTM\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTMCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LayerNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"normalized_shape\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"elementwise_affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LeakyReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"negative_slope\": {\n        \"type\": \"float\",\n        \"value\": 0.01,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Linear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocalResponseNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.0001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta\": {\n        \"type\": \"float\",\n        \"value\": 0.75,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"k\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LogSigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"LogSoftmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Max\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Mean\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MultiheadAttention\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"embed_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_heads\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"PReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_parameters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"init\": {\n        \"type\": \"float\",\n        \"value\": 0.25,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNN\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNNCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      }\n    },\n    \"RReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lower\": {\n        \"type\": \"float\",\n        \"value\": 0.125,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"upper\": {\n        \"type\": \"float\",\n        \"value\": 0.3333333333333333,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU6\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Sigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"1\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softmax2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmin\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softplus\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"beta\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 20,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softsign\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"SyncBatchNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Tanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Tanhshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Threshold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"threshold\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"value\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Unfold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"resnet18\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet34\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet152\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg11\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg13\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg16\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg19\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"alexnet\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"squeezenet1_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"squeezenet1_1\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet121\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet169\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet161\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet201\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"inception_v3\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"googlenet\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x0_5\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x1_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x1_5\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x2_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"mobilenet_v2\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnext50_32x4d\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnext101_32x8d\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.fcn_resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.fcn_resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.deeplabv3_resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.deeplabv3_resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.fasterrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.maskrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.keypointrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n  }\n}","export function getTensorFlowLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dynamic\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Activation\": {\n      \"activation\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ActivityRegularization\": {\n      \"l1\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"l2\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Add\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AlphaDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Average\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"BatchNormalization\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"epsilon\": {\n        \"type\": \"float\",\n        \"value\": 0.001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"center\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_mean_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_variance_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_clipping\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"fused\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"virtual_batch_size\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"adjustment\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Bidirectional\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"merge_mode\": {\n        \"type\": \"string\",\n        \"value\": \"concat\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"weights\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Concatenate\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ConvLSTM2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping1D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping2D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping3D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1,\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dense\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DenseFeatures\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DepthwiseConv2D\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dot\": {\n      \"axes\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"normalize\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Embedding\": {\n      \"input_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_dim\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask_zero\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"input_length\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Flatten\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRU\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRUCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianNoise\": {\n      \"stddev\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"InputSpec\": {\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"min_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"axes\": {\n        \"type\": \"string\",\n        \"value\": \"None)\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTM\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTMCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Lambda\": {\n      \"function\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"arguments\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Layer\": {\n      \")\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LeakyReLU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.3,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LinearModel\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse_combiner\": {\n        \"type\": \"string\",\n        \"value\": \"sum\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Masking\": {\n      \"mask_value\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Maximum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Minimum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Multiply\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"PReLU\": {\n      \"alpha_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shared_axes\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Permute\": {\n      \"dims\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RNN\": {\n      \"cell\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ReLU\": {\n      \"max_value\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"negative_slope\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RepeatVector\": {\n      \"n\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Reshape\": {\n      \"target_shape\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNN\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNNCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Softmax\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout1D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout2D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout3D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"StackedRNNCells\": {\n      \"cells\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Subtract\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ThresholdedReLU\": {\n      \"theta\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"TimeDistributed\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling1D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling2D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"interpolation\": {\n        \"type\": \"string\",\n        \"value\": \"nearest\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling3D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Wrapper\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding1D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding2D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding3D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    }\n  }\n}","export function getPyTorchAutoparams() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp.slice(0, inp.length - 1)\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AlphaDropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value)\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = 1 + ((inp[inp.length - 3] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[2] - p.kernel_size.value[2]) / p.stride.value[2])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 3] = Math.ceil(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 3] = Math.floor(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"BatchNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Bilinear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.out_features.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"CELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Concatenate\": {\n      outshape: (inp, p) => {\n        var tmp = inp[0]\n        inp.slice(1).map(row => {tmp[p.dim.value] += row[p.dim.value]})\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[0]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[1]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = inp[inp.length - 3] + 2 * p.padding.value[0]\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[1]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[2]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Conv1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"Conv2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"Conv3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"ConvTranspose1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = (L_in - 1) * p.stride.value + p.dilation.value * (p.kernel_size.value - 1) + p.output_padding.value + 1\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"ConvTranspose2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = (H_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const W_out = (W_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"ConvTranspose3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = (D_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const H_out = (H_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        const W_out = (W_in - 1) * p.stride.value[2] + p.dilation.value[2] * (p.kernel_size.value[2] - 1) + p.output_padding.value[2] + 1\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"Dropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Embedding\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        inp[inp.length - 1] = p.embedding_dim.value\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_embeddings.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"EmbeddingBag\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        tmp.push(p.embedding_dim.value)\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Flatten\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var features = 1/inp[0]\n        inp.map(val => {features *= val})\n        return [inp[0], Math.round(features)]\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_in\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"GRU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GRUCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GroupNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_channels.value = inp[1]\n        return p\n      }\n    },\n    \"Hardshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Identity\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"InstanceNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"LPPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var L_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value\n        if (p.ceil_mode.value) {\n          L_out = Math.ceil(L_out)\n        } else {\n          L_out = Math.floor(L_out)\n        }\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LPPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var H_out = 1 + (inp[inp.length - 2] + 2 * p.padding.value[0] - p.dilation[0] * (p.kernel_size[0] - 1) - 1) / p.stride.value[0]\n        var W_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value[1] - p.dilation[1] * (p.kernel_size[1] - 1) - 1) / p.stride.value[1]\n        if (p.ceil_mode.value) {\n          H_out = Math.ceil(H_out)\n          W_out = Math.ceil(W_out)\n        } else {\n          H_out = Math.floor(H_out)\n          W_out = Math.floor(W_out)\n        }\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LSTM\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LSTMCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LayerNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LeakyReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Linear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0;\n        var out_shape = inp.map((val, index) => {\n          idx = index;\n          return val\n        });\n        out_shape[idx] = p.out_features.value;\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_features.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"LocalResponseNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSoftmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Max\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        inp[inp.length - 1] = L_out;\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 1]\n        inp[inp.length - 1] = (H_in - 1) * p.stride.value - 2 * p.padding.value + p.kernel_size.value\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 3] = (D_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[2] - 2 * p.padding.value[2] + p.kernel_size.value[2]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Mean\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"PReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"RNN\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RNNCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU6\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let D_out = inp[inp.length - 3] + 2 * p.padding.value[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[1]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[2]\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Sigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmin\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softplus\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softsign\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SyncBatchNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Tanh\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Tanhshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Threshold\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ZeroPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_out = inp[inp.length - 2] + 2 * p.padding[0]\n        const W_out = inp[inp.length - 1] + 2 * p.padding[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"resnet18\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet34\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet152\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg11\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg13\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg16\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg19\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"alexnet\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"squeezenet1_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"squeezenet1_1\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet121\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet169\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet161\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet201\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"inception_v3\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"googlenet\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x0_5\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x1_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x1_5\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x2_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"mobilenet_v2\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnext50_32x4d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnext101_32x8d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.fcn_resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.fcn_resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.deeplabv3_resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.deeplabv3_resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.fasterrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.maskrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.keypointrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n  }\n}","import { MainLibrary } from \"./MainLibrary\";\n\n\n// Cascaded simplifying and de-simplifying\n\n// Parameters\nfunction SimplifyParameters(parameters) {\n  var new_parameters = [];\n  var keys = [];\n  Object.keys(parameters).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.sort().map((p_key, idx) => {\n    new_parameters.push(parameters[p_key].value)\n  })\n  new_parameters.push(parameters.extras)\n  return new_parameters\n}\nfunction DeSimplifyParameters(parameters, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  const recipe_copy = JSON.parse(JSON.stringify(recipe))\n  var new_param_lib = {};\n  var keys = [];\n  Object.keys(recipe).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.map(p_key => new_param_lib[p_key] = null)\n  keys.sort().map((p_key, idx) => {\n    new_param_lib[p_key] = recipe[p_key];\n    new_param_lib[p_key].value = parameters[idx];\n    if (new_param_lib[p_key].value === undefined) {\n      new_param_lib[p_key].value = recipe_copy[p_key].value\n    }\n  })\n  if (parameters[keys.length]) {\n    new_param_lib.extras = parameters[keys.length]\n  } else {\n    new_param_lib.extras = recipe.extras\n  }\n  return new_param_lib\n}\n\n// Content\nfunction SimplifyContent(content) {\n  var new_content = {};\n  Object.keys(content).sort().map((library_key, idx) => {\n    new_content[library_key] = [\n      content[library_key].reference,\n      SimplifyParameters(content[library_key].parameters)\n    ]\n  })\n  return new_content\n}\nfunction DeSimplifyContent(content, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  var new_content_lib = {}\n  Object.keys(recipe).sort().map((library_key, idx) => {\n    if (library_key in content) {\n      new_content_lib[library_key] = {\n        reference: content[library_key][0],\n        parameters: DeSimplifyParameters(content[library_key][1], recipe[library_key].parameters)\n      }\n    } else {\n      new_content_lib[library_key] = recipe[library_key]\n    }\n  })\n  return new_content_lib\n}\n\n// Outputs\nfunction SimplifyOutputs(outputs) {\n  var new_outputs = [];\n  Object.keys(outputs).sort().map(key => {\n    new_outputs.push(key)\n  })\n  return new_outputs\n}\nfunction DeSimplifyOutputs(outputs) {\n  var new_outputs_lib = {};\n  outputs.map(key => {\n    new_outputs_lib[key] = {}\n  })\n  return new_outputs_lib\n}\n\n// Position\nfunction SimplifyPosition(pos) {\n  return [\n    pos.x,\n    pos.y\n  ]\n}\nfunction DeSimplifyPosition(pos) {\n  return {\n    x: pos[0],\n    y: pos[1]\n  }\n}\n\n// Entire flowpoint\nfunction SimplifyFlowpoint(flowpoint) {\n  var new_flowpoint = {\n    ref: flowpoint.base_ref,\n    name: flowpoint.name,\n    isout: flowpoint.is_output,\n    out: SimplifyOutputs(flowpoint.outputs),\n    pos: SimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs,\n    concat_dim: flowpoint.concat_dim,\n    cont: {},\n    contig: flowpoint.contiguous,\n    re_ndims: flowpoint.reshape_ndims,\n    re_dims: flowpoint.reshape_dims\n  }\n  if (flowpoint.base_ref === 'Input') {\n    new_flowpoint.cont = flowpoint.content;\n  } else {\n    new_flowpoint.cont = SimplifyContent(flowpoint.content)\n  }\n  return new_flowpoint\n}\nfunction DeSimplifyFlowpoint(flowpoint, getEmptyFlowpointContent) {\n  const recipe = getEmptyFlowpointContent(flowpoint.ref);\n  var new_flowpoint_lib = {\n    base_ref: flowpoint.ref,\n    name: flowpoint.name,\n    is_output: flowpoint.isout,\n    outputs: DeSimplifyOutputs(flowpoint.out),\n    pos: DeSimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs || false,\n    concat_dim: flowpoint.concat_dim || 0,\n    output_shape: [],\n    content: {},\n    contiguous: flowpoint.contig || false,\n    reshape_ndims: flowpoint.re_ndims || 0,\n    reshape_dims: flowpoint.re_dims || []\n  };\n  if (flowpoint.ref === 'Input') {\n    new_flowpoint_lib.content = flowpoint.cont;\n  } else {\n    new_flowpoint_lib.content = DeSimplifyContent(flowpoint.cont, recipe, flowpoint.ref === 'Softmax')\n  }\n  return new_flowpoint_lib\n}\n\n// Fix tuples\nfunction FixTuples(flowpoints) {\n  Object.keys(flowpoints).map(key => {\n    var point = flowpoints[key];\n    if (point.base_ref !== 'Input') {\n      Object.keys(point.content).map(lib_key => {\n        var content = flowpoints[key].content[lib_key];\n        Object.keys(content.parameters).map(param_key => {\n          var param = flowpoints[key].content[lib_key].parameters[param_key];\n          if (param.istuple && !Array.isArray(param.value)) {\n\n            if (point.base_ref.toLowerCase().includes('1d')) {\n              param.value = [param.value];\n            } else if (point.base_ref.toLowerCase().includes('2d')) {\n              param.value = [param.value, param.value]\n            } else if (point.base_ref.toLowerCase().includes('3d')) {\n              param.value = [param.value, param.value, param.value]\n            }\n\n            if (!Array.isArray(param.value)) {\n              var sample_tuple = null;\n              Object.keys(content).map(param_key_2 => {\n                const p2 = content[param_key_2];\n                if (p2.istuple && Array.isArray(p2.value)) sample_tuple = p2.value.map(val => 1 * val)\n              })\n            }\n\n            if (!Array.isArray(param.value)) console.log('Could not fix', point)\n\n          }\n        })\n      })\n    }\n  })\n  return flowpoints\n}\n\n// Flowpoints (like plural)\nfunction SimplifyFlowpoints(flowpoints) {\n  var new_flowpoints = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints[key] = SimplifyFlowpoint(flowpoints[key])\n  })\n  return new_flowpoints\n}\nfunction DeSimplifyFlowpoints(flowpoints, getEmptyFlowpointContent) {\n  var new_flowpoints_lib = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints_lib[key] = DeSimplifyFlowpoint(flowpoints[key], getEmptyFlowpointContent)\n  })\n  return FixTuples(new_flowpoints_lib)\n}\n\n// Environment\nfunction SimplifyEnvironment(env) {\n  return [\n    env.library,\n    env.notes,\n    env.batch_first,\n    env.modelname\n  ]\n}\nfunction DeSimplifyEnvironment(env, main_env) {\n  var new_env_lib = JSON.parse(JSON.stringify(main_env));\n  new_env_lib.library = '' + env[0]\n  new_env_lib.notes = '' + env[1]\n  new_env_lib.batch_first = env[2] || false\n  new_env_lib.modelname = env[3] || 'NeuralNet'\n  new_env_lib.autoparams = main_env.autoparams\n  return new_env_lib\n}\n\n// Visual\nfunction SimplifyVisual(vis) {\n  return [\n    vis.darkTheme,\n    vis.theme,\n    vis.background,\n    vis.variant,\n    vis.drawerOpen,\n    vis.showShape,\n    vis.showName,\n    vis.snap\n  ]\n}\nfunction DeSimplifyVisual(vis, main_vis) {\n  var new_vis_lib = JSON.parse(JSON.stringify(main_vis));\n  new_vis_lib.darkTheme = vis[0]\n  new_vis_lib.theme = vis[1]\n  new_vis_lib.background = vis[2]\n  new_vis_lib.variant = vis[3]\n  new_vis_lib.drawerOpen = vis[4]\n  new_vis_lib.showShape = vis[5]\n  new_vis_lib.showName = vis[6]\n  new_vis_lib.snap = vis[7]\n  return new_vis_lib\n}\n\n// Settings\nfunction SimplifySettings(settings) {\n  return [\n    settings.modelID,\n    settings.count,\n    settings.lastPos\n  ]\n}\nfunction DeSimplifySettings(settings, main_set) {\n  var new_set_lib = JSON.parse(JSON.stringify(main_set));\n  new_set_lib.modelID = settings[0]\n  new_set_lib.count = settings[1]\n  new_set_lib.lastPos = settings[2]\n  return new_set_lib\n}\n\n// Try to parse json\nfunction TryParseJSON(msg) {\n  try {\n    return JSON.parse(msg)\n  } catch(err) {}\n  return msg\n}\n\n// Full\nfunction Simplify(state) {\n  return {\n    flowpoints: SimplifyFlowpoints(state.flowpoints),\n    environment: SimplifyEnvironment(state.environment),\n    visual: SimplifyVisual(state.visual),\n    settings: SimplifySettings(state.settings),\n  }\n}\nfunction DeSimplify(state, getEmptyFlowpointContent, main_lib) {\n  state = TryParseJSON(state)\n  //var main_lib = MainLibrary();\n  return {\n    flowpoints: DeSimplifyFlowpoints(state.flowpoints, getEmptyFlowpointContent),\n    environment: DeSimplifyEnvironment(state.environment, main_lib.environment),\n    visual: DeSimplifyVisual(state.visual, main_lib.visual),\n    settings: DeSimplifySettings(state.settings, main_lib.settings),\n    notification: main_lib.notification\n  }\n}\n\n\nexport function Library2String(state) {\n\n  return JSON.stringify(Simplify(state))\n\n}\n\n\nexport function String2Library(msg, getEmptyFlowpointContent, main_lib) {\n  \n  return DeSimplify(msg, getEmptyFlowpointContent, main_lib)\n\n}","var axios = require('axios');\n\nfunction rjust(msg, n, rep) {\n  msg = '' + msg\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(() => {\n    msg = rep + msg\n  })\n  return msg\n}\n\n\nfunction num2bigBase(num, lib) {\n  if (!lib) {\n    lib = '0123456789'\n    lib += 'abcdefghijklmnopqrstuvwxyz'\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  }\n  if (num < lib.length) {\n    return lib[num]\n  } else {\n    return num2bigBase(Math.floor(num / lib.length)) + lib[num % lib.length]\n  }\n}\n\n\nfunction getId(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var lib = '0123456789'\n  lib += 'abcdefghijklmnopqrstuvwxyz'\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var msg = ''\n  msg += Math.round(Math.random() * 100)\n  var d = new Date()\n  msg += rjust(d.getSeconds(), 2, 0)\n  msg += rjust(d.getMinutes(), 2, 0)\n  msg += rjust(d.getHours(), 2, 0)\n  msg += rjust(d.getDate(), 2, 0)\n  msg += rjust(d.getMonth(), 2, 0)\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\n  msg = num2bigBase(msg, lib)\n  Array.from(Array(l - msg.length).keys()).map(() => {\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\n  })\n  return msg\n}\n\n\nexport function PostToDataBase(data, cb) {\n  let model_id = getId(12)\n  data.match(/.{1,5000}/g).map((msg, idx) => {\n    try {\n      var url = 'https://docs.google.com/forms/d/e/1FAIpQLSfA4C6HCBGWLtdfUI4th6VDR7cjtSsj0fp0Tomw96CbgqjO9g/formResponse?usp=pp_url'\n      url += '&entry.1116133740=' + model_id;\n      url += '&entry.1405886587=' + msg + '_NnUuMmBbEeRr_' + rjust('' + idx, 4, '0');\n      url += '&submit=Submit'\n      axios.get(url).then(() => {})\n    } catch(err) {}\n  })\n  if (cb) cb(model_id)\n}\n\n\nexport function LoadDataBase(cb) {\n  axios.get('https://docs.google.com/spreadsheets/d/10LoweeCDvGHQBHb8Plr_1IrLXPy4-N7CFqzcO73MqCs/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0').then(res => {\n    var data = {};\n    var concat_data = {};\n    var raw = res.data.split('\\r\\n');\n    var tmp;\n    for (var idx = 1; idx < raw.length; idx++) {\n      tmp = raw[idx].split(',')\n      if (!(tmp[0] in concat_data)) concat_data[tmp[0]] = {}\n      var number = tmp[1].substring(tmp[1].length - 18)\n      if (number.includes('NnUuMmBbEeRr')) concat_data[tmp[0]][number] = tmp[1].substring(0, tmp[1].length - 18)\n    }\n    // Concating data\n    Object.keys(concat_data).map(key => {\n      data[key] = ''\n      Object.keys(concat_data[key]).sort().map(msg => {\n        data[key] += concat_data[key][msg]\n      })\n    })\n    if (cb) cb(data)\n  })\n}","var CryptoJS = require(\"crypto-js\");\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nfunction getSpecialsLib(reversed) {\n  var lib = {\n    '§': '%C2%A7',\n    '\"': '%22',\n    '#': '%23',\n    '%': '%25',\n    '&': '%26',\n    '=': '%3D',\n    '`': '%60',\n    '^': '%5E',\n    '+': '%2B',\n    '´': '%C2%B4',\n    '¨': '%C2%A8'\n  }\n  if (reversed) {\n    var revlib = {}\n    Object.keys(lib).map(key => {\n      revlib[lib[key]] = key\n    })\n    return revlib\n  }\n  return lib\n}\n\n\nexport function Encrypt(data, key) {\n  var toEncrypt = {\n    test_string: 'there_are_fish_in_the_ocean',\n    data: data\n  }\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(toEncrypt), key).toString()\n  const specials = getSpecialsLib()\n  Object.keys(specials).map(key => {\n    encrypted = ReplaceAll(encrypted, key, specials[key])\n  })\n  return encrypted\n}\n\n\nexport function Decrypt(data, key) {\n  var msg = data\n  const specials = getSpecialsLib(true)\n  Object.keys(specials).map(key => {\n    msg = ReplaceAll(msg, key, specials[key])\n  })\n  var decrypted = '';\n  try {\n    decrypted = CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8)\n  } catch(err) {\n    return false\n  }\n  if (decrypted.includes('there_are_fish_in_the_ocean')) {\n    return JSON.parse(decrypted).data\n  }\n  return false\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\n\n\nclass WhatIsThis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    }\n  }\n  render() {\n    return (\n      <div style={{padding:0}}>\n        <Button color='primary' style={{textTransform:'none', padding:'1', marginLeft:-7}} onClick={() => {this.setState({open:!this.state.open}); this.props.onClick()}}>\n          What is this?\n        </Button>\n        <div style={{marginLeft:20, marginTop:10}} onClick={() => {this.setState({open:false}); this.props.onClick()}}>\n          <Collapse in={this.state.open}>\n            <Typography color='inherit' paragraph>Model protection, using AES encryption.</Typography>\n            <Typography color='inherit' paragraph>\n              When a model is saved, it's content is converted to a string and stored in a\n              publicly view-able google sheet.<br/>\n              Altough anyone can see the model in this google sheet, encryption will make it\n              impossible for anyone without the password to read the model.\n            </Typography>\n            <Typography color='inherit' paragraph>\n              If you choose to encrypt your model, your own device will perform the\n              encryption, and then send the encrypted model to the google sheet.<br/><br/>\n\n              When you try to load an encrypted model, the encrypted string will be downloaded\n              from the google sheet, and then decrypted by your device.<br/><br/>\n              This ensures point-to-point encryption, in which no un-encrypted data is ever\n              transmitted over the internet.\n            </Typography>\n            <Typography color='inherit' style={{fontWeight:'bold'}} paragraph>\n              NB!<br/>\n              The password is NEVER STORED! If you forget your password, the contents\n              of your model cannot be recovered.\n            </Typography>\n          </Collapse>\n        </div>\n        <br/>\n      </div>\n    )\n  }\n}\n\n\nexport class LoadDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Encrypted model</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please type your password in order to decrypt the model<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (this.state.pswd === '') {\n                this.props.onClose()\n              } else {\n                this.props.onSubmit(this.state.pswd)\n              }\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'CONTINUE WITHOUT LOADING MODEL') : 'DECRYPT MODEL'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\n\nexport class SaveDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Model encryption (optional)</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Type a password to encrypt your model, or leave the\n            password field empty in order to create a public link<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) this.props.onSubmit(this.state.pswd)\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              this.props.onSubmit(this.state.pswd)\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'Continue without password') : 'Continue'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}","import React from 'react';\nimport { Typography, Dialog, DialogTitle, DialogContentText, DialogContent, ExpansionPanel, ExpansionPanelSummary, Stepper, StepContent, StepLabel, Step, Link } from \"@material-ui/core\";\n\n\nexport class HelpDialog extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { step:0 }\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo(idx) {\n    this.setState({ step:idx })\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        fullWidth\n        maxWidth='sm'\n        style={{maxHeight:'90vh', height:'auto'}}>\n\n        <DialogTitle>Getting started</DialogTitle>\n\n        <div style={{overflow:'scroll', width:'100%'}}>\n\n          <DialogContent>\n            <DialogContentText>\n              Welcome to Flowpoints ML!<br/>\n              Here you can design deep learning models graphically.<br/><br/>\n              The following few sections will help you get going :)<br/>\n              You can also check out the <Link href='https://github.com/mariusbrataas/flowpoints_ml#readme' target='_blank'>documentation</Link> for more information.<br/><br/>\n              Found an bug? Please open a new <Link href=\"https://github.com/mariusbrataas/flowpoints_ml/issues\" target='_blank'>issue</Link>, and feel free to fix it!\n            </DialogContentText>\n          </DialogContent>\n\n          <Stepper activeStep={this.state.step} orientation='vertical'>\n\n            <Step key={0} completed={false}>\n              <StepLabel onClick={() => {this.goTo(0)}}>The main parts of the screen</StepLabel>\n              <StepContent>\n                <Typography>\n                  Before we get started you should know the main parts of this tool.<br/><br/>\n                  \n                  The little stack of colored buttons:<br/>\n                  You'll use these for creating new flowpoints, copy the entire code of your model,\n                  create shareable links to your model, show/hide the panel on the left of your screen,\n                  and to view this guide.<br/><br/>\n                  \n                  The \"Misc\" tab in the side panel:<br/>\n                  Here you can change what library you want to utilize to create your model,\n                  write some notes about your work, and change the appearance of things.\n                  \n                  The \"Code\" tab in the side panel:<br/>\n                  When you create a model, it's corresponding code will be displayed here.<br/><br/>\n                  \n                  The \"Flowpoint\" tab:<br/>\n                  All parameters of the selected flowpoint can be viewed and changed in this tab.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={1} completed={false}>\n              <StepLabel onClick={() => {this.goTo(1)}}>Creating a new flowpoint</StepLabel>\n              <StepContent>\n                <Typography>\n                  Click the + button in the button stack. This should create a new\n                  flowpoint on your screen and move focus to this one automatically.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={2} completed={false}>\n              <StepLabel onClick={() => {this.goTo(2)}}>Connecting flowpoints</StepLabel>\n              <StepContent>\n                <Typography>\n                  First create two flowpoints.<br/>\n                  Did they create a connection automatically? No worries, that is supposed\n                  to happen whenever you create a flowpoint while another flowpoint is selected.<br/><br/>\n                  To create a new connection manually, start by selecting the flowpoint\n                  you want to get the output from. Next, hold shift while clicking the flowpoint\n                  that should receive the output. Poof! They're connected!<br/><br/>\n                  Disconnecting flowpoints is just as simple. Select the flowpoint that supplies the output,\n                  hold shift, and click the flowpoint that's receiving the input.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={3} completed={false}>\n              <StepLabel onClick={() => {this.goTo(3)}}>Direction of connections</StepLabel>\n              <StepContent>\n                <Typography>\n                  All connections between flowpoints signify what direction data is moving.<br/><br/>\n                  When connecting two flowpoints, the first flowpoint you select will be used as\n                  the \"sender\" in that connection, while the second flowpoint will be the \"receiver\".<br/><br/>\n                  The color-gradient of connections help identify which is which.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={4} completed={false}>\n              <StepLabel onClick={() => {this.goTo(4)}}>Changing a flowpoint's parameters</StepLabel>\n              <StepContent>\n                <Typography>\n                  If you head over to the \"Flowpoint\" tab you should see a bunch of fields\n                  (click on a flowpoint if you can't see any such fields).<br/><br/>\n                  To change the value of a field, click it, and try typing something.\n                  Note that some fields will only accept numbers.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={5} completed={false}>\n              <StepLabel onClick={() => {this.goTo(5)}}>Layer types</StepLabel>\n              <StepContent>\n                <Typography>\n                  The field at the very top in the \"Flowpoint\" tab is where you assign\n                  a layer type to your flowpoint.<br/><br/>\n                  When you click this field, a long list will pop up. These are all\n                  the layers available. Small, colored badges indicate what libraries the\n                  layer is available in, i.e. TF for TensorFlow, or PT for PyTorch.<br/><br/>\n                  If you start typing the name of a layer, the list will try to suggest a smaller selection of layers.<br/><br/>\n                  Ideally, it should be possible to create models utilizing layers that are available\n                  in either library, and quickly switch between them by just changing the \"Library\" field\n                  in the \"Misc\" tab.<br/>\n                  This won't always be the case, but entertain this idea, paramaters from all libraries\n                  will be stored whenever you create a link to your model.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={6} completed={false}>\n              <StepLabel onClick={() => {this.goTo(6)}}>Changing appearance</StepLabel>\n              <StepContent>\n                <Typography>\n                  Head over to the \"Misc\" tab. You'll see the fields \"Theme\" and \"Variant\",\n                  and a couple of buttons just beneath.<br/><br/>\n                  These have no practical application what-so-ever, but you'll be able to\n                  create deep learning models with style! I recommend trying the theme \"orange\"\n                  with the variant \"paper\".<br/><br/>\n                  Play arround till you find something you like. When you share a model, any\n                  changes to it's appearance will be included.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={7} completed={false}>\n              <StepLabel onClick={() => {this.goTo(7)}}>Sharing</StepLabel>\n              <StepContent>\n                <Typography>\n                  Ready to show off your work?<br/><br/>\n                  Click the button in the button stack showing a link. This should open a new box on your\n                  screen, asking wether you'd like to encrypt your model.<br/><br/>\n                  Adding encryption will ensure that no one without the correct password can open your model.<br/><br/>\n                  If you want to create a public link, just leave the text field empty and click continue.<br/><br/>\n                  The link will be copied to your clip-board, and the current URL should at the top of your\n                  browser will change in order to match the link.<br/><br/>\n                  If you chose to add a password, this password will be requested the next time you open your model.<br/><br/>\n                  Note that if you forget your password, the data of your model can be considered lost.\n                  Your password is not stored anywhere, and there exists no other keys that can decrypt your data.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={8} completed={false}>\n              <StepLabel onClick={() => {this.goTo(8)}}>Examples</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=KlHpdLzP3SDx\" target=\"_blank\">TensorFlow CNN used for the CIFAR10 example</Link><br/>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=9fehu18ra4ty\" target=\"_blank\">PyTorch CNN used for the CIFAR10 example</Link>\n                </Typography>\n              </StepContent>\n            </Step>\n\n          </Stepper>\n        </div>\n      </Dialog>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\n// Importing installed tools\nimport { Flowpoint, Flowspace } from 'flowpoints';\nimport copy from 'copy-to-clipboard';\n\n\n// Importing local tools\nimport { Sidebar } from './sidebar/Sidebar.js';\nimport { MainButtons } from './MainButtons';\nimport { Parser } from './parser/Parser';\nimport { Library2String, String2Library } from './LibraryParser';\nimport { PostToDataBase, LoadDataBase } from './DataBaseHandler';\nimport { Encrypt, Decrypt } from './Cryptographer';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { LoadDialog, SaveDialog } from './PasswordDialog.js';\nimport { MainLibrary } from './MainLibrary';\nimport { HelpDialog } from './HelpDialog';\n\n\nfunction shapeBox(shape) {\n  var msg = '['\n  shape.map(val => {\n    msg += val + ','\n  })\n  if (shape.length > 0) msg = msg.substring(0, msg.length - 1)\n  msg += ']'\n  return (\n    <div style={{textAlign:'center', paddingBottom:'10px'}}>\n      {\n        msg\n      }\n    </div>\n  )\n}\n\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props);\n\n    // Building state library\n    this.state = MainLibrary()\n\n    // Helpers\n    this.diagramRef = null;\n\n    // Binding class methods\n    this.showNotification = this.showNotification.bind(this);\n    this.updateCode = this.updateCode.bind(this);\n    this.updateAvailableLayers = this.updateAvailableLayers.bind(this);\n    this.prepOutputShapes = this.prepOutputShapes.bind(this);\n    this.loadDecryptedModel = this.loadDecryptedModel.bind(this);\n    this.getEmptyFlowpointContent = this.getEmptyFlowpointContent.bind(this);\n    this.addFlowpoint = this.addFlowpoint.bind(this);\n    this.copyCode = this.copyCode.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.showHideHelp = this.showHideHelp.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.deleteFlowpoint = this.deleteFlowpoint.bind(this);\n    this.deleteSelected = this.deleteSelected.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n\n  \n  componentDidMount() {\n\n    // Open drawer\n    var visual = this.state.visual;\n    visual.drawerOpen = true;\n    this.setState({visual});\n\n    // Loading model?\n    var query = window.location.href.split(this.state.settings.baseUrl)[1]\n    if (query.includes('p=')) {\n\n      query = query.substring(query.indexOf('p=') + 2, query.length)\n      query = query.substring(0, 12)\n\n      // Notify user that model is trying to load\n      this.showNotification('Trying to load model...', 'info')\n\n      // Loading database\n      LoadDataBase(data => {\n\n        // Model in data?\n        if (query in data) {\n          var decrypted = Decrypt(data[query], 'Hello world')\n          // Encryption?\n          if (decrypted) {\n            this.loadDecryptedModel(decrypted, query)\n          } else {\n            this.showNotification('Model is encrypted')\n            var visual = this.state.visual;\n            var environment = this.state.environment;\n            var settings = this.state.settings;\n            settings.modelID = query;\n            environment.encrypted_model = data[query]\n            visual.show_load_dialog = true;\n            this.setState({visual, environment, settings})\n          }\n\n        } else {\n          this.showNotification('Could not find model in database', 'error')\n        }\n\n      })\n\n    }\n\n    // Updating available layers\n    this.updateAvailableLayers()\n\n  }\n\n\n  showNotification(msg, color) {\n    if (!((color || 'nothing').includes('#'))) {\n      switch(color) {\n        case 'info':\n          color = '#2979ff'\n          break;\n        case 'error':\n          color = '#dd2c00'\n          break;\n        case 'warning':\n          color = '#ffd600'\n          break;\n        case 'success':\n          color = '#00b843'\n          break;\n        default:\n          color = '#37474f'\n      }\n    }\n    var notification = this.state.notification;\n    notification.queue.push({\n      msg,\n      color,\n      key: new Date().getTime()\n    })\n    if (notification.show) {\n      notification.show = false;\n    } else {\n      if (notification.queue.length) {\n        notification.content = notification.queue.shift()\n        notification.show = true\n      }\n    }\n    this.setState({notification})\n  }\n\n\n  updateCode(cb) {\n    var environment = this.state.environment;\n    let tmp = Parser(this.state)\n    environment.code = tmp.msg;\n    environment.order = tmp.order;\n    environment.dummies = tmp.dummies;\n    this.setState({environment})\n    this.prepOutputShapes();\n    if (cb) cb(environment.code)\n  }\n\n\n  updateAvailableLayers() {\n\n    var environment = this.state.environment;\n\n    // Creating list\n    var availableLayers = {Input: Object.keys(environment.libraryFetchers)};\n    Object.keys(environment.baseLib).map(layer_key => {\n      availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\n    })\n\n    // Updating environment\n    environment.availableLayers = availableLayers;\n\n    // Updating state\n    this.setState({environment})\n\n  }\n\n\n  prepOutputShapes(cb) {\n\n    if (this.state.environment.library in this.state.environment.autoparams) {\n\n      // Helpers\n      const autoparams = this.state.environment.autoparams[this.state.environment.library]();\n      var flowpoints = this.state.flowpoints;\n      var dummies = this.state.environment.dummies;\n      const order = this.state.environment.order;\n      const library = this.state.environment.library;\n\n      // Setting output-shapes of inputs\n      var visited = []\n      order.map(key => {\n        var point = flowpoints[key]\n        if (point.base_ref === 'Input') {\n          point.output_shape = Object.keys(point.content.dimensions).map(dimkey => {\n            return parseInt(point.content.dimensions[dimkey])\n          })\n          visited.push(key)\n        }\n      })\n\n      // Setting all output-shapes\n      order.map(key => {\n        if (!visited.includes(key)) {\n          var point = flowpoints[key];\n          if (point.content[library]) {\n            var tmp_autoparams = autoparams[point.content[library].reference];\n            if (tmp_autoparams) {\n              var bestInp = null\n              var all_inps = []\n              dummies[key].inputs.map(inp_key => {\n                if (visited.includes(inp_key)) {\n                  bestInp = inp_key\n                  all_inps.push(flowpoints[inp_key].output_shape.map(value => 1 * value))\n                }\n              })\n              if (flowpoints[bestInp]) {\n                const prevshape = flowpoints[bestInp].output_shape.map(value => 1 * value);\n                point.content[library].parameters = tmp_autoparams.autoparams(all_inps, point.content[library].parameters)\n                point.output_shape = tmp_autoparams.outshape(all_inps, point.content[library].parameters).map(value => parseInt(value))\n                visited.push(key)\n              }\n            }\n          } else {\n            point.output_shape = []\n          }\n        }\n      })\n\n      // Updating state\n      this.setState({ flowpoints })\n\n    }\n\n  }\n\n\n  loadDecryptedModel(decrypted, model_id) {\n\n    // Parsing\n    var new_state = String2Library(decrypted, this.getEmptyFlowpointContent, this.state)\n\n    // Updating visual\n    new_state.visual.show_load_dialog = false;\n    new_state.visual.load_dialog_error = false;\n    new_state.visual.show_save_dialog = false;\n\n    // Ensuring getbaselib and library fetchers are added\n    new_state.environment.getBaseLibrary = this.state.environment.getBaseLibrary\n    new_state.environment.libraryFetchers = this.state.environment.libraryFetchers\n\n    // Fixing model ID\n    new_state.settings.modelID = model_id || this.state.settings.modelID;\n\n    // Setting state\n    this.setState({flowpoints:{}, settings:{...this.state.settings, count:0}}, () => {\n      this.setState(new_state, () => {\n        // Showing notification\n        this.showNotification('Loaded model', '#00b24a')\n  \n        // Updating code and layers\n        this.updateAvailableLayers()\n        this.updateCode()\n      })\n    })\n\n  }\n\n\n  getEmptyFlowpointContent(base_ref) {\n\n    // Input nodes are treated differently from all other nodes\n    if (base_ref === 'Input') {\n      return {\n        n_dims: 4,\n        dimensions: {\n          0: 1,\n          1: 1,\n          2: 1,\n          3: 1\n        }\n      }\n    }\n\n    // Not an input node? Getting base_library references\n    var environment = this.state.environment;\n    const base_point = environment.getBaseLibrary()[base_ref];\n\n    // Adding contents and returning\n    var content = {};\n    Object.keys(base_point).map(library_key => {\n      if (library_key in environment.libraryFetchers) {\n        content[library_key] = {\n          reference: base_point[library_key],\n          parameters: environment.libraryFetchers[library_key]()[base_point[library_key]]\n        }\n      }\n    })\n    return content\n\n  }\n\n\n  addFlowpoint() {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Creating flowpoint\n    const base_ref = settings.count === 0 ? 'Input' : 'Linear';\n    var newPoint = {\n      base_ref: base_ref,\n      name: '',\n      outputs: {},\n      is_output: false,\n      concat_inputs: false,\n      concat_dim: 0,\n      output_shape: [],\n      contiguous: false,\n      reshape_ndims: 0,\n      reshape_dims: [],\n      pos: {\n        x: settings.lastPos.x,\n        y: settings.lastPos.y + 90\n      },\n      content: this.getEmptyFlowpointContent(base_ref)\n    }\n\n    // Adding flowpoint\n    flowpoints['' + settings.count] = newPoint;\n\n    // Connecting previously selected flowpoint to this one (maybe)\n    if (settings.selected) flowpoints[settings.selected].outputs['' + settings.count] = {}\n\n    // Updating settings\n    settings.selected = '' + settings.count\n    settings.count += 1\n    settings.lastPos = {\n      x: settings.lastPos.x,\n      y: settings.lastPos.y + 90\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n    this.updateCode()\n\n  }\n\n\n  copyCode() {\n    this.updateCode(code => {\n      copy(code);\n      this.showNotification('Code copied to clip-board', 'info')\n    })\n  }\n\n\n  createLink() {\n    var visual = this.state.visual;\n\n    // Showing encryption dialog\n    visual.show_save_dialog = true\n\n    // Updating state\n    this.setState({visual})\n\n  }\n\n\n  showHideHelp() {\n    var visual = this.state.visual;\n    visual.show_help_dialog = !visual.show_help_dialog;\n    this.setState({visual})\n  }\n\n\n  showHide() {\n    \n    // Loading from state\n    var visual = this.state.visual;\n    \n    // Open/close drawer\n    visual.drawerOpen = !visual.drawerOpen;\n\n    // Updating state\n    this.setState({ visual })\n\n  }\n\n\n  deleteFlowpoint(key) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Removing selected?\n    if (key === settings.selected) settings.selected = null;\n\n    // Deleting flowpoint\n    delete flowpoints[key];\n\n    // Removing any connections other flowpoints have to the deleted one\n    Object.keys(flowpoints).map(test_key => {\n      if (key in flowpoints[test_key].outputs) {\n        delete flowpoints[test_key].outputs[key]\n      }\n    })\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  deleteSelected() {\n    this.deleteFlowpoint(this.state.settings.selected);\n  }\n\n\n  handleClick(key, e) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Handling click\n    if (e.shiftKey) {\n      // If shift is pressed: Create / delete connection\n      if (settings.selected === null) {\n        // Nothing selected: selecting current\n        settings.selected = key;\n      } else {\n        if (settings.selected !== key) {\n          // Creating connection from previously clicked to current clicked\n          var pointA = flowpoints[settings.selected]\n          if (key in pointA.outputs) {\n            delete pointA.outputs[key]\n          } else {\n            pointA.outputs[key] = {}\n          }\n          this.updateCode()\n        }\n      }\n    } else {\n      // If not shift pressed: Select / deselect flowpoint\n      settings.selected = (settings.selected === null ? key : (settings.selected == key ? null : key))\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div style={{backgroundColor: (this.state.visual.darkTheme ? 'black' : 'white')}}>\n\n\n        <Sidebar\n          state={this.state}\n          refresh={() => {return this.state}}\n          updateFlowpoints={flowpoints => {this.setState({flowpoints}); this.updateCode()}}\n          updateEnvironment={environment => {this.setState({environment}); this.updateCode()}}\n          updateVisual={visual => this.setState({visual})}\n          updateSettings={settings => {this.setState({settings}); this.updateCode()}}\n          notification={(msg, color) => this.showNotification(msg, color)}\n          getEmptyFlowpointContent={this.getEmptyFlowpointContent}\n          deleteSelected={this.deleteSelected}\n          updateAvailableLayers={this.updateAvailableLayers}\n          diagramRef={this.diagramRef}\n          prepOutputShapes={this.prepOutputShapes}/>\n        \n\n        <Flowspace\n          theme={this.state.visual.theme}\n          variant={this.state.visual.variant}\n          background={this.state.visual.darkTheme ? 'black' : 'white'}\n          selected={this.state.settings.selected}\n          getDiagramRef={ref => {this.diagramRef = ref}}\n          avoidCollisions\n          onClick={() => {\n            \n            // Loading from state\n            var settings = this.state.settings;\n            settings.selected = null;\n\n            // Updating state\n            this.setState({settings})\n\n          }}\n          style={{\n            height: '100vh',\n            width: 'calc(100vw - ' + this.state.visual.drawerWidth * this.state.visual.drawerOpen + ')',\n            marginLeft: this.state.visual.drawerWidth * this.state.visual.drawerOpen,\n            transition: 'margin-left 0.4s ease-out'\n          }}>\n\n          {\n            Object.keys(this.state.flowpoints).map(key => {\n              const point = this.state.flowpoints[key];\n              return (\n                <Flowpoint\n                  key={key}\n                  outputs={point.outputs}\n                  onClick={e => {this.handleClick(key, e)}}\n                  startPosition={point.pos}\n                  snap={{x:10, y:10}}\n                  style={{\n                    width:'auto',\n                    height:'auto',\n                    minWidth:150,\n                    maxHeight: (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? 150 : 50\n                  }}\n                  onDrag={pos => {\n                    var flowpoints = this.state.flowpoints;\n                    var settings = this.state.settings;\n                    flowpoints[key].pos = pos;\n                    settings.lastPos = pos;\n                    this.setState({flowpoints, settings})\n                  }}>\n                  <div style={{height:'auto', paddingLeft:4, paddingRight:4}}>\n                      <div style={{display:'table', width:'100%', height:'50px'}}>\n                        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n                          {\n                            this.state.visual.showName ? (point.name !== '' ? point.name : 'p_' + key) : point.base_ref\n                          }\n                        </div>\n                      </div>\n                      {\n                        (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? shapeBox(point.output_shape) : null\n                      }\n                  </div>\n                </Flowpoint>\n              )\n            })\n          }\n\n        </Flowspace>\n\n\n        <MainButtons\n          state={this.state}\n          addFlowpoint={this.addFlowpoint}\n          copyCode={this.copyCode}\n          createLink={this.createLink}\n          showHide={this.showHide}\n          showHideHelp={this.showHideHelp}/>\n        \n\n        <Snackbar\n          autoHideDuration={4000}\n          onClose={() => {\n            var notification = this.state.notification;\n            notification.show = false;\n            this.setState({notification})\n          }}\n          onExited={() => {\n            var notification = this.state.notification;\n            if (notification.queue.length > 0) {\n              notification.content = notification.queue.shift();\n              notification.show = true\n            }\n            this.setState({notification})\n          }}\n          anchorOrigin={{vertical:'top', horizontal:'right'}}\n          open={this.state.notification.show}>\n          <SnackbarContent\n            message={this.state.notification.content.msg}\n            style={{backgroundColor:this.state.notification.content.color, boxShadow:'none'}}/>\n        </Snackbar>\n\n\n        <HelpDialog\n          open={this.state.visual.show_help_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_help_dialog = false;\n            this.setState({visual})\n          }}/>\n\n        \n        <LoadDialog\n          error={this.state.visual.load_dialog_error}\n          open={this.state.visual.show_load_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_load_dialog = false;\n            this.setState({visual, settings:{...this.state.settings, modelID:null}})\n          }}\n          onSubmit={pswd => {\n            var environment = this.state.environment;\n            var decrypted = Decrypt(environment.encrypted_model, pswd)\n            if (decrypted) {\n              this.loadDecryptedModel(decrypted)\n            } else {\n              var visual = this.state.visual;\n              visual.load_dialog_error = true;\n              this.setState({visual})\n              this.showNotification('Wrong password', 'error')\n            }\n          }}/>\n\n\n        <SaveDialog\n          error={this.state.visual.save_dialog_error}\n          open={this.state.visual.show_save_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n          }}\n          onSubmit={pswd => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n            PostToDataBase(Encrypt(Library2String(this.state), (pswd === '' ? 'Hello world' : pswd)), model_id => {\n\n              // Loading from state\n              var settings = this.state.settings;\n              var newUrl = settings.baseUrl + '?p=' + model_id;\n\n              // Setting model id\n              settings.modelID = model_id;\n\n              // Updating state\n              this.setState({settings})\n\n              // Updating code\n              this.updateCode()\n\n              // Changing current url\n              window.history.pushState({}, model_id, newUrl);\n\n              // Copy link to clip-board and display notification\n              copy(newUrl)\n              this.showNotification('Model saved and link copied to clip-board')\n\n            })\n          }}/>\n      \n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { getBaseLibrary } from \"./libraries/base_library\";\nimport { getPyTorchLibrary } from \"./libraries/pytorch_library\";\nimport { getTensorFlowLibrary } from \"./libraries/tensorflow_library\";\nimport { getPyTorchAutoparams } from \"./libraries/pytorch_autoparams\";\n\nexport function MainLibrary() {\n  return {\n    flowpoints: {},\n    environment: {\n      getBaseLibrary: getBaseLibrary,\n      baseLib: getBaseLibrary(),\n      library: 'pytorch',\n      libraryFetchers: {\n        pytorch: getPyTorchLibrary,\n        tensorflow: getTensorFlowLibrary\n      },\n      autoparams: {\n        pytorch: getPyTorchAutoparams\n      },\n      availableLayers: [],\n      code: 'Dont panick',\n      encrypted_model: '',\n      notes: '',\n      order: [],\n      dummies: {},\n      batch_first: true,\n      modelname: 'NeuralNet'\n    },\n    visual: {\n      darkTheme: false,\n      theme: 'indigo',\n      background: 'white',\n      variant: 'outlined',\n      drawerOpen: false,\n      drawerWidth: 360,\n      showShape: false,\n      showName: false,\n      snap: true,\n      show_load_dialog: false,\n      load_dialog_error: false,\n      show_save_dialog: false,\n      show_help_dialog: false\n    },\n    settings: {\n      tab: 'Misc',\n      modelID: null,\n      baseUrl: window.location.href.split('/?')[0],\n      count: 0,\n      selected: null,\n      lastPos: {x:50, y:-40}\n    },\n    notification: {\n      show: false,\n      content: {\n        msg: 'Hello world',\n        color: '#00e676'\n      },\n      queue: []\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}