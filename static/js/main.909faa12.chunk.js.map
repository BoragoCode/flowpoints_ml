{"version":3,"sources":["sidebar/SidebarHead.js","sidebar/FrontHelpers.js","sidebar/MiscTab.js","sidebar/CodeTab.js","sidebar/FlowpointTab.js","sidebar/SidebarContents.js","sidebar/TabContainer.js","sidebar/Sidebar.js","MainButtons.js","parser/FlowOrder.js","parser/PytorchParser.js","parser/Parser.js","parser/TensorflowParser.js","libraries/base_library.js","libraries/pytorch_library.js","libraries/tensorflow_library.js","libraries/pytorch_autoparams.js","LibraryParser.js","DataBaseHandler.js","Cryptographer.js","PasswordDialog.js","HelpDialog.js","App.js","MainLibrary.js","serviceWorker.js","index.js"],"names":["SidebarHead","props","react_default","a","createElement","Typography_default","href","gutterBottom","variant","component","style","padding","index_es","color","underline","position","right","top","IconButton_default","target","index_esm","TextFieldContainer","label","value","placeholder","type","rows","margin","multiline","onChange","e","SelectContainer","FormControl_default","htmlFor","inputProps","name","id","options","map","opt","Autosuggest","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","initmsg","open","arrow_idx","wrapperRef","handleClickOutside","bind","assertThisInitialized","inherits","createClass","key","document","addEventListener","removeEventListener","contains","setState","_this2","opt_keys","idx","keys","chips","val","push","fontSize","height","marginLeft","backgroundColor","toLowerCase","includes","selected","onClick","class","length","disabled","width","paddingTop","marginTop","onKeyDown","keyCode","Math","max","min","ref","node","maxHeight","overflow","React","Component","SwitchContainer","clickable","marginBottom","themes","variants","htmlToImage","require","NotesSection","FrontHelpers_TextFieldContainer","environment","notes","refresh","updateEnvironment","EnvironmentSection","modelname","FrontHelpers_SelectContainer","library","libraryFetchers","updateAvailableLayers","FrontHelpers_SwitchContainer","batch_first","include_training","include_saveload","include_predict","CustomizeViewSection","visual","theme","paddingRight","paddingBottom","updateVisual","tmp","autoparams","showShape","prepOutputShapes","diagramRef","toPng","then","dataUrl","Image","src","link","download","click","MiscTab","MiscTab_EnvironmentSection","MiscTab_CustomizeViewSection","MiscTab_NotesSection","github","hljs","background","CodeTab","codetheme","darkTheme","atelierForestDark","default_highlight","language","showLineNumbers","code","fieldChanger","updateFlowpoints","flowpoints","settings","content","parameters","fieldChanger_base","TransformsSection","point","bools","ints","tuples","contiguous","reshape_ndims","new_dims","Array","from","parseInt","reshape_dims","new_value","ParametersSection","fields","int","float","select","tuple","bool","string","unknown","base_ref","p_key","parameter","istuple","n_dims","round","Infinity","dims","dimensions","ButtonContainer","title","tooltip","placement","aria-label","children","SettingsSection","FrontHelpers_Autosuggest","availableLayers","getEmptyFlowpointContent","FlowpointTab_ButtonContainer","deleteSelected","Delete_default","is_output","concat_inputs","concat_dim","FlowpointTab","display","verticalAlign","textAlign","show_param_section","FlowpointTab_SettingsSection","FlowpointTab_ParametersSection","FlowpointTab_TransformsSection","SidebarContents","tab","MiscTab_MiscTab","updateSettings","notification","CodeTab_CodeTab","FlowpointTab_FlowpointTab","TabContainer","undefined","tabs","indexOf","classes","ceil","className","root","Tabs_default","onSelectTab","textColor","tabsRoot","indicator","tabsIndicator","scrollButtons","Tab_default","disableRipple","tabRoot","tabSelected","withStyles","flexGrow","borderBottom","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","unit","fontFamily","join","&:hover","opacity","&$tabSelected","&:focus","darkMuiTheme","createMuiTheme","palette","useNextVariants","lightMuiTheme","Sidebar","styles","Drawer_default","anchor","drawerOpen","maxWidth","drawerWidth","SidebarHead_SidebarHead","sidebar_TabContainer","SidebarContents_SidebarContents","disableTriggerFocus","disableFocusListener","zIndex","boxShadow","MainButtons","bottom","left","transition","MainButtons_ButtonContainer","addFlowpoint","Add_default","copyCode","FileCopy_default","createLink","Link_default","showHideHelp","Help_default","showHide","Menu_default","getPointName","p","replace","dent","indent","n","FormatInitParams","indentation","max_l","param","i","substring","FormatParamInputs","input_keys","isDownStream","dummies","target_key","test_key","r_key","downStreamTested","recIsDownStream","found_downstream","outputs","out_key","recGetOrder","order","dummy","ordered","ready","inputs","isReady","sort","getStateNames","states","last_user","max_index","getLastUser","FlowOrder","inps","getInputs","is_recurrent","getDummyLibrary","init_states","outs","getStateName","Fit","got_hidden_states","formated_inputs","formated_outputs","formated_inputs_with_device","formated_outputs_with_device","ProgressPrinter","code_parsers","pytorch","extras","gothidden","modelID","state_msg","prefix","torchvision","reference","Constructor","step_lib","step_msg","inp_key","dim","sn1","sn2","reshape_msg","step","slice","Forward","hidden","ResetHidden","Predict","SaveLoad","tensorflow","current_point_name","current_point_key","rawparams","raw_p_key","concatname","addname","getBaseLibrary","AbstractRNNCell","Activation","ActivityRegularization","AdaptiveAvgPool1d","AdaptiveAvgPool2d","AdaptiveAvgPool3d","AdaptiveLogSoftmaxWithLoss","AdaptiveMaxPool1d","AdaptiveMaxPool2d","AdaptiveMaxPool3d","Add","AlphaDropout","Average","AveragePooling1D","AveragePooling2D","AveragePooling3D","AvgPool1d","AvgPool2d","AvgPool3d","BatchNorm1d","BatchNorm2d","BatchNorm3d","BatchNormalization","Bidirectional","Bilinear","CELU","Concatenate","ConstantPad1d","ConstantPad2d","ConstantPad3d","Conv1d","Conv2d","Conv3d","ConvLSTM2D","ConvTranspose1d","ConvTranspose2d","ConvTranspose3d","Cropping1D","Cropping2D","Cropping3D","Dense","DenseFeatures","DepthwiseConv2D","Dot","Dropout","Dropout2d","Dropout3d","ELU","Embedding","EmbeddingBag","Flatten","Fold","FractionalMaxPool2d","GRU","GRUCell","GaussianDropout","GaussianNoise","GlobalAveragePooling1D","GlobalAveragePooling2D","GlobalAveragePooling3D","GlobalMaxPool1D","GlobalMaxPool2D","GlobalMaxPool3D","GroupNorm","Hardshrink","Hardtanh","Identity","InputLayer","InputSpec","InstanceNorm1d","InstanceNorm2d","InstanceNorm3d","LPPool1d","LPPool2d","LSTM","LSTMCell","Lambda","Layer","LayerNorm","LeakyReLU","Linear","LinearModel","LocalResponseNorm","LocallyConnected1D","LocallyConnected2D","LogSigmoid","LogSoftmax","Masking","MaxPool1d","MaxPool2d","MaxPool3d","MaxUnpool1d","MaxUnpool2d","MaxUnpool3d","Maximum","Mean","Minimum","MultiheadAttention","Multiply","PReLU","Permute","RNN","RNNCell","RReLU","ReLU","ReLU6","ReflectionPad1d","ReflectionPad2d","RepeatVector","ReplicationPad1d","ReplicationPad2d","ReplicationPad3d","Reshape","SELU","SeparableConv1D","SeparableConv2D","Sigmoid","SimpleRNN","SimpleRNNCell","Softmax","Softmax2d","Softmin","Softplus","Softshrink","Softsign","SpatialDropout1D","SpatialDropout2D","SpatialDropout3D","StackedRNNCells","Subtract","SyncBatchNorm","Tanh","Tanhshrink","Threshold","ThresholdedReLU","TimeDistributed","Unfold","UpSampling1D","UpSampling2D","UpSampling3D","Wrapper","ZeroPad2d","ZeroPadding1D","ZeroPadding2D","ZeroPadding3D","ResNet18","ResNet34","ResNet50","ResNet101","ResNet152","VGG11","VGG13","VGG16","VGG19","AlexNet","SqueezeNet1_0","SqueezeNet1_1","DenseNet121","DenseNet169","DenseNet161","DenseNet201","InceptionV3","GoogLeNet","ShuffleNetV2_x0_5","ShuffleNetV2_x1_0","ShuffleNetV2_x1_5","ShuffleNet","MobileNetV2","ResNext50","ResNext101","Segmentation FCN ResNet50","Segmentation FCN ResNet101","Segmentation DeepLabV3 ResNet50","Segmentation DeepLabV3 ResNet101","Detection Faster R-CNN ResNet50","Detection Mask R-CNN ResNet50","Keypoint R-CNN ResNet50","getPyTorchLibrary","output_size","in_features","n_classes","cutoffs","div_value","head_bias","return_indices","inplace","kernel_size","stride","ceil_mode","count_include_pad","num_features","eps","momentum","affine","track_running_stats","in1_features","in2_features","out_features","bias","alpha","in_channels","out_channels","padding_mode","dilation","groups","output_padding","num_embeddings","embedding_dim","padding_idx","max_norm","norm_type","scale_grad_by_freq","sparse","mode","output_ratio","input_size","hidden_size","num_layers","dropout","bidirectional","num_groups","num_channels","lambd","min_val","max_val","normalized_shape","elementwise_affine","negative_slope","size","beta","k","Max","keepdim","embed_dim","num_heads","num_parameters","init","nonlinearity","lower","upper","threshold","resnet18","pretrained","progress","num_classes","resnet34","resnet50","resnet101","resnet152","vgg11","vgg13","vgg16","vgg19","alexnet","squeezenet1_0","squeezenet1_1","densenet121","densenet169","densenet161","densenet201","inception_v3","googlenet","shufflenet_v2_x0_5","shufflenet_v2_x1_0","shufflenet_v2_x1_5","shufflenet_v2_x2_0","mobilenet_v2","resnext50_32x4d","resnext101_32x8d","segmentation.fcn_resnet50","segmentation.fcn_resnet101","segmentation.deeplabv3_resnet50","segmentation.deeplabv3_resnet101","detection.fasterrcnn_resnet50_fpn","pretrained_backbone","detection.maskrcnn_resnet50_fpn","detection.keypointrcnn_resnet50_fpn","getTensorFlowLibrary","trainable","dtype","dynamic","activation","l1","l2","rate","noise_shape","seed","pool_size","strides","data_format","axis","epsilon","center","scale","beta_initializer","gamma_initializer","moving_mean_initializer","moving_variance_initializer","beta_regularizer","gamma_regularizer","beta_constraint","gamma_constraint","renorm","renorm_clipping","renorm_momentum","fused","virtual_batch_size","adjustment","layer","merge_mode","weights","Conv1D","filters","dilation_rate","use_bias","kernel_initializer","bias_initializer","kernel_regularizer","bias_regularizer","activity_regularizer","kernel_constraint","bias_constraint","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","recurrent_activation","recurrent_initializer","unit_forget_bias","recurrent_regularizer","recurrent_constraint","return_sequences","go_backwards","stateful","recurrent_dropout","cropping","units","feature_columns","depth_multiplier","depthwise_initializer","depthwise_regularizer","depthwise_constraint","axes","normalize","input_dim","output_dim","embeddings_initializer","embeddings_regularizer","embeddings_constraint","mask_zero","input_length","implementation","return_state","unroll","time_major","reset_after","stddev","shape","ndim","max_ndim","min_ndim","function","output_shape","mask","arguments",")","sparse_combiner","mask_value","MaxPool1D","MaxPool2D","MaxPool3D","alpha_initializer","alpha_regularizer","alpha_constraint","shared_axes","cell","max_value","target_shape","pointwise_initializer","pointwise_regularizer","pointwise_constraint","cells","theta","interpolation","getPyTorchAutoparams","outshape","inp","floor","current","row","L_in","L_out","H_in","W_in","H_out","W_out","D_in","D_out","features","out_shape","index","SimplifyParameters","new_parameters","DeSimplifyParameters","recipe","JSON","parse","stringify","recipe_copy","new_param_lib","SimplifyOutputs","new_outputs","DeSimplifyOutputs","new_outputs_lib","SimplifyFlowpoint","flowpoint","pos","new_flowpoint","isout","out","x","y","cont","contig","re_ndims","re_dims","new_content","library_key","SimplifyContent","DeSimplifyFlowpoint","new_flowpoint_lib","new_content_lib","DeSimplifyContent","SimplifyFlowpoints","new_flowpoints","DeSimplifyFlowpoints","new_flowpoints_lib","lib_key","param_key","isArray","param_key_2","p2","console","log","FixTuples","DeSimplifyEnvironment","env","main_env","new_env_lib","DeSimplifyVisual","vis","main_vis","new_vis_lib","showName","snap","DeSimplifySettings","main_set","new_set_lib","count","lastPos","DeSimplify","main_lib","err","TryParseJSON","Library2String","Simplify","axios","rjust","rep","getId","l","lib","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2bigBase","num","getYear","toString","CryptoJS","ReplaceAll","str","search","replacement","newstr","split","getSpecialsLib","reversed","§","\"","#","%","&","=","`","^","+","´","¨","revlib","Decrypt","data","specials","decrypted","AES","decrypt","enc","Utf8","WhatIsThis","Button_default","Collapse_default","in","paragraph","LoadDialog","_React$Component2","_this3","pswd","fieldRef","_this4","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","PasswordDialog_WhatIsThis","focus","autoComplete","onSubmit","preventDefault","TextField_default","error","InputLabelProps","shrink","inputRef","input","DialogActions_default","continueMsg","SaveDialog","_React$Component3","_this5","_this6","HelpDialog","goTo","fullWidth","activeStep","orientation","completed","App","baseLib","encrypted_model","show_load_dialog","load_dialog_error","show_save_dialog","show_help_dialog","baseUrl","window","location","show","queue","showNotification","updateCode","loadDecryptedModel","deleteFlowpoint","handleClick","cb","query","get","res","concat_data","raw","number","getTime","shift","flow_order","DefaultMessage","Parser","Input","layer_key","visited","dimkey","tmp_autoparams","bestInp","all_inps","model_id","new_state","objectSpread","0","1","2","3","base_point","newPoint","copy","shiftKey","pointA","Sidebar_Sidebar","dist","getDiagramRef","avoidCollisions","startPosition","onDrag","paddingLeft","shapeBox","MainButtons_MainButtons","autoHideDuration","onExited","anchorOrigin","vertical","horizontal","message","HelpDialog_HelpDialog","PasswordDialog_LoadDialog","PasswordDialog_SaveDialog","save_dialog_error","match","url","PostToDataBase","toEncrypt","test_string","encrypted","encrypt","Encrypt","newUrl","history","pushState","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.909faa12.chunk.js","sourcesContent":["import React from 'react';\n\n// Material\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// Icons\nimport { FaGithub, FaLinkedin, FaNpm } from \"react-icons/fa\";\nimport { Link } from '@material-ui/core';\n\n\nexport const SidebarHead = props => {\n  return (\n    <div>\n\n      <Typography href='https://mariusbrataas.github.io/flowpoints_ml' gutterBottom variant=\"h5\" component=\"h2\" style={{padding:'15px'}}>\n        <Link href='https://mariusbrataas.github.io/flowpoints_ml' color='inherit' underline='none'>\n          Flowpoints\n        </Link>\n      </Typography>\n\n      <div style={{position:'absolute', right:5, top:5}}>\n        <IconButton target='_blank' href='https://www.npmjs.com/package/flowpoints'>\n          <FaNpm/>\n        </IconButton>\n        <IconButton target='_blank' href='https://www.linkedin.com/in/mariusbrataas/'>\n          <FaLinkedin/>\n        </IconButton>\n        <IconButton target='_blank' href='https://github.com/mariusbrataas/flowpoints_ml#readme'>\n          <FaGithub/>\n        </IconButton>\n      </div>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './FrontHelpers.css'\n\n// Material\nimport FormControl from '@material-ui/core/FormControl';\nimport { Paper, InputLabel, Select, MenuItem, FormControlLabel, Switch, TextField, Tooltip, Chip } from '@material-ui/core';\n\n\nexport const TextFieldContainer = props => {\n  return (\n    <TextField\n      label={props.label}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n      rows={props.rows}\n      variant={props.variant}\n      margin={props.margin ? props.margin : 'tight'}\n      style={props.style}\n      multiline={props.multiline}\n      onChange={e => {\n        if (props.onChange) props.onChange(e.target.value)\n      }}/>\n  )\n}\n\n\nexport const SelectContainer = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            props.options.map(opt => {\n              return (\n                <MenuItem value={opt}>{opt}</MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport const SelectContainerTooltips = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            Object.keys(props.options).map(opt => {\n              var chips = []\n              props.options[opt].map(val => {\n                chips.push(\n                  <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n                )\n              })\n              return (\n                <MenuItem value={opt}>\n                <div class='container'>\n                  <div class='option'>{opt}</div>\n                  <div class='chips'>{chips}</div>\n                </div>\n                </MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport class Autosuggest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      msg: this.props.value,\n      initmsg: this.props.value,\n      options: this.props.options,\n      open: false,\n      arrow_idx: 0\n    }\n    this.wrapperRef = null;\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside(e) {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) this.setState({open:false, msg:this.props.value})\n  }\n  render() {\n    if (this.state.initmsg !== this.props.value) {\n      this.setState({\n        msg: this.props.value,\n        initmsg: this.props.value,\n        open: false,\n        arrow_idx: 0\n      })\n    }\n    var options = [];\n    var opt_keys = [];\n    var idx = 0;\n    Object.keys(this.state.options).map(opt => {\n      var chips = [];\n      this.state.options[opt].map(val => {\n        chips.push(\n          <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n        )\n      })\n      if (opt.toLowerCase().includes(this.state.msg.toLowerCase())) {\n        options.push(\n          <MenuItem\n            value={opt}\n            selected={this.state.arrow_idx === idx}\n            onClick={e => {\n              this.setState({arrow_idx:idx, msg:opt, open:false})\n              if (this.props.onChange) this.props.onChange(opt)\n            }}>\n            <div class='container'>\n              <div class='option'>{opt}</div>\n              <div class='chips'>{chips}</div>\n            </div>\n          </MenuItem>\n        )\n        opt_keys.push(opt)\n        idx += 1\n      }\n    })\n    if (options.length === 0) options.push( <MenuItem disabled value='Nothing'>No available layers</MenuItem> )\n    return (\n      <div style={{width:'100%'}}>\n        <TextField\n          style={{width:'100%', paddingTop:0, marginTop:0}}\n          onClick={() => {this.setState({open:!this.state.open})}}\n          label=\"Layer type\"\n          value={this.state.msg}\n          onChange={e => {this.setState({msg:e.target.value, arrow_idx:0, open:true})}}\n          margin=\"normal\"\n          onKeyDown={e => {\n            if (e.keyCode === 40) {\n              this.setState({arrow_idx: Math.max(Math.min(options.length - 1, this.state.arrow_idx + 1), 0)})\n            } else if (e.keyCode === 38) {\n              this.setState({arrow_idx: Math.min(Math.max(0, this.state.arrow_idx - 1), options.length)})\n            } else if (e.keyCode === 13) {\n              if (opt_keys.length > this.state.arrow_idx) {\n                this.setState({msg:opt_keys[this.state.arrow_idx], open:false})\n                if (this.props.onChange) this.props.onChange(opt_keys[this.state.arrow_idx])\n              }\n            }\n          }}\n        />\n        {\n          this.state.open ? <div ref={node => {this.wrapperRef = node}}>\n            <Paper style={{maxHeight:'40vh', overflow:'scroll'}}>\n              {\n                options\n              }\n            </Paper></div> : null\n        }\n      </div>\n    )\n  }\n}\n\n\n/*export const SwitchContainer = props => {\n  return (\n    <FormControlLabel\n      style={props.style}\n      control={\n        <Switch\n          checked={props.value}\n          color='primary'\n          onChange={e => {\n            if (props.onChange) props.onChange(!props.value)\n          }}/>\n      }\n      label={props.label}/>\n  )\n}*/\n\n\nexport const SwitchContainer = props => {\n  return (\n    <Chip\n      label={props.label}\n      clickable\n      style={{\n        marginLeft:5,\n        marginTop:2,\n        marginBottom:2,\n        backgroundColor:(props.value ? '#64b5f6' : '#e0e0e0'),\n        color:(props.value ? 'white' : '#424242')\n      }}\n      onClick={e => {\n        if (props.onChange) props.onChange(!props.value)\n      }}/>\n  )\n}\n\nexport const themes = [\n  'red',\n  'pink',\n  'purple',\n  'deep-purple',\n  'indigo',\n  'blue',\n  'light-blue',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'blue-grey',\n  'black',\n  'white'\n]\n\nexport const variants = [\n  'paper',\n  'outlined',\n  'filled'\n]","import React, { Component } from 'react';\n\n// Local tools\nimport { SelectContainer, themes, variants, SwitchContainer, TextFieldContainer } from './FrontHelpers.js';\nimport { Button } from '@material-ui/core';\n\n// Other imports\n\nconst htmlToImage = require('html-to-image');\n\n\n\nconst NotesSection = props => {\n  return (\n    <div style={{paddingTop:30}}>\n\n      <TextFieldContainer\n        label='Model notes'\n        multiline={true}\n        value={props.state.environment.notes}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.notes = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n    </div>\n  )\n}\n\n\nconst EnvironmentSection = props => {\n  var environment = props.state.environment;\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Model name</h3>\n\n      <TextFieldContainer\n        label='Model name'\n        multiline={true}\n        value={props.state.environment.modelname}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.modelname = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n      <h3 style={{marginTop:30}}>Environment</h3>\n\n      <SelectContainer\n        label='Library'\n        value={environment.library}\n        options={Object.keys(environment.libraryFetchers)}\n        onChange={val => {\n          \n          // Loading from state\n          var environment = props.refresh().environment;\n          environment.library = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n          // Updating available layers\n          props.updateAvailableLayers()\n\n        }}/>\n\n      {\n        environment.library === 'pytorch' ? <div style={{paddingTop:20}}>\n            <SwitchContainer\n              label='batch first'\n              value={environment.batch_first}\n              style={{paddingTop:0}}\n              onChange={val => {\n\n                // Loading from state\n                var environment = props.refresh().environment;\n                environment.batch_first = val;\n\n                // Updating state\n                props.updateEnvironment(environment)\n\n            }}/>\n            <SwitchContainer\n              label='include training function'\n              value={environment.include_training}\n              style={{paddingTop:0}}\n              onChange={val => {\n\n                // Loading from state\n                var environment = props.refresh().environment;\n                environment.include_training = val;\n\n                // Updating state\n                props.updateEnvironment(environment)\n\n              }}\n            />\n            <SwitchContainer\n              label='include save and load'\n              value={environment.include_saveload}\n              style={{paddingTop:0}}\n              onChange={val => {\n\n                // Loading from state\n                var environment = props.refresh().environment;\n                environment.include_saveload = val;\n\n                // Updating state\n                props.updateEnvironment(environment)\n\n              }}\n            />\n            <SwitchContainer\n              label='include predict'\n              value={environment.include_predict}\n              style={{paddingTop:0}}\n              onChange={val => {\n\n                // Loading from state\n                var environment = props.refresh().environment;\n                environment.include_predict = val;\n\n                // Updating state\n                props.updateEnvironment(environment)\n\n              }}\n            />\n          </div> : null\n      }\n\n    </div>\n  )\n}\n\n\nconst CustomizeViewSection = props => {\n  var visual = props.state.visual;\n  var environment = props.state.environment;\n  return (\n    <div style={{paddingTop:20, width:'100%'}}>\n      \n      <h3>Customize view</h3>\n\n      <div>\n\n        <SelectContainer\n          label='Theme'\n          value={visual.theme}\n          options={themes}\n          style={{width:'48%', paddingRight:10, paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.theme = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n        \n        <SelectContainer\n          label='Variant'\n          value={visual.variant}\n          options={variants}\n          style={{width:'48%', paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.variant = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n\n      </div>\n\n\n      <div style={{paddingTop:20}}>\n        {\n          [\n            {ref:'darkTheme', label:'Dark theme'},\n            {ref:'showName', label:'Show names'}\n          ].map(tmp => {\n            return (\n              <SwitchContainer\n                label={tmp.label}\n                value={visual[tmp.ref]}\n                style={{paddingTop:0}}\n                onChange={val => {\n\n                  // Loading from state\n                  var visual = props.refresh().visual;\n                  visual[tmp.ref] = val;\n\n                  // Updating state\n                  props.updateVisual(visual)\n\n                }}/>\n            )\n          })\n        }\n        {\n          environment.library in environment.autoparams ? <SwitchContainer\n            label='Show shapes'\n            value={visual.showShape}\n            style={{paddingTop:0}}\n            onChange={val => {\n              var visual = props.refresh().visual;\n              visual.showShape = val;\n              props.updateVisual(visual);\n              if (val) props.prepOutputShapes();\n            }}/> : null\n        }\n      </div>\n\n      {\n        props.diagramRef ? <div style={{paddingTop:20}}>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                htmlToImage.toPng(props.diagramRef).then(function (dataUrl) {\n                  var img = new Image();\n                  img.src = dataUrl;\n                  var link = document.createElement('a');\n                  link.download = 'diagram.png';\n                  link.href = dataUrl;\n                  link.click();\n                })\n              }}>\n              Export png\n            </Button></div> : null\n      }\n\n    </div>\n  )\n}\n\n\n\nexport const MiscTab = props => {\n  return (\n    <div style={{padding:15}}>\n\n      <EnvironmentSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}\n        updateAvailableLayers={props.updateAvailableLayers}/>\n      \n      <CustomizeViewSection\n        state={props.state}\n        refresh={props.refresh}\n        updateVisual={props.updateVisual}\n        diagramRef={props.diagramRef}\n        prepOutputShapes={props.prepOutputShapes}/>\n      \n      <NotesSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}/>\n      \n    </div>\n  )\n}","import React, { Component } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierForestDark } from 'react-syntax-highlighter/dist/styles/hljs';\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github';\n\ngithub.hljs.background = '#ffffff';\n\nexport const CodeTab = props => {\n  const codetheme = props.state.visual.darkTheme ? atelierForestDark : github\n  return (\n    <div style={{fontSize:12}}>\n\n      <SyntaxHighlighter language='python' style={codetheme} showLineNumbers>\n      {\n        props.state.environment.code\n      }\n      </SyntaxHighlighter>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { Autosuggest, SelectContainer, TextFieldContainer, SwitchContainer, SelectContainerTooltips } from './FrontHelpers';\nimport { IconButton, TextField, MenuItem, Paper, FormControl, Chip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Tooltip } from '@material-ui/core';\n\n\n\nfunction fieldChanger(refresh, updateFlowpoints, key, value) {\n  var state = refresh();\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[environment.library.toLowerCase()].parameters[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_input(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_base(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected][key] = value;\n  updateFlowpoints(flowpoints)\n}\n\n\nconst TransformsSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected]\n\n  // Container for bools\n  var bools = [];\n  var ints = [];\n  var tuples = [];\n\n  // Adding bools\n  bools.push(\n    <SwitchContainer\n      label='contiguous'\n      value={point.contiguous}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'contiguous',\n          val\n        )\n      }}/>\n  )\n\n  // Adding ints\n  ints.push(\n    <TextFieldContainer\n      label='Reshape dimensions'\n      value={point.reshape_ndims}\n      type='number'\n      variant='outlined'\n      margin='dense'\n      style={{\n        width: 150,\n        paddingRight: 5\n      }}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'reshape_ndims',\n          val\n        )\n        if (val) {\n          var new_dims = [];\n          Array.from(Array(parseInt(val)).keys()).map(idx => {\n            new_dims.push(point.reshape_dims[idx] ? point.reshape_dims[idx] : 0)\n          })\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_dims\n          )\n        }\n      }}/>\n  )\n\n  // Tuples\n  Array.from(Array(parseInt(point.reshape_ndims ? point.reshape_ndims : 0)).keys()).map(idx => {\n    tuples.push(\n      <TextFieldContainer\n        label={'reshape dim ' + idx}\n        value={point.reshape_dims[idx]}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n          var new_value = point.reshape_dims;\n          new_value[idx] = val\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_value\n          )\n        }}/>\n    )\n  })\n\n  // Returning\n  return (\n    <div>\n  \n      <h3 style={{marginTop:30}}>Tensor transforms</h3>\n\n      <div style={{paddingTop:0, marginTop:0, marginLeft:-5, paddingBottom:10}}>{ bools }</div>\n      <div>{ ints }</div>\n      <div>{ tuples }</div>\n\n    </div>\n  )\n\n}\n\n\nconst ParametersSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected];\n\n  // Creating all fields\n  var fields = {\n    int: [],\n    float: [],\n    select: [],\n    tuple: [],\n    bool: [],\n    string: [],\n    unknown: []\n  }\n\n  if (point.base_ref !== 'Input') {\n\n    var parameters = point.content[props.state.environment.library.toLowerCase()].parameters;\n\n    // Adding fields\n    Object.keys(parameters).map(p_key => {\n\n      if (p_key !== 'extras') {\n\n        const parameter = parameters[p_key]\n        if (parameter.istuple) {\n          fields.tuple.push(\n            <div style={{paddingTop:15}}><h5 style={{margin:0}}>{p_key}</h5></div>\n          )\n          parameter.value.map((value, idx) => {\n            fields.tuple.push(\n              <TextFieldContainer\n                label={p_key + ' ' + idx}\n                value={value}\n                type='number'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  var new_value = parameter.value;\n                  new_value[idx] = val;\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    new_value\n                  )\n                }}/>\n            )\n          })\n        } else {\n\n          switch(parameter.type) {\n            case 'int':\n              fields.int.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'float':\n              fields.float.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'string':\n            fields.string.push(\n              <TextFieldContainer\n                label={p_key}\n                value={parameter.value}\n                type='text'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    val\n                  )\n                }}/>\n            )\n            break;\n            \n            case 'bool':\n              if (p_key === 'batch_first') {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={props.state.environment.batch_first}\n                    onChange={val => {}}/>\n                )\n              } else {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={parameter.value}\n                    onChange={val => {\n                      fieldChanger(\n                        props.refresh,\n                        props.updateFlowpoints,\n                        p_key,\n                        val\n                      )\n                    }}/>\n                )\n              }\n            break;\n          \n          case null:\n          fields.unknown.push(\n            <TextFieldContainer\n              label={p_key}\n              value={parameter.value}\n              type='text'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n            \n          case 'select':\n          fields.select.push(\n            <SelectContainer\n              label={p_key}\n              value={parameter.value}\n              options={parameter.options}\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n\n          }\n\n        }\n\n      }\n\n    })\n  } else {\n    var parameters = point.content;\n\n    // Adding n_dims field\n    fields.int.push(\n      <TextFieldContainer\n        label='n_dimensions'\n        value={parameters.n_dims}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n\n          val = val === '' ? '' : Math.max(Math.min(Math.round(val), Infinity), 1)\n\n          // Making sure dims got the correct number of parameters\n          var dims = {};\n          Array.from(Array(val).keys()).map(idx => {\n            if (idx in parameters.dimensions) {\n              dims[idx] = parameters.dimensions[idx];\n            } else {\n              dims[idx] = 1;\n            }\n          })\n\n          // Changing parameters\n          var state = props.refresh()\n          var flowpoints = state.flowpoints;\n          const selected = state.settings.selected;\n          flowpoints[selected].content.n_dims = val;\n          flowpoints[selected].content.dimensions = dims;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n    )\n\n\n    // Adding dimensions field\n    fields.tuple.push(\n      <div style={{paddingTop:15}}><h5 style={{margin:0}}>Dimensions</h5></div>\n    )\n    Object.keys(parameters.dimensions).map((p_key, idx) => {\n      fields.tuple.push(\n        <TextFieldContainer\n          label={'dimension ' + p_key}\n          value={parameters.dimensions[p_key]}\n          type='number'\n          variant='outlined'\n          margin='dense'\n          style={{\n            width: 150,\n            paddingRight: 5\n          }}\n          onChange={val => {\n            var state = props.refresh();\n            var flowpoints = state.flowpoints;\n            state.flowpoints[state.settings.selected].content.dimensions[p_key] = val;\n            props.updateFlowpoints(flowpoints)\n          }}/>\n      )\n    })\n  }\n\n\n  if ((fields.int.length + fields.float.length + fields.select.length + fields.tuple.length + fields.bool.length ) > 0) {\n    return (\n      <div>\n  \n        <h3 style={{marginTop:30}}>Parameters</h3>\n  \n        <div>{ fields.int }</div>\n        <div>{ fields.float }</div>\n        <div>{ fields.select }</div>\n        <div>{ fields.tuple }</div>\n        <div>{ fields.string }</div>\n        <div style={{paddingTop:10, marginLeft:-5}}>{ fields.bool }</div>\n        {\n          fields.unknown.length > 0 ? <div>\n            <h5 style={{paddingTop:5, paddingBottom:0}}>Unknown datatypes. Put your own code here.</h5>\n            { fields.unknown }\n          </div> : null\n        }\n  \n      </div>\n    )\n  }\n\n  return null\n\n}\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\">\n      <IconButton\n        aria-label={props.tooltip}\n        style={props.style}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </IconButton>\n    </Tooltip>\n  )\n}\n\n/*\n<SelectContainerTooltips\n        label='Layer type'\n        value={point.base_ref}\n        options={environment.availableLayers}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var state = props.refresh();\n          var settings = state.settings;\n          var flowpoints = state.flowpoints;\n\n          // Changing flowpoint layer type\n          var point = flowpoints[settings.selected];\n          point.content = props.getEmptyFlowpointContent(val)\n          point.base_ref = val;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n*/\n\n\nconst SettingsSection = props => {\n  var settings = props.state.settings;\n  var flowpoints = props.state.flowpoints;\n  var environment = props.state.environment;\n  const point = flowpoints[settings.selected];\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Flowpoint settings</h3>\n\n        <Autosuggest\n          value={point.base_ref}\n          options={environment.availableLayers}\n          onChange={val => {\n\n            // Loading from state\n            var state = props.refresh();\n            var settings = state.settings;\n            var flowpoints = state.flowpoints;\n  \n            // Changing flowpoint layer type\n            var point = flowpoints[settings.selected];\n            point.content = props.getEmptyFlowpointContent(val)\n            point.base_ref = val;\n  \n            // Updating state\n            props.updateFlowpoints(flowpoints)\n  \n          }}/>\n\n\n        <div style={{paddingTop:15}}>\n\n          <TextFieldContainer\n            label='Layer name'\n            value={point.name}\n            style={{width:'80%'}}\n            onChange={val => {\n\n              // Loading from state\n              var state = props.refresh();\n              var flowpoints = state.flowpoints;\n              var settings = state.settings;\n\n              // Changing layer name\n              flowpoints[settings.selected].name = val;\n\n              // Updating state\n              props.updateFlowpoints(flowpoints)\n\n            }}/>\n\n            <ButtonContainer\n              tooltip='Delete flowpoint'\n              style={{\n                marginLeft: 15,\n                marginTop: 5\n              }}\n              onClick={props.deleteSelected}>\n              <DeleteIcon/>\n            </ButtonContainer>\n\n        </div>\n\n\n        {\n          point.base_ref !== 'Input' ? <div style={{paddingTop:10, marginLeft:-10}}>\n              <SwitchContainer\n                label='Use as output'\n                value={point.is_output}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].is_output = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n                }}/>\n              <SwitchContainer\n                label='Concatenate inputs'\n                value={point.concat_inputs}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].concat_inputs = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n              }}/>\n            </div> : null\n        }\n\n        {\n          point.concat_inputs ? <div style={{paddingTop:15}}>\n            <TextFieldContainer\n              label='Concat dim'\n              value={point.concat_dim}\n              type='number'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                var flowpoints = props.refresh().flowpoints;\n                flowpoints[settings.selected].concat_dim = val;\n                props.updateFlowpoints(flowpoints)\n              }}/>\n          </div> : null\n        }\n\n    </div>\n  )\n}\n\n\n\nexport const FlowpointTab = props => {\n  var settings = props.state.settings;\n\n  // Nothing selected? Returning msg to select something\n  if (settings.selected === null) {\n    return (\n      <div style={{display:'table', width:'100%', height:'50px'}}>\n        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n          Select a flowpoint to display it's settings.\n        </div>\n      </div>\n    )\n  }\n\n  // Layer type doesnt exist in current library?\n  var show_param_section = true;\n  if (!(props.state.environment.library in props.state.flowpoints[props.state.settings.selected].content) && props.state.flowpoints[props.state.settings.selected].base_ref !== 'Input') {\n    show_param_section = false;\n  }\n\n  // Paramaters and settings of selected\n  var flowpoints = props.state.flowpoints;\n  const point = flowpoints[settings.selected];\n  return (\n    <div style={{padding:15}}>\n      \n      <SettingsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}\n        getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n        deleteSelected={props.deleteSelected}/>\n      \n      {\n        show_param_section ? <ParametersSection\n          state={props.state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}/> : <div style={{display:'table', width:'100%', height:'50px', paddingTop:20}}>\n            <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n              Layer type is not available in your current library.\n            </div>\n          </div>\n      }\n\n      <TransformsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}/>\n\n    </div>\n  )\n\n}","import React, { Component } from 'react';\n\n// Importing local tools\nimport { MiscTab } from './MiscTab.js';\nimport { CodeTab } from './CodeTab.js';\nimport { FlowpointTab } from './FlowpointTab.js';\n\n\n// Styles\nimport './SidebarContents.css';\n\nexport const SidebarContents = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <div\n      class='sidebarContents'\n      style={{\n        backgroundColor: (visual.darkTheme ? '#1b1918' : null)\n      }}>\n\n      {\n        settings.tab === 'Misc' ? <MiscTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          updateAvailableLayers={props.updateAvailableLayers}\n          diagramRef={props.diagramRef}\n          prepOutputShapes={props.prepOutputShapes}/> : null\n      }\n      {\n        settings.tab === 'Code' ? <CodeTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}/> : null\n      }\n      {\n        settings.tab === 'Flowpoint' ? <FlowpointTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n          deleteSelected={props.deleteSelected}/> : null\n      }\n\n    </div>\n  )\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\n// Styling\nconst styles = theme => ({\n  root: {\n    flexGrow: 0,\n    overflow:'scroll',\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #1890ff',\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: 50,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing.unit * 0,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$tabSelected': {\n      color: '#1890ff',\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 0,\n  },\n});\n\n\n// Main class\nclass TabContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: props.tab !== undefined ? props.tabs.indexOf(props.tab) : 0\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    const width = Math.ceil(this.props.width/this.props.tabs.length) + 'px'\n\n    return (\n      <div className={classes.root} style={{overflow:'hidden'}}>\n        <Tabs\n          value={value}\n          onChange={(e, value) => {\n            this.setState({ value });\n            if (this.props.onSelectTab) this.props.onSelectTab(this.props.tabs[value]);\n          }}\n          textColor=\"primary\"\n          classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\n          scrollButtons={false}>\n          {\n            this.props.tabs.map(value => {\n              return (\n                <Tab\n                  disableRipple\n                  classes={{ root: classes.tabRoot, selected: classes.tabSelected }}\n                  label={value}\n                  style={{width: width}}\n                />\n              )\n            })\n          }\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n// Setting proptypes\nTabContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Exporting\nexport default withStyles(styles)(TabContainer);\n","import React, { Component } from 'react';\n\n// Styles\nimport './Sidebar.css';\n\n// Material\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\n// Local tools\nimport { SidebarHead } from './SidebarHead.js';\nimport { SidebarContents } from './SidebarContents.js';\nimport TabContainer from './TabContainer.js';\n\n\n// Themes\nconst darkMuiTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: { useNextVariants: true }\n});\n\nconst lightMuiTheme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: { useNextVariants: true }\n});\n\n\n// Sidebar\nexport const Sidebar = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <MuiThemeProvider theme={visual.darkTheme ? darkMuiTheme : lightMuiTheme}>\n\n      <Drawer variant='persistent' anchor='left' open={visual.drawerOpen}>\n        <div\n          class='fullSidebar'\n          style={{\n            maxWidth: visual.drawerWidth,\n            color: (visual.darkTheme ? 'white' : 'black'),\n            width: visual.drawerWidth\n          }}>\n\n          <SidebarHead/>\n\n          <div>\n            <TabContainer\n              tabs={['Misc', 'Code', 'Flowpoint']}\n              tab={settings.tab}\n              width={360}\n              onSelectTab={tab => {\n\n                // Loading state\n                var state = props.refresh();\n                var settings = state.settings;\n                var visual = state.visual;\n\n                // Changing tab\n                settings.tab = tab;\n\n                // Wider drawer if displaying code\n                if (tab === 'Code') {\n                  visual.drawerWidth = 600;\n                } else {\n                  visual.drawerWidth = 360;\n                }\n\n                // Updating state\n                props.updateSettings(settings);\n                props.updateVisual(visual);\n\n              }}/>\n          </div>\n          \n          <SidebarContents\n            state={state}\n            refresh={props.refresh}\n            updateFlowpoints={props.updateFlowpoints}\n            updateEnvironment={props.updateEnvironment}\n            updateVisual={props.updateVisual}\n            updateSettings={props.updateSettings}\n            notification={props.notification}\n            getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n            deleteSelected={props.deleteSelected}\n            updateAvailableLayers={props.updateAvailableLayers}\n            diagramRef={props.diagramRef}\n            prepOutputShapes={props.prepOutputShapes}/>\n\n        </div>\n      </Drawer>\n\n    </MuiThemeProvider>\n  )\n}","import React, { Component } from 'react';\nimport { Fab, Tooltip } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LinkIcon from '@material-ui/icons/Link';\nimport HelpIcon from '@material-ui/icons/Help';\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\" disableTriggerFocus disableFocusListener>\n      <Fab\n        style={{\n          background: props.color,\n          color: '#ffffff',\n          zIndex: 6,\n          boxShadow: 'none'\n        }}\n        aria-label={props.tooltip}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </Fab>\n    </Tooltip>\n  )\n}\n\n\nexport const MainButtons = props => {\n  var visual = props.state.visual;\n  return (\n    <div\n      style={{\n        bottom:'5px',\n        left: visual.drawerWidth * visual.drawerOpen + 5 + 'px',\n        position: 'fixed',\n        transition: 'left 0.4s ease-out'\n      }}>\n      <div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#00b0ff'\n            tooltip='Add flowpoint'\n            onClick={props.addFlowpoint}>\n            <AddIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#2979ff'\n            tooltip='Copy code to clip-board'\n            onClick={props.copyCode}>\n            <FileCopyIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#3d5afe'\n            tooltip='Share link to current model'\n            onClick={props.createLink}>\n            <LinkIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#651fff'\n            tooltip='Help'\n            onClick={props.showHideHelp}>\n            <HelpIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div>\n          <ButtonContainer\n            color='#b0bec5'\n            tooltip='Show/hide sidebar'\n            onClick={props.showHide}>\n            <MenuIcon/>\n          </ButtonContainer>\n        </div>\n\n      </div>\n    </div>\n  )\n}","export function getPointName(flowpoints, key) {\n  let p = flowpoints[key];\n  return (p.name === '' ? ('p_' + key) : p.name).replace(/ /g, '_')\n}\n\n\nexport function dent(indent, n) {\n  var msg = ''\n  Array.from(Array(n).keys()).map(idx => msg += indent)\n  return msg\n}\n\n\nexport function FormatInitParams(parameters, indentation, indent, padding) {\n  if (padding === undefined) padding = true\n  // Getting longest parameter name\n  var max_l = 0;\n  Object.keys(parameters).map(p_key => {\n    if (parameters[p_key].value !== 'None') max_l = Math.max(p_key.length, max_l)\n  })\n  var msg = ''\n  if (padding) msg += '('\n  Object.keys(parameters).map(p_key => {\n    let param = parameters[p_key];\n\n    if (param.value !== 'None') {\n      // Adding argument\n      msg += '\\n' + dent(indent, indentation + 1) + p_key\n\n      // Aligning with other arguments\n      for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n      msg += ' = '\n\n      // Adding argument values\n      if (param.istuple) {\n        // Tuples are put in between parantheses\n        msg += '(';\n        param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n        msg = msg.substring(0, msg.length - 1) + ')';\n      } else if (param.type === 'select') {\n        msg += \"'\" + param.value + \"'\";\n      } else if (param.type === 'bool') {\n        msg += (param.value === true ? 'True' : 'False')\n      } else if (param.type === 'string') {\n        msg += '\"' + param.value + '\"'\n      } else {\n        msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n      }\n      msg += ','\n    }\n  })\n  if (padding) {\n    if (max_l > 0) {\n      msg += '\\n' + dent(indent, 1)\n    }\n    msg += ')'\n  }\n  return msg\n}\n\n\nexport function FormatParamInputs(flowpoints, input_keys) {\n  var msg = ''\n  input_keys.map(key => msg += getPointName(flowpoints, key) + ', ')\n  if (input_keys.length > 0) msg = msg.substring(0, msg.length - 2)\n  return msg\n}\n\n\nfunction getDummyLibrary(flowpoints) {\n  var dummies = {}\n  Object.keys(flowpoints).map(key => {\n    var dummy = {\n      base_ref: flowpoints[key].base_ref,\n      name: flowpoints[key].name,\n      inputs: [],\n      outputs: [],\n      ordered: false,\n      ready: false,\n      downStreamTested: false,\n      is_recurrent: false\n    }\n    Object.keys(flowpoints[key].outputs).map(out_key => {\n      dummy.outputs.push(out_key)\n    })\n    if (flowpoints[key].base_ref === 'Input') {\n      dummy.ready = true;\n    }\n    dummies[key] = dummy;\n  })\n\n  // Adding corresponding inputs\n  Object.keys(dummies).map(key => {\n    dummies[key].outputs.map(out_key => {\n      dummies[out_key].inputs.push(key)\n    })\n  })\n\n  // Returning\n  return dummies\n\n}\n\n\nfunction getInputs(flowpoints) {\n  var inps = [];\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Input') inps.push(key)\n  })\n  return inps\n}\n\n\nfunction recIsDownStream(dummies, target_key, test_key) {\n\n  // Returning if matching\n  if (target_key === test_key) return true;\n\n  // Continue only if havent been visited before\n  var found_downstream = false\n  if (!dummies[test_key].downStreamTested) {\n\n    // Marking self as visited on this run\n    dummies[test_key].downStreamTested = true;\n\n    // Looking deeper down\n    dummies[test_key].outputs.map(out_key => {\n      if (!found_downstream) {\n        found_downstream = recIsDownStream(dummies, target_key, out_key)\n      }\n    })\n  }\n\n  // Returning\n  return found_downstream\n\n}\n\n\nfunction isDownStream(dummies, target_key, test_key) {\n\n  // Resetting downstream helpers\n  Object.keys(dummies).map(r_key => dummies[r_key].downStreamTested = false)\n\n  // Running checks\n  return recIsDownStream(dummies, target_key, test_key)\n\n}\n\n\nfunction isReady(dummies, key) {\n  var ready = true;\n  dummies[key].inputs.map(test_key => {\n    if ((!dummies[test_key].ready && !isDownStream(dummies, test_key, key))) {\n      ready = false;\n    }\n  })\n  return ready\n}\n\n\nfunction recGetOrder(order, dummies, key) {\n\n  // Helper\n  var dummy = dummies[key];\n\n  // Checking dummy, going deeper\n  if (dummy) {\n\n    // Visited before? -> Return\n    if (dummy.ordered) return order\n\n    // Dummy ready?\n    if (isReady(dummies, key)) {\n\n      // Making sure dummy is ready\n      dummy.ready = true;\n\n      // Making sure dummy is added to order\n      dummy.ordered = true;\n      if (!order.includes(key)) order.push(key)\n\n      // Going deeper\n      dummy.outputs.sort().map(out_key => order = recGetOrder(order, dummies, out_key))\n\n    }\n\n  }\n\n  // Returning\n  return order\n\n}\n\n\nfunction getLastUser(order, dummies, target_key) {\n  var max_index = -1;\n  order.map((test_key, idx) => {\n    if (dummies[test_key].inputs.includes(target_key)) max_index = Math.max(max_index, idx)\n  })\n  return order[max_index]\n}\n\n\nfunction getStateNames(order, dummies) {\n  var states = {};\n\n  // Adding all states\n  order.map((key, idx) => {\n    const point = dummies[key];\n\n    // Adding to states\n    if (!(key in states)) {\n      states[key] = getPointName(dummies, key) + (point.base_ref === 'Input' ? '' : '_state');\n    }\n\n    // Setting state of last user\n    const last_user = getLastUser(order, dummies, key);\n    if (last_user !== null) {\n      states[last_user] = states[key];\n    }\n\n  })\n\n  // Setting state of last node to default\n  states[order[order.length - 1]] = 'self.state'\n\n  // Returning\n  return states\n\n}\n\n\nexport function FlowOrder(state) {\n\n  // Init helpers\n  var inps = getInputs(state.flowpoints);\n  var dummies = getDummyLibrary(state.flowpoints);\n  var order = [];\n  var init_states = [];\n  var outs = [];\n\n  // Adding input flowpoints to beginning of order\n  inps.map(key => order.push(key));\n\n  // Recursively mapping tree\n  inps.map(key => order = recGetOrder(order, dummies, key));\n\n  // Flagging flowpoints with recurrent connections and getting init states\n  order.map((key, idx) => {\n    var is_recurrent = false;\n    dummies[key].outputs.map(out_key => {\n      if (idx > order.indexOf(out_key) && !is_recurrent) is_recurrent = true;\n    })\n    if (is_recurrent || state.flowpoints[key].is_output) {\n      dummies[key].is_recurrent = true;\n      init_states.push(key)\n    }\n  })\n\n  // Outputs\n  order.map(key => {\n    if (state.flowpoints[key].is_output) outs.push(key)\n  })\n  if (outs.length === 0) outs = [order[order.length - 1]]\n\n  // State names\n  var states = getStateNames(order, dummies);\n\n  // Returning\n  return {order, inps, states, dummies, init_states, outs}\n\n}","import { getPointName, FormatParamInputs, dent } from \"./FlowOrder\";\n\n\nfunction getStateName(key, flowpoints, states, init_states) {\n  if (init_states.includes(key)) {\n    return 'self.' + getPointName(flowpoints, key) + '_state'\n  }\n  return states[key]\n}\n\n\nfunction getOutputTargetName(key, flowpoints) {\n  return getPointName(flowpoints, key) + '_target'\n}\n\n\nfunction PyTorchImports(indent) {\n  var msg = '# Importing PyTorch tools'\n  msg += '\\nimport torch, torchvision'\n  msg += '\\nfrom torch import nn, optim, cuda'\n  msg += '\\n\\n\\n# Importing other libraries'\n  msg += '\\nimport numpy as np'\n  msg += '\\nimport pandas as pd'\n  msg += '\\nimport time'\n  msg += '\\n\\n\\n# Seed'\n  msg += '\\nnp.random.seed(1234)'\n  msg += '\\ntorch.manual_seed(1234)'\n  msg += '\\ncuda.manual_seed(1234)'\n  msg += '\\ntorch.backends.cudnn.deterministic = True'\n  return msg\n}\n\n\nfunction Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, modelID) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  let modelname = environment.modelname === '' ? 'NeuralNet' : environment.modelname\n  \n  // Basics\n  var msg = '# Model'\n  msg += '\\nclass ' + modelname + '(nn.Module):'\n  msg += '\\n\\n' + dent(indent, 1) + 'def __init__(self):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Basics'\n  msg += '\\n' + dent(indent, 2) + 'super(' + modelname + ', self).__init__()'\n  msg += '\\n' + dent(indent, 2) + 'self.name        = ' + (modelID ? (\"'\" + modelID + \"'\") : \"'model'\")\n  msg += '\\n' + dent(indent, 2) + 'self.batch_first = ' + (environment.batch_first ? 'True' : 'False')\n\n  // Prep aligning recurrent states\n  var max_l = 0;\n  order.map(key => {\n    let dummy = dummies[key];\n    if (dummy.is_recurrent) {\n      max_l = Math.max(max_l, getStateName(key, flowpoints, states, init_states).length);\n    }\n  })\n\n  // Initializing recurrent states\n  if (max_l > 0) {\n    var state_msg = dent(indent, 2) + '# Initializing states with placeholder tensors';\n    order.map(key => {\n      let dummy = dummies[key];\n      if (dummy.is_recurrent) {\n\n        // Init state\n        state_msg += '\\n' + dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n\n        // Aligning equals sign\n        for (var i = 0; i < max_l - getStateName(key, flowpoints, states, init_states).length; i++) state_msg += ' '\n        state_msg += ' = torch.tensor([0], dtype=torch.float64)'\n\n      }\n    })\n    msg += '\\n\\n' + state_msg\n  }\n\n  // Initializing all layers\n  msg += '\\n\\n' + dent(indent, 2) + '# Initializing all layers'\n  order.map(key => {\n    let point = flowpoints[key];\n    \n    if (point.base_ref === 'Concatenate') {\n\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref === 'Flatten') {\n\n    } else if (point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        let content = point.content[environment.library.toLowerCase()];\n        let parameters = content.parameters\n\n        // Getting longest parameter name\n        var max_l = 0;\n        Object.keys(parameters).map(p_key => {\n          if (p_key !== 'extras') max_l = Math.max(p_key.length, max_l)\n        })\n\n        // Init object\n        let prefix = content.parameters.extras.torchvision ? 'torchvision.models.' : 'nn.'\n        msg += '\\n' + dent(indent, 2) + 'self.' + getPointName(flowpoints, key) + ' = ' + prefix + content.reference + '(';\n\n        // Adding arguments\n        Object.keys(parameters).map(p_key => {\n\n          if (p_key !== 'extras') {\n\n            let param = parameters[p_key];\n          \n            // Adding argument\n            msg += '\\n' + dent(indent, 3) + p_key\n\n            // Aligning with other arguments\n            for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n            msg += ' = '\n\n            // Adding argument values\n            if (param.istuple) {\n              // Tuples are put in between parantheses\n              msg += '(';\n              param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n              msg = msg.substring(0, msg.length - 1) + ')';\n            } else if (param.type === 'select') {\n              msg += \"'\" + param.value + \"'\";\n            } else if (param.type === 'bool') {\n              if (p_key === 'batch_first') {\n                msg += 'self.batch_first'\n              } else {\n                msg += (param.value === true ? 'True' : 'False')\n              }\n            } else {\n              msg += (param.value === '' ? 'None' : param.value)\n            }\n            msg += ','\n\n          }\n\n        })\n        if (max_l > 0) msg += '\\n' + dent(indent, 2)\n        msg += ')'\n      }\n    }\n  })\n\n  // Startup routines\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 2) + '# Running startup routines'\n    msg += '\\n' + dent(indent, 2) + 'self.reset_hidden_states()'\n  }\n\n  // Returning\n  return msg\n\n}\n\n\nfunction ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library) {\n  var msg = dent(indent, 1) + 'def reset_hidden_states(self, sample=None):'\n  msg += '\\n' + dent(indent, 2) + 'if type(sample) == torch.Tensor:'\n  msg += '\\n' + dent(indent, 3) + 'batch_size = sample.shape[0 if self.batch_first else 1]'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        const parameters = flowpoints[key].content[library].parameters;\n        if (parameters.extras.gothidden) {\n          if (parameters['hidden_size'] && parameters['num_layers']) {\n            msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = '\n            const hidden = '\\n' + dent(indent, 4) + 'torch.zeros((' + parameters['num_layers'].value + ', batch_size, ' + parameters['hidden_size'].value + '), device=sample.device)'\n            msg += '(' + hidden + ', ' + hidden + '\\n' + dent(indent, 3) + ')'\n          }\n        }\n      }\n    }\n  })\n  msg += '\\n' + dent(indent, 2) + 'else:'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = None'\n        }\n      }\n    }\n  })\n  return msg\n}\n\n\nfunction Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library) {\n  var msg = dent(indent, 1) + 'def forward(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  msg += formated_inputs + '):'\n\n  // Forwarding\n  var step_lib = [];\n  var outputs = [];\n  order.map(key => {\n    const point = dummies[key];\n    if (point.base_ref === 'Concatenate') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.cat(['\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n      step_msg = step_msg.substring(0, step_msg.length - 2) + '], dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Concatenate' })\n    } else if (point.base_ref === 'Mean') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.mean('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Mean' })\n    } else if (point.base_ref === 'Maximum') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.max('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')[0]'\n      step_lib.push({ msg:step_msg, title:'Max' })\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref === 'Flatten') {\n      let sn1 = getStateName(key, flowpoints, states, init_states)\n      let sn2 = getStateName(point.inputs[0], flowpoints, states, init_states)\n      var step_msg = dent(indent, 2) + sn1\n      step_msg += ' = ' + sn2 + '.view(' + sn2 + '.shape[0], -1)'\n      step_lib.push({ msg:step_msg, title:'Flatten' })\n    } else {\n      if (flowpoints[key].content[library]) {\n        var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', self.' + getPointName(flowpoints, key) + '_hidden'\n        step_msg += ' = self.' + getPointName(dummies, key) + '(';\n        if (point.inputs.length > 1) {\n          if (flowpoints[key].concat_inputs) {\n            //torch.cat(tensors, dim=0\n            step_msg += 'torch.cat(['\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n            step_msg = step_msg.substring(0, step_msg.length -2 ) + '], dim=' + flowpoints[key].concat_dim + ')'\n          } else {\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ');\n            step_msg = step_msg.substring(0, step_msg.length - 3);\n          }\n        } else {\n          step_msg += getStateName(point.inputs[0], flowpoints, states, init_states)\n        }\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', tuple([_.data for _ in self.' + getPointName(flowpoints, key) + '_hidden]) if self.' + getPointName(flowpoints, key) + '_hidden else None'\n        step_msg += ')'\n        step_lib.push({ msg:step_msg, title:point.base_ref });\n        if (flowpoints[key].contiguous) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states) + '.contiguous()'\n          if (flowpoints[key].reshape_ndims > 0) {\n            reshape_msg += '.view('\n            flowpoints[key].reshape_dims.map(val => {\n              reshape_msg += val + ', '\n            })\n            reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          }\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        } else if (flowpoints[key].reshape_ndims > 0) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states)\n          reshape_msg += '.view('\n          flowpoints[key].reshape_dims.map(val => {\n            reshape_msg += val + ', '\n          })\n          reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        }\n        if (flowpoints[key].is_output) outputs.push(key);\n      }\n    }\n  })\n\n  // Max length\n  var max_l = 0;\n  step_lib.map(step => max_l = Math.max(max_l, step.msg.length > 60 ? 0 : step.msg.length))\n\n  // Adding steps\n  step_lib.map(step => {\n    \n    // Adding step\n    msg += '\\n' + step.msg;\n\n    // Aligning comment with others\n    for (var i = 0; i < max_l - step.msg.length; i++) msg += ' ';\n    msg += ' # ' + step.title;\n  })\n\n  // Adding return\n  if (outputs.length === 0) outputs = [order[order.length-1]];\n  msg += '\\n' + dent(indent, 2) + 'return'\n  outputs.map(key => {\n    msg += ' ' + getStateName(key, flowpoints, states, init_states) + ','\n  })\n  msg = msg.slice(0, -1)\n\n  // Returning\n  return msg\n\n}\n\n// Outdated save and load. Will be deleted.\nfunction SaveLoad_old(flowpoints, dummies, order, indent, library, modelname) {\n  var msg = dent(indent, 1) + \"def save(self, name=None, extras={}):\"\n  msg += '\\n' + dent(indent, 2) + \"if not name: name = self.name\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"torch.save({\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 3) + \"'\" + pointcode + \"': self.\" + pointcode + ','\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 3) + \"'name': self.name,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'extras': extras,\"\n  msg += \"\\n\" + dent(indent, 2) + \"}, name)\"\n  msg += \"\\n\\n\\n\" + dent(indent, 1) + \"@staticmethod\"\n  msg += \"\\n\" + dent(indent, 1) + \"def load(name='model'):\"\n  msg += \"\\n\" + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"checkpoint = torch.load(name)\"\n  msg += \"\\n\" + dent(indent, 2) + \"model = \" + modelname + \"()\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 2) + \"model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 2) + \"model.name = checkpoint['name']\"\n  msg += \"\\n\" + dent(indent, 2) + \"return model, checkpoint['extras']\"\n\n  // Returning\n  return msg\n}\n\n\nfunction SaveLoad(flowpoints, dummies, order, indent, library, modelname) {\n  var msg = dent(indent, 1) + \"def save(self, path):\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pt' in path: path += '.pt'\"\n  msg += '\\n' + dent(indent, 2) + \"torch.save( self.state_dict(), path )\"\n  msg += '\\n\\n\\n' + dent(indent, 1) + \"@staticmethod\"\n  msg += '\\n' + dent(indent, 1) + \"def load(path):\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pt' in path: path += '.pt'\"\n  msg += '\\n' + dent(indent, 2) + \"model = \" + modelname + \"()\"\n  msg += '\\n' + dent(indent, 2) + \"model.load_state_dict( torch.load(path) )\"\n  msg += '\\n' + dent(indent, 2) + \"model.eval()\"\n  msg += '\\n' + dent(indent, 2) + \"return model\"\n  return msg\n}\n\n\nfunction ProgressPrinter(indent) {\n  var msg = '# Helper for printing progress'\n  msg += '\\nclass ProgressPrinter:'\n  msg += '\\n\\n' + dent(indent, 1) + 'def __init__(self, epochs, metrics=[]):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Settings'\n  msg += '\\n' + dent(indent, 2) + 'self.epochs = epochs'\n  msg += '\\n' + dent(indent, 2) + 'self.metrics = metrics if type(metrics) == list else [metrics]'\n  msg += '\\n\\n' + dent(indent, 2) + '# Helper variables'\n  msg += '\\n' + dent(indent, 2) + 'self.epochs_l = 2 * len(str(self.epochs)) + 1'\n  msg += '\\n' + dent(indent, 2) + 'self.start_time = time.time()'\n  msg += '\\n' + dent(indent, 2) + 'self.log = {'\n  msg += '\\n' + dent(indent, 3) + 'metric:[]'\n  msg += '\\n' + dent(indent, 3) + \"for metric in ['Train loss', 'Test loss'] + [_.__name__ for _ in self.metrics]\"\n  msg += '\\n' + dent(indent, 2) + '}'\n  msg += '\\n\\n' + dent(indent, 2) + '# Print header'\n  msg += '\\n' + dent(indent, 2) + \"msg = 'Epoch'.rjust(self.epochs_l)\"\n  msg += '\\n' + dent(indent, 2) + \"msg += '   ' + 'Train loss'\"\n  msg += '\\n' + dent(indent, 2) + \"msg += '   ' + 'Test loss'\"\n  msg += '\\n' + dent(indent, 2) + \"msg += '   ' + 'Time left'.rjust(12)\"\n  msg += '\\n' + dent(indent, 2) + 'for metric in self.metrics:'\n  msg += '\\n' + dent(indent, 3) + \"msg += '   ' + metric.__name__.replace('_score','').rjust(8)\"\n  msg += '\\n' + dent(indent, 2) + 'print(msg)'\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def get_log(self):'\n  msg += '\\n' + dent(indent, 2) + 'return pd.DataFrame.from_dict(self.log)'\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def step(self, epoch, targets, predictions, train_loss, test_loss=None):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Epoch and loss'\n  msg += '\\n' + dent(indent, 2) + \"msg = (str(epoch + 1) + '/' + str(self.epochs)).rjust(self.epochs_l)\"\n  msg += '\\n' + dent(indent, 2) + \"msg += ' | ' + str(train_loss).rjust(10)[:10]\"\n  msg += '\\n' + dent(indent, 2) + \"msg += ' | ' + str(test_loss).rjust(9)[:9]\"\n  msg += '\\n' + dent(indent, 2) + \"self.log['Train loss'].append(train_loss)\"\n  msg += '\\n' + dent(indent, 2) + \"self.log['Test loss'].append(test_loss)\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# ETA\"\n  msg += '\\n' + dent(indent, 2) + \"eta_s = ((time.time() - self.start_time) / (epoch + 1)) * (self.epochs - epoch - 1)\"\n  msg += '\\n' + dent(indent, 2) + \"eta_msg = f'{round(eta_s // 3600)}h ' if eta_s > 3600 else ''\"\n  msg += '\\n' + dent(indent, 2) + \"eta_msg += f'{round(eta_s % 3600 // 60)}m ' if eta_s > 60 else ''\"\n  msg += '\\n' + dent(indent, 2) + \"eta_msg += f'{round(eta_s % 60)}s'\"\n  msg += '\\n' + dent(indent, 2) + \"msg += ' | ' + eta_msg.rjust(12)\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Metrics\"\n  msg += '\\n' + dent(indent, 2) + \"for metric in self.metrics:\"\n  msg += '\\n' + dent(indent, 3) + \"value = metric(targets, predictions)\"\n  msg += '\\n' + dent(indent, 3) + \"_name = metric.__name__.replace('_score','').rjust(8)\"\n  msg += '\\n' + dent(indent, 3) + \"l = len(_name)\"\n  msg += '\\n' + dent(indent, 3) + \"msg += ' | ' + str(value).rjust(l)[:l]\"\n  msg += '\\n' + dent(indent, 3) + \"self.log[metric.__name__].append(value)\"\n  msg += '\\n\\n' + dent(indent, 2) + \"# Print message\"\n  msg += '\\n' + dent(indent, 2) + \"print(msg)\"\n  return msg\n}\n\n\nfunction Fit(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library, outs) {\n\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  const formated_outputs = FormatParamInputs(dummies, outs);\n\n  var formated_inputs_with_device = ''\n  inps.map(key => formated_inputs_with_device += getPointName(dummies, key) + '.to(device), ')\n  formated_inputs_with_device = formated_inputs_with_device.substring(0, formated_inputs_with_device.length - 2)\n  \n  var formated_outputs_with_device = ''\n  outs.map(key => formated_outputs_with_device += getPointName(dummies, key) + '.to(device), ')\n  formated_outputs_with_device = formated_outputs_with_device.substring(0, formated_outputs_with_device.length - 2)\n\n  var msg = ProgressPrinter(indent)\n\n  msg += '\\n\\n\\n\\n# Helper function for training model'\n  msg += '\\n' + 'def fit(model,'\n  msg += '\\n' + dent(indent, 2) + 'train,'\n  msg += '\\n' + dent(indent, 2) + 'test=None,'\n  msg += '\\n' + dent(indent, 2) + 'epochs=10,'\n  msg += '\\n' + dent(indent, 2) + 'optimizer=optim.Adam,'\n  msg += '\\n' + dent(indent, 2) + 'criterion=nn.CrossEntropyLoss,'\n  msg += '\\n' + dent(indent, 2) + 'lr=0.001,'\n  msg += '\\n' + dent(indent, 2) + 'batch_size=32,'\n  msg += '\\n' + dent(indent, 2) + 'shuffle=True,'\n  msg += '\\n' + dent(indent, 2) + 'workers=4,'\n  msg += '\\n' + dent(indent, 2) + 'save_best=True,'\n  msg += '\\n' + dent(indent, 2) + 'metrics=[]):'\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating data loaders'\n  msg += '\\n' + dent(indent, 1) + 'train_loader = torch.utils.data.DataLoader('\n  msg += '\\n' + dent(indent, 2) + 'train,'\n  msg += '\\n' + dent(indent, 2) + 'batch_size=batch_size,'\n  msg += '\\n' + dent(indent, 2) + 'shuffle=shuffle,'\n  msg += '\\n' + dent(indent, 2) + 'num_workers=workers'\n  msg += '\\n' + dent(indent, 1) + ')'\n  msg += '\\n' + dent(indent, 1) + 'if test:'\n  msg += '\\n' + dent(indent, 2) + 'test_loader = torch.utils.data.DataLoader('\n  msg += '\\n' + dent(indent, 3) + 'test,'\n  msg += '\\n' + dent(indent, 3) + 'batch_size=batch_size,'\n  msg += '\\n' + dent(indent, 3) + 'shuffle=False,'\n  msg += '\\n' + dent(indent, 3) + 'num_workers=workers'\n  msg += '\\n' + dent(indent, 2) + ')'\n  msg += '\\n' + dent(indent, 2) + 'best_loss = 1e6'\n  msg += '\\n\\n' + dent(indent, 1) + '# Init optimizer and criterion'\n  msg += '\\n' + dent(indent, 1) + \"optimizer = optimizer( filter(lambda p: p.requires_grad, model.parameters()), lr=lr )\"\n  msg += '\\n' + dent(indent, 1) + \"criterion = criterion()\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Device\"\n  msg += '\\n' + dent(indent, 1) + \"device = next(model.parameters()).device\"\n  msg += '\\n' + dent(indent, 1) + \"print(f'Training model on {device}')\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Prep model\"\n  msg += '\\n' + dent(indent, 1) + \"model.train()\"\n  msg += '\\n\\n' + dent(indent, 1) + \"# Progress\"\n  msg += '\\n' + dent(indent, 1) + \"progress_printer = ProgressPrinter(epochs, metrics)\"\n  msg += '\\n\\n' + dent(indent, 1) + '# Gracefully interrupting training'\n  msg += '\\n' + dent(indent, 1) + 'try:'\n  msg += '\\n\\n' + dent(indent, 2) + \"# Looping through epochs\"\n  msg += '\\n' + dent(indent, 2) + \"for epoch in range(epochs):\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Reset epoch loss\"\n  msg += '\\n' + dent(indent, 3) + \"train_loss, test_loss = 0, 0\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Reset predictions and targets\"\n  msg += '\\n' + dent(indent, 3) + \"predictions, targets = [], []\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Looping through training data\"\n  msg += '\\n' + dent(indent, 3) + \"for \" + formated_inputs + \", \" + formated_outputs + \" in train_loader:\"\n  msg += '\\n\\n' + dent(indent, 4) + \"# Prediction\"\n  msg += '\\n' + dent(indent, 4) + \"prediction = model( \" + formated_inputs_with_device + ' )'\n  msg += '\\n\\n' + dent(indent, 4) + \"# Loss\"\n  msg += '\\n' + dent(indent, 4) + \"loss = criterion( prediction, \" + formated_outputs_with_device + \" )\"\n  msg += '\\n' + dent(indent, 4) + \"train_loss += loss.item()\"\n  msg += '\\n\\n' + dent(indent, 4) + \"# Backward pass and optimization\"\n  msg += '\\n' + dent(indent, 4) + \"loss.backward()       # Backward pass\"\n  msg += '\\n' + dent(indent, 4) + \"optimizer.step()      # Optimizing weights\"\n  msg += '\\n' + dent(indent, 4) + \"optimizer.zero_grad() # Clearing gradients\"\n  msg += '\\n\\n' + dent(indent, 3) + '# Average train loss'\n  msg += '\\n' + dent(indent, 3) + 'train_loss /= len(train)'\n  msg += '\\n\\n' + dent(indent, 3) + \"# Testing step\"\n  msg += '\\n' + dent(indent, 3) + \"if test:\"\n  msg += '\\n\\n' + dent(indent, 4) + \"# Switching off autograd\"\n  msg += '\\n' + dent(indent, 4) + \"with torch.no_grad():\"\n  msg += '\\n\\n' + dent(indent, 5) + '# Looping through testing data'\n  msg += '\\n' + dent(indent, 5) + \"for \" + formated_inputs + \", \" + formated_outputs + \" in test_loader:\"\n  msg += '\\n\\n' + dent(indent, 6) + \"# Prediction\"\n  msg += '\\n' + dent(indent, 6) + \"prediction = model( \" + formated_inputs_with_device + ' )'\n  msg += '\\n\\n' + dent(indent, 6) + \"# Loss\"\n  msg += '\\n' + dent(indent, 6) + \"loss = criterion( prediction, \" + formated_outputs_with_device + \" )\"\n  msg += '\\n' + dent(indent, 6) + \"test_loss += loss.item()\"\n  msg += '\\n\\n' + dent(indent, 6) + \"# Appending predictions and targets\"\n  msg += '\\n' + dent(indent, 6) + \"for pred, targ in zip(prediction.cpu().detach().numpy().squeeze(),\"\n  msg += '\\n' + dent(indent, 11) + '  ' + formated_outputs + \".cpu().detach().numpy().squeeze()):\"\n  msg += '\\n' + dent(indent, 7) + \"predictions.append(pred.reshape(-1))\"\n  msg += '\\n' + dent(indent, 7) + \"targets.append(targ.reshape(-1))\"\n  msg += '\\n\\n' + dent(indent, 5) + '# Average test loss'\n  msg += '\\n' + dent(indent, 5) + 'test_loss /= len(test)'\n  msg += '\\n\\n' + dent(indent, 5) + '# Saving best model?'\n  msg += '\\n' + dent(indent, 5) + 'if save_best and best_loss > test_loss:'\n  msg += '\\n' + dent(indent, 6) + 'best_loss = test_loss'\n  msg += '\\n' + dent(indent, 6) + \"torch.save(model.state_dict(), 'best_model.pth')\"\n  msg += '\\n\\n' + dent(indent, 3) + \"# Progress\"\n  msg += '\\n' + dent(indent, 3) + \"progress_printer.step(epoch,\"\n  msg += '\\n' + dent(indent, 8) + \"  np.array(targets),\"\n  msg += '\\n' + dent(indent, 8) + \"  np.array(predictions),\"\n  msg += '\\n' + dent(indent, 8) + \"  train_loss,\"\n  msg += '\\n' + dent(indent, 8) + \"  test_loss)\"\n  msg += '\\n\\n' + dent(indent, 1) + '# Handling user interruption'\n  msg += '\\n' + dent(indent, 1) + 'except KeyboardInterrupt:'\n  msg += '\\n' + dent(indent, 2) + \"print('Gracefully interrupting training')\"\n  msg += '\\n' + dent(indent, 2) + 'optimizer.zero_grad()'\n  msg += '\\n' + dent(indent, 2) + 'pass'\n  msg += '\\n\\n' + dent(indent, 1) + '# Finish and return'\n  msg += '\\n' + dent(indent, 1) + 'model.eval()'\n  msg += '\\n' + dent(indent, 1) + 'cuda.empty_cache()'\n  msg += '\\n' + dent(indent, 1) + 'return progress_printer.get_log()'\n  return msg\n}\n\n\nfunction Predict(indent, dummies, inps) {\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  var msg = dent(indent, 1) + 'def predict(self, ' + formated_inputs + '):'\n  msg += '\\n' + dent(indent, 2) + 'device = next(self.parameters()).device # Current device'\n  msg += '\\n' + dent(indent, 2) + 'self.eval()                             # Switch to eval mode'\n  msg += '\\n' + dent(indent, 2) + 'with torch.no_grad():                   # Switch off autograd'\n  msg += '\\n' + dent(indent, 3) + 'return self('\n  inps.map(key => msg += getPointName(dummies, key) + '.to(device), ')\n  msg = msg.substring(0, msg.length - 2)\n  msg += ')'\n  return msg\n}\n\n\nexport function PyTorchParser(state, order, inps, states, dummies, indent, init_states, outs) {\n\n  var flowpoints = state.flowpoints;\n  const library = state.environment.library.toLowerCase()\n\n  // Imports\n  var msg = PyTorchImports(indent)\n\n  // Need hidden states?\n  var got_hidden_states = false\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          got_hidden_states = true\n        }\n      }\n    }\n  })\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, state.settings.modelID);\n  msg += '\\n\\n\\n' + Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library);\n  if (got_hidden_states) msg += '\\n\\n\\n' + ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library);\n  if (state.environment.include_predict) msg += '\\n\\n\\n' + Predict(indent, dummies, inps)\n  if (state.environment.include_saveload) msg += '\\n\\n\\n' + SaveLoad(flowpoints, dummies, order, indent, library, state.environment.modelname === '' ? 'NeuralNet' : state.environment.modelname);\n  if (state.environment.include_training) msg += '\\n\\n\\n\\n' +  Fit(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library, outs)\n\n  // Returning\n  return msg\n}","import { FlowOrder } from \"./FlowOrder\";\nimport { PyTorchParser } from \"./PytorchParser\";\nimport { TensorFlowParser } from \"./TensorflowParser\";\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nconst code_parsers = {\n  pytorch: PyTorchParser,\n  tensorflow: TensorFlowParser\n}\n\n\nfunction DefaultMessage(state) {\n  var msg = \"\";\n  msg += \"'''\\n\";\n  msg += \"Created using flowpoints.io\\n\\n\";\n  if (state.settings.modelID) {\n    msg += \"Link to model:\\n\";\n    msg += \"https://mariusbrataas.github.io/flowpoints_ml/?p=\" + state.settings.modelID + \"\\n\\n\";\n  }\n  msg += \"LICENSE:\\n\"\n  msg += \"https://github.com/mariusbrataas/flowpoints_ml/blob/master/LICENSE\"\n  if (state.environment.notes !== '') {\n    var notes = state.environment.notes;\n    notes = ReplaceAll(notes, \"'\", '')\n    msg += '\\n\\nNOTES:\\n' + notes\n  }\n  msg += \"\\n'''\\n\\n\\n\"\n  return msg\n}\n\n\nexport function Parser(state) {\n\n  if (Object.keys(state.flowpoints).length > 0) {\n\n    // Order and inputs\n    const tmp = FlowOrder(state)\n    const flow_order = tmp.order;\n    const inps = tmp.inps;\n    const states = tmp.states;\n    const init_states = tmp.init_states;\n    const outs = tmp.outs;\n    var dummies = tmp.dummies;\n\n    // Init msg with default text\n    var msg = DefaultMessage(state)\n\n    // Parsing\n    const lib = state.environment.library.toLowerCase()\n    if (lib in code_parsers) {\n      msg += code_parsers[lib](state, flow_order, inps, states, dummies, '    ', init_states, outs)\n    }\n\n    // Returning\n    return {msg, order:flow_order, dummies}\n\n  }\n\n  return {msg:'', order:[], dummies:{}}\n\n}","import { getPointName, FormatParamInputs, dent, FormatInitParams } from \"./FlowOrder\";\n\n\nfunction TensorFlowImports() {\n  var msg = '# Importing TensorFlow tools'\n  msg += '\\nimport tensorflow as tf'\n  return msg\n}\n\n\nfunction Constructor(state, order, inps, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  // Basics\n  var msg = '# Model'\n  msg += \"\\ndef NeuralNet(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']):\"\n\n  // Initializing inputs\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing inputs'\n  order.map(key => {\n    let point = flowpoints[key]\n    let current_point_name = getPointName(flowpoints, key);\n\n    if (inps.includes(key)) {\n      let content = point.content;\n      msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Input(('\n      Object.keys(content.dimensions).sort().map(idx => msg += '' + content.dimensions[idx] + ',')\n      msg += \"), name='\" + current_point_name + \"')\"\n    }\n  })\n\n  // Initializing layers\n  var current_point_name = '';\n  var current_point_key = '';\n  var outputs = [];\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing layers'\n  order.map(key => {\n    let point = flowpoints[key]\n    current_point_name = getPointName(flowpoints, key);\n    current_point_key = key\n\n    if (point.base_ref !== 'Input') {\n      const content = point.content[environment.library.toLowerCase()];\n\n      if (content) {\n        const rawparams = content.parameters;\n        var parameters = { name:{type:'string', value:current_point_name} }\n        Object.keys(rawparams).map(raw_p_key => {\n          if (raw_p_key !== 'extras') parameters[raw_p_key] = rawparams[raw_p_key]\n        })\n        //parameters['name'] = {type:'string', value:current_point_name};\n        let inputs = dummies[key].inputs;\n\n        /*\n        Need an add-operation first?\n        If a node got multiple inputs and is not \"Concatenate\", those inputs should be added together.\n        */ \n        if (inputs.length > 1) {\n\n          if (point.base_ref === 'Concatenate') {\n\n            // Adding inputs\n            msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Concatenate(axis=' + point.concat_dim + ')('\n            msg += '\\n' + dent(indent, 2) + '['\n            inputs.map(inp_key => {\n              msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n            })\n            msg = msg.slice(0, -1)\n            msg += '\\n' + dent(indent, 2) + ']'\n            msg += '\\n' + dent(indent, 1) + ')'\n\n          } else {\n\n            if (point.concat_inputs) {\n\n              // Concat name\n              var concatname = \"'concat_\"\n              inputs.map(inp_key => concatname += getPointName(flowpoints, inp_key) + '_')\n              concatname = concatname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Concatenate(name=\" + concatname + \", axis=\" + point.concat_dim + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            } else {\n\n              // Adder name\n              var addname = \"'add_\"\n              inputs.map(inp_key => addname += getPointName(flowpoints, inp_key) + '_')\n              addname = addname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Add(name=\" + addname + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            }\n\n          }\n\n        } else {\n\n          // Creating layer\n          msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n          msg += FormatInitParams(parameters, 1, indent)\n          msg += '(' + getPointName(flowpoints, inputs[0]) + ')'\n\n        }\n        if (point.is_output) outputs.push(current_point_key)\n      } else {\n        msg += '\\n\\nCOULD NOT ADD ' + current_point_name + ' (' + point.base_ref + ')!'\n        msg += '\\nThe layertype is not available in the the currently selected library.\\n\\n'\n      }\n    }\n  })\n\n  // Fixing outputs?\n  if (outputs.length === 0 && current_point_key !== '') outputs.push(current_point_key)\n\n  // Creating model\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating model'\n  msg += '\\n' + dent(indent, 1) + '_model = tf.keras.models.Model('\n  if (inps.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'inputs  = [' + FormatParamInputs(dummies, inps) + '],'\n  }\n  if (outputs.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'outputs = [' + FormatParamInputs(dummies, outputs) + ']'\n  }\n  if (state.settings.modelID !== '' && state.settings.modelID !== null) {\n    msg += ','\n    msg += '\\n' + dent(indent, 2) + \"name    = 'flowpoints.io/?p=\" + state.settings.modelID + \"'\"\n  }\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Compiling model\n  msg += '\\n\\n' + dent(indent, 1) + '# Compiling model'\n  msg += '\\n' + dent(indent, 1) + \"_model.compile(\"\n  msg += '\\n' + dent(indent, 2) + \"optimizer = optimizer,\"\n  msg += '\\n' + dent(indent, 2) + \"loss      = loss,\"\n  msg += '\\n' + dent(indent, 2) + \"metrics   = metrics\"\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Returning model\n  msg += '\\n\\n' + dent(indent, 1) + '# Returning model'\n  msg += '\\n' + dent(indent, 1) + 'return _model'\n\n  // Returning\n  return msg\n\n}\n\n\n\nexport function TensorFlowParser(state, order, inps, states, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n\n  // Imports\n  var msg = TensorFlowImports()\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, inps, dummies, indent)\n\n  // Returning\n  return msg\n}","export function getBaseLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"tensorflow\": \"AbstractRNNCell\"\n    },\n    \"Activation\": {\n      \"tensorflow\": \"Activation\"\n    },\n    \"ActivityRegularization\": {\n      \"tensorflow\": \"ActivityRegularization\"\n    },\n    \"AdaptiveAvgPool1d\": {\n      \"pytorch\": \"AdaptiveAvgPool1d\"\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"pytorch\": \"AdaptiveAvgPool2d\"\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"pytorch\": \"AdaptiveAvgPool3d\"\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"pytorch\": \"AdaptiveLogSoftmaxWithLoss\"\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"pytorch\": \"AdaptiveMaxPool1d\"\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"pytorch\": \"AdaptiveMaxPool2d\"\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"pytorch\": \"AdaptiveMaxPool3d\"\n    },\n    \"Add\": {\n      \"tensorflow\": \"Add\"\n    },\n    \"AlphaDropout\": {\n      \"pytorch\": \"AlphaDropout\",\n      \"tensorflow\": \"AlphaDropout\"\n    },\n    \"Average\": {\n      \"tensorflow\": \"Average\"\n    },\n    \"AveragePooling1D\": {\n      \"tensorflow\": \"AveragePooling1D\"\n    },\n    \"AveragePooling2D\": {\n      \"tensorflow\": \"AveragePooling2D\"\n    },\n    \"AveragePooling3D\": {\n      \"tensorflow\": \"AveragePooling3D\"\n    },\n    \"AvgPool1d\": {\n      \"pytorch\": \"AvgPool1d\"\n    },\n    \"AvgPool2d\": {\n      \"pytorch\": \"AvgPool2d\"\n    },\n    \"AvgPool3d\": {\n      \"pytorch\": \"AvgPool3d\"\n    },\n    \"BatchNorm1d\": {\n      \"pytorch\": \"BatchNorm1d\"\n    },\n    \"BatchNorm2d\": {\n      \"pytorch\": \"BatchNorm2d\"\n    },\n    \"BatchNorm3d\": {\n      \"pytorch\": \"BatchNorm3d\"\n    },\n    \"BatchNormalization\": {\n      \"tensorflow\": \"BatchNormalization\"\n    },\n    \"Bidirectional\": {\n      \"tensorflow\": \"Bidirectional\"\n    },\n    \"Bilinear\": {\n      \"pytorch\": \"Bilinear\"\n    },\n    \"CELU\": {\n      \"pytorch\": \"CELU\"\n    },\n    \"Concatenate\": {\n      \"pytorch\": \"Concatenate\",\n      \"tensorflow\": \"Concatenate\"\n    },\n    \"ConstantPad1d\": {\n      \"pytorch\": \"ConstantPad1d\"\n    },\n    \"ConstantPad2d\": {\n      \"pytorch\": \"ConstantPad2d\"\n    },\n    \"ConstantPad3d\": {\n      \"pytorch\": \"ConstantPad3d\"\n    },\n    \"Conv1d\": {\n      \"pytorch\": \"Conv1d\",\n      \"tensorflow\": \"Conv1D\"\n    },\n    \"Conv2d\": {\n      \"pytorch\": \"Conv2d\",\n      \"tensorflow\": \"Conv2D\"\n    },\n    \"Conv3d\": {\n      \"pytorch\": \"Conv3d\",\n      \"tensorflow\": \"Conv3D\"\n    },\n    \"ConvLSTM2D\": {\n      \"tensorflow\": \"ConvLSTM2D\"\n    },\n    \"ConvTranspose1d\": {\n      \"pytorch\": \"ConvTranspose1d\"\n    },\n    \"ConvTranspose2d\": {\n      \"pytorch\": \"ConvTranspose2d\",\n      \"tensorflow\": \"Conv2DTranspose\"\n    },\n    \"ConvTranspose3d\": {\n      \"pytorch\": \"ConvTranspose3d\",\n      \"tensorflow\": \"Conv3DTranspose\"\n    },\n    \"Cropping1D\": {\n      \"tensorflow\": \"Cropping1D\"\n    },\n    \"Cropping2D\": {\n      \"tensorflow\": \"Cropping2D\"\n    },\n    \"Cropping3D\": {\n      \"tensorflow\": \"Cropping3D\"\n    },\n    \"Dense\": {\n      \"tensorflow\": \"Dense\"\n    },\n    \"DenseFeatures\": {\n      \"tensorflow\": \"DenseFeatures\"\n    },\n    \"DepthwiseConv2D\": {\n      \"tensorflow\": \"DepthwiseConv2D\"\n    },\n    \"Dot\": {\n      \"tensorflow\": \"Dot\"\n    },\n    \"Dropout\": {\n      \"pytorch\": \"Dropout\",\n      \"tensorflow\": \"Dropout\"\n    },\n    \"Dropout2d\": {\n      \"pytorch\": \"Dropout2d\"\n    },\n    \"Dropout3d\": {\n      \"pytorch\": \"Dropout3d\"\n    },\n    \"ELU\": {\n      \"pytorch\": \"ELU\",\n      \"tensorflow\": \"ELU\"\n    },\n    \"Embedding\": {\n      \"pytorch\": \"Embedding\",\n      \"tensorflow\": \"Embedding\"\n    },\n    \"EmbeddingBag\": {\n      \"pytorch\": \"EmbeddingBag\"\n    },\n    \"Flatten\": {\n      \"pytorch\": \"Flatten\",\n      \"tensorflow\": \"Flatten\"\n    },\n    \"Fold\": {\n      \"pytorch\": \"Fold\"\n    },\n    \"FractionalMaxPool2d\": {\n      \"pytorch\": \"FractionalMaxPool2d\"\n    },\n    \"GRU\": {\n      \"pytorch\": \"GRU\",\n      \"tensorflow\": \"GRU\"\n    },\n    \"GRUCell\": {\n      \"pytorch\": \"GRUCell\",\n      \"tensorflow\": \"GRUCell\"\n    },\n    \"GaussianDropout\": {\n      \"tensorflow\": \"GaussianDropout\"\n    },\n    \"GaussianNoise\": {\n      \"tensorflow\": \"GaussianNoise\"\n    },\n    \"GlobalAveragePooling1D\": {\n      \"tensorflow\": \"GlobalAveragePooling1D\"\n    },\n    \"GlobalAveragePooling2D\": {\n      \"tensorflow\": \"GlobalAveragePooling2D\"\n    },\n    \"GlobalAveragePooling3D\": {\n      \"tensorflow\": \"GlobalAveragePooling3D\"\n    },\n    \"GlobalMaxPool1D\": {\n      \"tensorflow\": \"GlobalMaxPool1D\"\n    },\n    \"GlobalMaxPool2D\": {\n      \"tensorflow\": \"GlobalMaxPool2D\"\n    },\n    \"GlobalMaxPool3D\": {\n      \"tensorflow\": \"GlobalMaxPool3D\"\n    },\n    \"GroupNorm\": {\n      \"pytorch\": \"GroupNorm\"\n    },\n    \"Hardshrink\": {\n      \"pytorch\": \"Hardshrink\"\n    },\n    \"Hardtanh\": {\n      \"pytorch\": \"Hardtanh\"\n    },\n    \"Identity\": {\n      \"pytorch\": \"Identity\"\n    },\n    \"InputLayer\": {\n      \"tensorflow\": \"InputLayer\"\n    },\n    \"InputSpec\": {\n      \"tensorflow\": \"InputSpec\"\n    },\n    \"InstanceNorm1d\": {\n      \"pytorch\": \"InstanceNorm1d\"\n    },\n    \"InstanceNorm2d\": {\n      \"pytorch\": \"InstanceNorm2d\"\n    },\n    \"InstanceNorm3d\": {\n      \"pytorch\": \"InstanceNorm3d\"\n    },\n    \"LPPool1d\": {\n      \"pytorch\": \"LPPool1d\"\n    },\n    \"LPPool2d\": {\n      \"pytorch\": \"LPPool2d\"\n    },\n    \"LSTM\": {\n      \"pytorch\": \"LSTM\",\n      \"tensorflow\": \"LSTM\"\n    },\n    \"LSTMCell\": {\n      \"pytorch\": \"LSTMCell\",\n      \"tensorflow\": \"LSTMCell\"\n    },\n    \"Lambda\": {\n      \"tensorflow\": \"Lambda\"\n    },\n    \"Layer\": {\n      \"tensorflow\": \"Layer\"\n    },\n    \"LayerNorm\": {\n      \"pytorch\": \"LayerNorm\"\n    },\n    \"LeakyReLU\": {\n      \"pytorch\": \"LeakyReLU\",\n      \"tensorflow\": \"LeakyReLU\"\n    },\n    \"Linear\": {\n      \"pytorch\": \"Linear\",\n      \"tensorflow\": \"Dense\"\n    },\n    \"LinearModel\": {\n      \"tensorflow\": \"LinearModel\"\n    },\n    \"LocalResponseNorm\": {\n      \"pytorch\": \"LocalResponseNorm\"\n    },\n    \"LocallyConnected1D\": {\n      \"tensorflow\": \"LocallyConnected1D\"\n    },\n    \"LocallyConnected2D\": {\n      \"tensorflow\": \"LocallyConnected2D\"\n    },\n    \"LogSigmoid\": {\n      \"pytorch\": \"LogSigmoid\"\n    },\n    \"LogSoftmax\": {\n      \"pytorch\": \"LogSoftmax\"\n    },\n    \"Masking\": {\n      \"tensorflow\": \"Masking\"\n    },\n    \"MaxPool1d\": {\n      \"pytorch\": \"MaxPool1d\",\n      \"tensorflow\": \"MaxPool1D\"\n    },\n    \"MaxPool2d\": {\n      \"pytorch\": \"MaxPool2d\",\n      \"tensorflow\": \"MaxPool2D\"\n    },\n    \"MaxPool3d\": {\n      \"pytorch\": \"MaxPool3d\",\n      \"tensorflow\": \"MaxPool3D\"\n    },\n    \"MaxUnpool1d\": {\n      \"pytorch\": \"MaxUnpool1d\"\n    },\n    \"MaxUnpool2d\": {\n      \"pytorch\": \"MaxUnpool2d\"\n    },\n    \"MaxUnpool3d\": {\n      \"pytorch\": \"MaxUnpool3d\"\n    },\n    \"Maximum\": {\n      \"pytorch\": \"Max\",\n      \"tensorflow\": \"Maximum\"\n    },\n    \"Mean\": {\n      \"pytorch\": \"Mean\"\n    },\n    \"Minimum\": {\n      \"tensorflow\": \"Minimum\"\n    },\n    \"MultiheadAttention\": {\n      \"pytorch\": \"MultiheadAttention\"\n    },\n    \"Multiply\": {\n      \"tensorflow\": \"Multiply\"\n    },\n    \"PReLU\": {\n      \"pytorch\": \"PReLU\",\n      \"tensorflow\": \"PReLU\"\n    },\n    \"Permute\": {\n      \"tensorflow\": \"Permute\"\n    },\n    \"RNN\": {\n      \"pytorch\": \"RNN\",\n      \"tensorflow\": \"RNN\"\n    },\n    \"RNNCell\": {\n      \"pytorch\": \"RNNCell\"\n    },\n    \"RReLU\": {\n      \"pytorch\": \"RReLU\"\n    },\n    \"ReLU\": {\n      \"pytorch\": \"ReLU\",\n      \"tensorflow\": \"ReLU\"\n    },\n    \"ReLU6\": {\n      \"pytorch\": \"ReLU6\"\n    },\n    \"ReflectionPad1d\": {\n      \"pytorch\": \"ReflectionPad1d\"\n    },\n    \"ReflectionPad2d\": {\n      \"pytorch\": \"ReflectionPad2d\"\n    },\n    \"RepeatVector\": {\n      \"tensorflow\": \"RepeatVector\"\n    },\n    \"ReplicationPad1d\": {\n      \"pytorch\": \"ReplicationPad1d\"\n    },\n    \"ReplicationPad2d\": {\n      \"pytorch\": \"ReplicationPad2d\"\n    },\n    \"ReplicationPad3d\": {\n      \"pytorch\": \"ReplicationPad3d\"\n    },\n    \"Reshape\": {\n      \"tensorflow\": \"Reshape\"\n    },\n    \"SELU\": {\n      \"pytorch\": \"SELU\"\n    },\n    \"SeparableConv1D\": {\n      \"tensorflow\": \"SeparableConv1D\"\n    },\n    \"SeparableConv2D\": {\n      \"tensorflow\": \"SeparableConv2D\"\n    },\n    \"Sigmoid\": {\n      \"pytorch\": \"Sigmoid\"\n    },\n    \"SimpleRNN\": {\n      \"tensorflow\": \"SimpleRNN\"\n    },\n    \"SimpleRNNCell\": {\n      \"tensorflow\": \"SimpleRNNCell\"\n    },\n    \"Softmax\": {\n      \"pytorch\": \"Softmax\",\n      \"tensorflow\": \"Softmax\"\n    },\n    \"Softmax2d\": {\n      \"pytorch\": \"Softmax2d\"\n    },\n    \"Softmin\": {\n      \"pytorch\": \"Softmin\"\n    },\n    \"Softplus\": {\n      \"pytorch\": \"Softplus\"\n    },\n    \"Softshrink\": {\n      \"pytorch\": \"Softshrink\"\n    },\n    \"Softsign\": {\n      \"pytorch\": \"Softsign\"\n    },\n    \"SpatialDropout1D\": {\n      \"tensorflow\": \"SpatialDropout1D\"\n    },\n    \"SpatialDropout2D\": {\n      \"tensorflow\": \"SpatialDropout2D\"\n    },\n    \"SpatialDropout3D\": {\n      \"tensorflow\": \"SpatialDropout3D\"\n    },\n    \"StackedRNNCells\": {\n      \"tensorflow\": \"StackedRNNCells\"\n    },\n    \"Subtract\": {\n      \"tensorflow\": \"Subtract\"\n    },\n    \"SyncBatchNorm\": {\n      \"pytorch\": \"SyncBatchNorm\"\n    },\n    \"Tanh\": {\n      \"pytorch\": \"Tanh\"\n    },\n    \"Tanhshrink\": {\n      \"pytorch\": \"Tanhshrink\"\n    },\n    \"Threshold\": {\n      \"pytorch\": \"Threshold\"\n    },\n    \"ThresholdedReLU\": {\n      \"tensorflow\": \"ThresholdedReLU\"\n    },\n    \"TimeDistributed\": {\n      \"tensorflow\": \"TimeDistributed\"\n    },\n    \"Unfold\": {\n      \"pytorch\": \"Unfold\"\n    },\n    \"UpSampling1D\": {\n      \"tensorflow\": \"UpSampling1D\"\n    },\n    \"UpSampling2D\": {\n      \"tensorflow\": \"UpSampling2D\"\n    },\n    \"UpSampling3D\": {\n      \"tensorflow\": \"UpSampling3D\"\n    },\n    \"Wrapper\": {\n      \"tensorflow\": \"Wrapper\"\n    },\n    \"ZeroPad2d\": {\n      \"pytorch\": \"ZeroPad2d\"\n    },\n    \"ZeroPadding1D\": {\n      \"tensorflow\": \"ZeroPadding1D\"\n    },\n    \"ZeroPadding2D\": {\n      \"tensorflow\": \"ZeroPadding2D\"\n    },\n    \"ZeroPadding3D\": {\n      \"tensorflow\": \"ZeroPadding3D\"\n    },\n    \"ResNet18\": {\n      \"pytorch\": \"resnet18\"\n    },\n    \"ResNet34\": {\n      \"pytorch\": \"resnet34\"\n    },\n    \"ResNet50\": {\n      \"pytorch\": \"resnet50\"\n    },\n    \"ResNet101\": {\n      \"pytorch\": \"resnet101\"\n    },\n    \"ResNet152\": {\n      \"pytorch\": \"resnet152\"\n    },\n    \"VGG11\": {\n      \"pytorch\": \"vgg11\"\n    },\n    \"VGG13\": {\n      \"pytorch\": \"vgg13\"\n    },\n    \"VGG16\": {\n      \"pytorch\": \"vgg16\"\n    },\n    \"VGG19\": {\n      \"pytorch\": \"vgg19\"\n    },\n    \"AlexNet\": {\n      \"pytorch\": \"alexnet\"\n    },\n    \"SqueezeNet1_0\": {\n      \"pytorch\": \"squeezenet1_0\"\n    },\n    \"SqueezeNet1_1\": {\n      \"pytorch\": \"squeezenet1_1\"\n    },\n    \"DenseNet121\": {\n      \"pytorch\": \"densenet121\"\n    },\n    \"DenseNet169\": {\n      \"pytorch\": \"densenet169\"\n    },\n    \"DenseNet161\": {\n      \"pytorch\": \"densenet161\"\n    },\n    \"DenseNet201\": {\n      \"pytorch\": \"densenet201\"\n    },\n    \"InceptionV3\": {\n      \"pytorch\": \"inception_v3\"\n    },\n    \"GoogLeNet\": {\n      \"pytorch\": \"googlenet\"\n    },\n    \"ShuffleNetV2_x0_5\": {\n      \"pytorch\": \"shufflenet_v2_x0_5\"\n    },\n    \"ShuffleNetV2_x1_0\": {\n      \"pytorch\": \"shufflenet_v2_x1_0\"\n    },\n    \"ShuffleNetV2_x1_5\": {\n      \"pytorch\": \"shufflenet_v2_x1_5\"\n    },\n    \"ShuffleNet\": {\n      \"pytorch\": \"shufflenet_v2_x2_0\"\n    },\n    \"MobileNetV2\": {\n      \"pytorch\": \"mobilenet_v2\"\n    },\n    \"ResNext50\": {\n      \"pytorch\": \"resnext50_32x4d\"\n    },\n    \"ResNext101\": {\n      \"pytorch\": \"resnext101_32x8d\"\n    },\n    \"Segmentation FCN ResNet50\": {\n      \"pytorch\": \"segmentation.fcn_resnet50\"\n    },\n    \"Segmentation FCN ResNet101\": {\n      \"pytorch\": \"segmentation.fcn_resnet101\"\n    },\n    \"Segmentation DeepLabV3 ResNet50\": {\n      \"pytorch\": \"segmentation.deeplabv3_resnet50\"\n    },\n    \"Segmentation DeepLabV3 ResNet101\": {\n      \"pytorch\": \"segmentation.deeplabv3_resnet101\"\n    },\n    \"Detection Faster R-CNN ResNet50\": {\n      \"pytorch\": \"detection.fasterrcnn_resnet50_fpn\"\n    },\n    \"Detection Mask R-CNN ResNet50\": {\n      \"pytorch\": \"detection.maskrcnn_resnet50_fpn\"\n    },\n    \"Keypoint R-CNN ResNet50\": {\n      \"pytorch\": \"detection.keypointrcnn_resnet50_fpn\"\n    }\n  }\n}","export function getPyTorchLibrary() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"n_classes\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"cutoffs\": {\n        \"type\": \"sequence\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"div_value\": {\n        \"type\": \"float\",\n        \"value\": 4.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"head_bias\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AlphaDropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Bilinear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in1_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"in2_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"CELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Concatenate\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Embedding\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_idx\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"EmbeddingBag\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mode\": {\n        \"type\": \"string\",\n        \"value\": \"'mean'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Flatten\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Fold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_ratio\": {\n        \"type\": \"float\",\n        \"value\": [\n          0.5,\n          0.5\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": 1\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRU\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRUCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GroupNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardtanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"min_val\": {\n        \"type\": \"float\",\n        \"value\": -1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_val\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Identity\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"InstanceNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTM\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTMCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LayerNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"normalized_shape\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"elementwise_affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LeakyReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"negative_slope\": {\n        \"type\": \"float\",\n        \"value\": 0.01,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Linear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocalResponseNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.0001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta\": {\n        \"type\": \"float\",\n        \"value\": 0.75,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"k\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LogSigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"LogSoftmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Max\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Mean\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MultiheadAttention\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"embed_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_heads\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"PReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_parameters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"init\": {\n        \"type\": \"float\",\n        \"value\": 0.25,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNN\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNNCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      }\n    },\n    \"RReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lower\": {\n        \"type\": \"float\",\n        \"value\": 0.125,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"upper\": {\n        \"type\": \"float\",\n        \"value\": 0.3333333333333333,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU6\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Sigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"1\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softmax2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmin\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softplus\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"beta\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 20,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softsign\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"SyncBatchNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Tanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Tanhshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Threshold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"threshold\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"value\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Unfold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"resnet18\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet34\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnet152\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg11\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg13\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg16\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"vgg19\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"alexnet\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"squeezenet1_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"squeezenet1_1\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet121\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet169\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet161\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"densenet201\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"inception_v3\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"googlenet\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x0_5\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x1_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x1_5\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"shufflenet_v2_x2_0\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"mobilenet_v2\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnext50_32x4d\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"resnext101_32x8d\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 1000,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.fcn_resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.fcn_resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.deeplabv3_resnet50\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"segmentation.deeplabv3_resnet101\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 21,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.fasterrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.maskrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n    \"detection.keypointrcnn_resnet50_fpn\": {\n      \"extras\": {\n        \"gothidden\": false,\n        \"torchvision\": true\n      },\n      \"pretrained\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pretrained_backbone\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"progress\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_classes\": {\n        \"type\": \"int\",\n        \"value\": 91,\n        \"istuple\": false,\n        \"min\": 0,\n        \"max\": Infinity\n      }\n    },\n  }\n}","export function getTensorFlowLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dynamic\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Activation\": {\n      \"activation\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ActivityRegularization\": {\n      \"l1\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"l2\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Add\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AlphaDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Average\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"BatchNormalization\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"epsilon\": {\n        \"type\": \"float\",\n        \"value\": 0.001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"center\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_mean_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_variance_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_clipping\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"fused\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"virtual_batch_size\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"adjustment\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Bidirectional\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"merge_mode\": {\n        \"type\": \"string\",\n        \"value\": \"concat\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"weights\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Concatenate\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ConvLSTM2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping1D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping2D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping3D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1,\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dense\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DenseFeatures\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DepthwiseConv2D\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dot\": {\n      \"axes\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"normalize\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Embedding\": {\n      \"input_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_dim\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask_zero\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"input_length\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Flatten\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRU\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRUCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianNoise\": {\n      \"stddev\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"InputSpec\": {\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"min_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"axes\": {\n        \"type\": \"string\",\n        \"value\": \"None)\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTM\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTMCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Lambda\": {\n      \"function\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"arguments\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Layer\": {\n      \")\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LeakyReLU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.3,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LinearModel\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse_combiner\": {\n        \"type\": \"string\",\n        \"value\": \"sum\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Masking\": {\n      \"mask_value\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Maximum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Minimum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Multiply\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"PReLU\": {\n      \"alpha_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shared_axes\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Permute\": {\n      \"dims\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RNN\": {\n      \"cell\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ReLU\": {\n      \"max_value\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"negative_slope\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RepeatVector\": {\n      \"n\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Reshape\": {\n      \"target_shape\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNN\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNNCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Softmax\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout1D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout2D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout3D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"StackedRNNCells\": {\n      \"cells\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Subtract\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ThresholdedReLU\": {\n      \"theta\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"TimeDistributed\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling1D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling2D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"interpolation\": {\n        \"type\": \"string\",\n        \"value\": \"nearest\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling3D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Wrapper\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding1D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding2D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding3D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    }\n  }\n}","export function getPyTorchAutoparams() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp.slice(0, inp.length - 1)\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AlphaDropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value)\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = 1 + ((inp[inp.length - 3] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[2] - p.kernel_size.value[2]) / p.stride.value[2])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 3] = Math.ceil(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 3] = Math.floor(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"BatchNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Bilinear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.out_features.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"CELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Concatenate\": {\n      outshape: (inp, p) => {\n        var tmp = inp[0]\n        inp.slice(1).map(row => {tmp[p.dim.value] += row[p.dim.value]})\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[0]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[1]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = inp[inp.length - 3] + 2 * p.padding.value[0]\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[1]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[2]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Conv1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"Conv2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"Conv3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"ConvTranspose1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = (L_in - 1) * p.stride.value + p.dilation.value * (p.kernel_size.value - 1) + p.output_padding.value + 1\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"ConvTranspose2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = (H_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const W_out = (W_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"ConvTranspose3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = (D_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const H_out = (H_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        const W_out = (W_in - 1) * p.stride.value[2] + p.dilation.value[2] * (p.kernel_size.value[2] - 1) + p.output_padding.value[2] + 1\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"Dropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Embedding\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        inp[inp.length - 1] = p.embedding_dim.value\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_embeddings.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"EmbeddingBag\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        tmp.push(p.embedding_dim.value)\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Flatten\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var features = 1/inp[0]\n        inp.map(val => {features *= val})\n        return [inp[0], Math.round(features)]\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_in\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"GRU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GRUCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GroupNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_channels.value = inp[1]\n        return p\n      }\n    },\n    \"Hardshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Identity\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"InstanceNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"LPPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var L_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value\n        if (p.ceil_mode.value) {\n          L_out = Math.ceil(L_out)\n        } else {\n          L_out = Math.floor(L_out)\n        }\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LPPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var H_out = 1 + (inp[inp.length - 2] + 2 * p.padding.value[0] - p.dilation[0] * (p.kernel_size[0] - 1) - 1) / p.stride.value[0]\n        var W_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value[1] - p.dilation[1] * (p.kernel_size[1] - 1) - 1) / p.stride.value[1]\n        if (p.ceil_mode.value) {\n          H_out = Math.ceil(H_out)\n          W_out = Math.ceil(W_out)\n        } else {\n          H_out = Math.floor(H_out)\n          W_out = Math.floor(W_out)\n        }\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LSTM\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LSTMCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LayerNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LeakyReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Linear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0;\n        var out_shape = inp.map((val, index) => {\n          idx = index;\n          return val\n        });\n        out_shape[idx] = p.out_features.value;\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_features.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"LocalResponseNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSoftmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Max\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        inp[inp.length - 1] = L_out;\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 1]\n        inp[inp.length - 1] = (H_in - 1) * p.stride.value - 2 * p.padding.value + p.kernel_size.value\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 3] = (D_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[2] - 2 * p.padding.value[2] + p.kernel_size.value[2]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Mean\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"PReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"RNN\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RNNCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU6\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let D_out = inp[inp.length - 3] + 2 * p.padding.value[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[1]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[2]\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Sigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmin\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softplus\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softsign\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SyncBatchNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Tanh\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Tanhshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Threshold\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ZeroPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_out = inp[inp.length - 2] + 2 * p.padding[0]\n        const W_out = inp[inp.length - 1] + 2 * p.padding[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"resnet18\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet34\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnet152\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg11\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg13\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg16\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"vgg19\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"alexnet\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"squeezenet1_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"squeezenet1_1\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet121\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet169\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet161\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"densenet201\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"inception_v3\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"googlenet\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x0_5\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x1_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x1_5\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"shufflenet_v2_x2_0\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"mobilenet_v2\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnext50_32x4d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"resnext101_32x8d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.fcn_resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.fcn_resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.deeplabv3_resnet50\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"segmentation.deeplabv3_resnet101\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.fasterrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.maskrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"detection.keypointrcnn_resnet50_fpn\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return [inp[0], p.num_classes.value]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n  }\n}","import { MainLibrary } from \"./MainLibrary\";\n\n\n// Cascaded simplifying and de-simplifying\n\n// Parameters\nfunction SimplifyParameters(parameters) {\n  var new_parameters = [];\n  var keys = [];\n  Object.keys(parameters).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.sort().map((p_key, idx) => {\n    new_parameters.push(parameters[p_key].value)\n  })\n  new_parameters.push(parameters.extras)\n  return new_parameters\n}\nfunction DeSimplifyParameters(parameters, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  const recipe_copy = JSON.parse(JSON.stringify(recipe))\n  var new_param_lib = {};\n  var keys = [];\n  Object.keys(recipe).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.map(p_key => new_param_lib[p_key] = null)\n  keys.sort().map((p_key, idx) => {\n    new_param_lib[p_key] = recipe[p_key];\n    new_param_lib[p_key].value = parameters[idx];\n    if (new_param_lib[p_key].value === undefined) {\n      new_param_lib[p_key].value = recipe_copy[p_key].value\n    }\n  })\n  if (parameters[keys.length]) {\n    new_param_lib.extras = parameters[keys.length]\n  } else {\n    new_param_lib.extras = recipe.extras\n  }\n  return new_param_lib\n}\n\n// Content\nfunction SimplifyContent(content) {\n  var new_content = {};\n  Object.keys(content).sort().map((library_key, idx) => {\n    new_content[library_key] = [\n      content[library_key].reference,\n      SimplifyParameters(content[library_key].parameters)\n    ]\n  })\n  return new_content\n}\nfunction DeSimplifyContent(content, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  var new_content_lib = {}\n  Object.keys(recipe).sort().map((library_key, idx) => {\n    if (library_key in content) {\n      new_content_lib[library_key] = {\n        reference: content[library_key][0],\n        parameters: DeSimplifyParameters(content[library_key][1], recipe[library_key].parameters)\n      }\n    } else {\n      new_content_lib[library_key] = recipe[library_key]\n    }\n  })\n  return new_content_lib\n}\n\n// Outputs\nfunction SimplifyOutputs(outputs) {\n  var new_outputs = [];\n  Object.keys(outputs).sort().map(key => {\n    new_outputs.push(key)\n  })\n  return new_outputs\n}\nfunction DeSimplifyOutputs(outputs) {\n  var new_outputs_lib = {};\n  outputs.map(key => {\n    new_outputs_lib[key] = {}\n  })\n  return new_outputs_lib\n}\n\n// Position\nfunction SimplifyPosition(pos) {\n  return [\n    pos.x,\n    pos.y\n  ]\n}\nfunction DeSimplifyPosition(pos) {\n  return {\n    x: pos[0],\n    y: pos[1]\n  }\n}\n\n// Entire flowpoint\nfunction SimplifyFlowpoint(flowpoint) {\n  var new_flowpoint = {\n    ref: flowpoint.base_ref,\n    name: flowpoint.name,\n    isout: flowpoint.is_output,\n    out: SimplifyOutputs(flowpoint.outputs),\n    pos: SimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs,\n    concat_dim: flowpoint.concat_dim,\n    cont: {},\n    contig: flowpoint.contiguous,\n    re_ndims: flowpoint.reshape_ndims,\n    re_dims: flowpoint.reshape_dims\n  }\n  if (flowpoint.base_ref === 'Input') {\n    new_flowpoint.cont = flowpoint.content;\n  } else {\n    new_flowpoint.cont = SimplifyContent(flowpoint.content)\n  }\n  return new_flowpoint\n}\nfunction DeSimplifyFlowpoint(flowpoint, getEmptyFlowpointContent) {\n  const recipe = getEmptyFlowpointContent(flowpoint.ref);\n  var new_flowpoint_lib = {\n    base_ref: flowpoint.ref,\n    name: flowpoint.name,\n    is_output: flowpoint.isout,\n    outputs: DeSimplifyOutputs(flowpoint.out),\n    pos: DeSimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs || false,\n    concat_dim: flowpoint.concat_dim || 0,\n    output_shape: [],\n    content: {},\n    contiguous: flowpoint.contig || false,\n    reshape_ndims: flowpoint.re_ndims || 0,\n    reshape_dims: flowpoint.re_dims || []\n  };\n  if (flowpoint.ref === 'Input') {\n    new_flowpoint_lib.content = flowpoint.cont;\n  } else {\n    new_flowpoint_lib.content = DeSimplifyContent(flowpoint.cont, recipe, flowpoint.ref === 'Softmax')\n  }\n  return new_flowpoint_lib\n}\n\n// Fix tuples\nfunction FixTuples(flowpoints) {\n  Object.keys(flowpoints).map(key => {\n    var point = flowpoints[key];\n    if (point.base_ref !== 'Input') {\n      Object.keys(point.content).map(lib_key => {\n        var content = flowpoints[key].content[lib_key];\n        Object.keys(content.parameters).map(param_key => {\n          var param = flowpoints[key].content[lib_key].parameters[param_key];\n          if (param.istuple && !Array.isArray(param.value)) {\n\n            if (point.base_ref.toLowerCase().includes('1d')) {\n              param.value = [param.value];\n            } else if (point.base_ref.toLowerCase().includes('2d')) {\n              param.value = [param.value, param.value]\n            } else if (point.base_ref.toLowerCase().includes('3d')) {\n              param.value = [param.value, param.value, param.value]\n            }\n\n            if (!Array.isArray(param.value)) {\n              var sample_tuple = null;\n              Object.keys(content).map(param_key_2 => {\n                const p2 = content[param_key_2];\n                if (p2.istuple && Array.isArray(p2.value)) sample_tuple = p2.value.map(val => 1 * val)\n              })\n            }\n\n            if (!Array.isArray(param.value)) console.log('Could not fix', point)\n\n          }\n        })\n      })\n    }\n  })\n  return flowpoints\n}\n\n// Flowpoints (like plural)\nfunction SimplifyFlowpoints(flowpoints) {\n  var new_flowpoints = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints[key] = SimplifyFlowpoint(flowpoints[key])\n  })\n  return new_flowpoints\n}\nfunction DeSimplifyFlowpoints(flowpoints, getEmptyFlowpointContent) {\n  var new_flowpoints_lib = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints_lib[key] = DeSimplifyFlowpoint(flowpoints[key], getEmptyFlowpointContent)\n  })\n  return FixTuples(new_flowpoints_lib)\n}\n\n// Environment\nfunction SimplifyEnvironment(env) {\n  return [\n    env.library,\n    env.notes,\n    env.batch_first,\n    env.modelname,\n    env.include_training,\n    env.include_saveload,\n    env.include_predict\n  ]\n}\nfunction DeSimplifyEnvironment(env, main_env) {\n  var new_env_lib = JSON.parse(JSON.stringify(main_env));\n  new_env_lib.library = '' + env[0]\n  new_env_lib.notes = '' + env[1]\n  new_env_lib.batch_first = env[2] || false\n  new_env_lib.modelname = env[3] || 'NeuralNet'\n  new_env_lib.include_training = env[4] || false\n  new_env_lib.include_saveload = env[5] || false\n  new_env_lib.include_predict = env[6] || false\n  new_env_lib.autoparams = main_env.autoparams\n  return new_env_lib\n}\n\n// Visual\nfunction SimplifyVisual(vis) {\n  return [\n    vis.darkTheme,\n    vis.theme,\n    vis.background,\n    vis.variant,\n    vis.drawerOpen,\n    vis.showShape,\n    vis.showName,\n    vis.snap\n  ]\n}\nfunction DeSimplifyVisual(vis, main_vis) {\n  var new_vis_lib = JSON.parse(JSON.stringify(main_vis));\n  new_vis_lib.darkTheme = vis[0]\n  new_vis_lib.theme = vis[1]\n  new_vis_lib.background = vis[2]\n  new_vis_lib.variant = vis[3]\n  new_vis_lib.drawerOpen = vis[4]\n  new_vis_lib.showShape = vis[5]\n  new_vis_lib.showName = vis[6]\n  new_vis_lib.snap = vis[7]\n  return new_vis_lib\n}\n\n// Settings\nfunction SimplifySettings(settings) {\n  return [\n    settings.modelID,\n    settings.count,\n    settings.lastPos\n  ]\n}\nfunction DeSimplifySettings(settings, main_set) {\n  var new_set_lib = JSON.parse(JSON.stringify(main_set));\n  new_set_lib.modelID = settings[0]\n  new_set_lib.count = settings[1]\n  new_set_lib.lastPos = settings[2]\n  return new_set_lib\n}\n\n// Try to parse json\nfunction TryParseJSON(msg) {\n  try {\n    return JSON.parse(msg)\n  } catch(err) {}\n  return msg\n}\n\n// Full\nfunction Simplify(state) {\n  return {\n    flowpoints: SimplifyFlowpoints(state.flowpoints),\n    environment: SimplifyEnvironment(state.environment),\n    visual: SimplifyVisual(state.visual),\n    settings: SimplifySettings(state.settings),\n  }\n}\nfunction DeSimplify(state, getEmptyFlowpointContent, main_lib) {\n  state = TryParseJSON(state)\n  //var main_lib = MainLibrary();\n  return {\n    flowpoints: DeSimplifyFlowpoints(state.flowpoints, getEmptyFlowpointContent),\n    environment: DeSimplifyEnvironment(state.environment, main_lib.environment),\n    visual: DeSimplifyVisual(state.visual, main_lib.visual),\n    settings: DeSimplifySettings(state.settings, main_lib.settings),\n    notification: main_lib.notification\n  }\n}\n\n\nexport function Library2String(state) {\n\n  return JSON.stringify(Simplify(state))\n\n}\n\n\nexport function String2Library(msg, getEmptyFlowpointContent, main_lib) {\n  \n  return DeSimplify(msg, getEmptyFlowpointContent, main_lib)\n\n}","var axios = require('axios');\n\nfunction rjust(msg, n, rep) {\n  msg = '' + msg\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(() => {\n    msg = rep + msg\n  })\n  return msg\n}\n\n\nfunction num2bigBase(num, lib) {\n  if (!lib) {\n    lib = '0123456789'\n    lib += 'abcdefghijklmnopqrstuvwxyz'\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  }\n  if (num < lib.length) {\n    return lib[num]\n  } else {\n    return num2bigBase(Math.floor(num / lib.length)) + lib[num % lib.length]\n  }\n}\n\n\nfunction getId(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var lib = '0123456789'\n  lib += 'abcdefghijklmnopqrstuvwxyz'\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var msg = ''\n  msg += Math.round(Math.random() * 100)\n  var d = new Date()\n  msg += rjust(d.getSeconds(), 2, 0)\n  msg += rjust(d.getMinutes(), 2, 0)\n  msg += rjust(d.getHours(), 2, 0)\n  msg += rjust(d.getDate(), 2, 0)\n  msg += rjust(d.getMonth(), 2, 0)\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\n  msg = num2bigBase(msg, lib)\n  Array.from(Array(l - msg.length).keys()).map(() => {\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\n  })\n  return msg\n}\n\n\nexport function PostToDataBase(data, cb) {\n  let model_id = getId(12)\n  data.match(/.{1,5000}/g).map((msg, idx) => {\n    try {\n      var url = 'https://docs.google.com/forms/d/e/1FAIpQLSfA4C6HCBGWLtdfUI4th6VDR7cjtSsj0fp0Tomw96CbgqjO9g/formResponse?usp=pp_url'\n      url += '&entry.1116133740=' + model_id;\n      url += '&entry.1405886587=' + msg + '_NnUuMmBbEeRr_' + rjust('' + idx, 4, '0');\n      url += '&submit=Submit'\n      axios.get(url).then(() => {})\n    } catch(err) {}\n  })\n  if (cb) cb(model_id)\n}\n\n\nexport function LoadDataBase(cb) {\n  axios.get('https://docs.google.com/spreadsheets/d/10LoweeCDvGHQBHb8Plr_1IrLXPy4-N7CFqzcO73MqCs/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0').then(res => {\n    var data = {};\n    var concat_data = {};\n    var raw = res.data.split('\\r\\n');\n    var tmp;\n    for (var idx = 1; idx < raw.length; idx++) {\n      tmp = raw[idx].split(',')\n      if (!(tmp[0] in concat_data)) concat_data[tmp[0]] = {}\n      var number = tmp[1].substring(tmp[1].length - 18)\n      if (number.includes('NnUuMmBbEeRr')) concat_data[tmp[0]][number] = tmp[1].substring(0, tmp[1].length - 18)\n    }\n    // Concating data\n    Object.keys(concat_data).map(key => {\n      data[key] = ''\n      Object.keys(concat_data[key]).sort().map(msg => {\n        data[key] += concat_data[key][msg]\n      })\n    })\n    if (cb) cb(data)\n  })\n}","var CryptoJS = require(\"crypto-js\");\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nfunction getSpecialsLib(reversed) {\n  var lib = {\n    '§': '%C2%A7',\n    '\"': '%22',\n    '#': '%23',\n    '%': '%25',\n    '&': '%26',\n    '=': '%3D',\n    '`': '%60',\n    '^': '%5E',\n    '+': '%2B',\n    '´': '%C2%B4',\n    '¨': '%C2%A8'\n  }\n  if (reversed) {\n    var revlib = {}\n    Object.keys(lib).map(key => {\n      revlib[lib[key]] = key\n    })\n    return revlib\n  }\n  return lib\n}\n\n\nexport function Encrypt(data, key) {\n  var toEncrypt = {\n    test_string: 'there_are_fish_in_the_ocean',\n    data: data\n  }\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(toEncrypt), key).toString()\n  const specials = getSpecialsLib()\n  Object.keys(specials).map(key => {\n    encrypted = ReplaceAll(encrypted, key, specials[key])\n  })\n  return encrypted\n}\n\n\nexport function Decrypt(data, key) {\n  var msg = data\n  const specials = getSpecialsLib(true)\n  Object.keys(specials).map(key => {\n    msg = ReplaceAll(msg, key, specials[key])\n  })\n  var decrypted = '';\n  try {\n    decrypted = CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8)\n  } catch(err) {\n    return false\n  }\n  if (decrypted.includes('there_are_fish_in_the_ocean')) {\n    return JSON.parse(decrypted).data\n  }\n  return false\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\n\n\nclass WhatIsThis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    }\n  }\n  render() {\n    return (\n      <div style={{padding:0}}>\n        <Button color='primary' style={{textTransform:'none', padding:'1', marginLeft:-7}} onClick={() => {this.setState({open:!this.state.open}); this.props.onClick()}}>\n          What is this?\n        </Button>\n        <div style={{marginLeft:20, marginTop:10}} onClick={() => {this.setState({open:false}); this.props.onClick()}}>\n          <Collapse in={this.state.open}>\n            <Typography color='inherit' paragraph>Model protection, using AES encryption.</Typography>\n            <Typography color='inherit' paragraph>\n              When a model is saved, it's content is converted to a string and stored in a\n              publicly view-able google sheet.<br/>\n              Altough anyone can see the model in this google sheet, encryption will make it\n              impossible for anyone without the password to read the model.\n            </Typography>\n            <Typography color='inherit' paragraph>\n              If you choose to encrypt your model, your own device will perform the\n              encryption, and then send the encrypted model to the google sheet.<br/><br/>\n\n              When you try to load an encrypted model, the encrypted string will be downloaded\n              from the google sheet, and then decrypted by your device.<br/><br/>\n              This ensures point-to-point encryption, in which no un-encrypted data is ever\n              transmitted over the internet.\n            </Typography>\n            <Typography color='inherit' style={{fontWeight:'bold'}} paragraph>\n              NB!<br/>\n              The password is NEVER STORED! If you forget your password, the contents\n              of your model cannot be recovered.\n            </Typography>\n          </Collapse>\n        </div>\n        <br/>\n      </div>\n    )\n  }\n}\n\n\nexport class LoadDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Encrypted model</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please type your password in order to decrypt the model<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (this.state.pswd === '') {\n                this.props.onClose()\n              } else {\n                this.props.onSubmit(this.state.pswd)\n              }\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'CONTINUE WITHOUT LOADING MODEL') : 'DECRYPT MODEL'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\n\nexport class SaveDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Model encryption (optional)</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Type a password to encrypt your model, or leave the\n            password field empty in order to create a public link<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) this.props.onSubmit(this.state.pswd)\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              this.props.onSubmit(this.state.pswd)\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'Continue without password') : 'Continue'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}","import React from 'react';\nimport { Typography, Dialog, DialogTitle, DialogContentText, DialogContent, ExpansionPanel, ExpansionPanelSummary, Stepper, StepContent, StepLabel, Step, Link } from \"@material-ui/core\";\n\n\nexport class HelpDialog extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { step:0 }\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo(idx) {\n    this.setState({ step:idx })\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        fullWidth\n        maxWidth='sm'\n        style={{maxHeight:'90vh', height:'auto'}}>\n\n        <DialogTitle>Getting started</DialogTitle>\n\n        <div style={{overflow:'scroll', width:'100%'}}>\n\n          <DialogContent>\n            <DialogContentText>\n              Welcome to Flowpoints ML!<br/>\n              Here you can design deep learning models graphically.<br/><br/>\n              The following few sections will help you get going :)<br/>\n              You can also check out the <Link href='https://github.com/mariusbrataas/flowpoints_ml#readme' target='_blank'>documentation</Link> for more information.<br/><br/>\n              Found an bug? Please open a new <Link href=\"https://github.com/mariusbrataas/flowpoints_ml/issues\" target='_blank'>issue</Link>, and feel free to fix it!\n            </DialogContentText>\n          </DialogContent>\n\n          <Stepper activeStep={this.state.step} orientation='vertical'>\n\n            <Step key={0} completed={false}>\n              <StepLabel onClick={() => {this.goTo(0)}}>The main parts of the screen</StepLabel>\n              <StepContent>\n                <Typography>\n                  Before we get started you should know the main parts of this tool.<br/><br/>\n                  \n                  The little stack of colored buttons:<br/>\n                  You'll use these for creating new flowpoints, copy the entire code of your model,\n                  create shareable links to your model, show/hide the panel on the left of your screen,\n                  and to view this guide.<br/><br/>\n                  \n                  The \"Misc\" tab in the side panel:<br/>\n                  Here you can change what library you want to utilize to create your model,\n                  write some notes about your work, and change the appearance of things.\n                  \n                  The \"Code\" tab in the side panel:<br/>\n                  When you create a model, it's corresponding code will be displayed here.<br/><br/>\n                  \n                  The \"Flowpoint\" tab:<br/>\n                  All parameters of the selected flowpoint can be viewed and changed in this tab.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={1} completed={false}>\n              <StepLabel onClick={() => {this.goTo(1)}}>Creating a new flowpoint</StepLabel>\n              <StepContent>\n                <Typography>\n                  Click the + button in the button stack. This should create a new\n                  flowpoint on your screen and move focus to this one automatically.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={2} completed={false}>\n              <StepLabel onClick={() => {this.goTo(2)}}>Connecting flowpoints</StepLabel>\n              <StepContent>\n                <Typography>\n                  First create two flowpoints.<br/>\n                  Did they create a connection automatically? No worries, that is supposed\n                  to happen whenever you create a flowpoint while another flowpoint is selected.<br/><br/>\n                  To create a new connection manually, start by selecting the flowpoint\n                  you want to get the output from. Next, hold shift while clicking the flowpoint\n                  that should receive the output. Poof! They're connected!<br/><br/>\n                  Disconnecting flowpoints is just as simple. Select the flowpoint that supplies the output,\n                  hold shift, and click the flowpoint that's receiving the input.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={3} completed={false}>\n              <StepLabel onClick={() => {this.goTo(3)}}>Direction of connections</StepLabel>\n              <StepContent>\n                <Typography>\n                  All connections between flowpoints signify what direction data is moving.<br/><br/>\n                  When connecting two flowpoints, the first flowpoint you select will be used as\n                  the \"sender\" in that connection, while the second flowpoint will be the \"receiver\".<br/><br/>\n                  The color-gradient of connections help identify which is which.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={4} completed={false}>\n              <StepLabel onClick={() => {this.goTo(4)}}>Changing a flowpoint's parameters</StepLabel>\n              <StepContent>\n                <Typography>\n                  If you head over to the \"Flowpoint\" tab you should see a bunch of fields\n                  (click on a flowpoint if you can't see any such fields).<br/><br/>\n                  To change the value of a field, click it, and try typing something.\n                  Note that some fields will only accept numbers.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={5} completed={false}>\n              <StepLabel onClick={() => {this.goTo(5)}}>Layer types</StepLabel>\n              <StepContent>\n                <Typography>\n                  The field at the very top in the \"Flowpoint\" tab is where you assign\n                  a layer type to your flowpoint.<br/><br/>\n                  When you click this field, a long list will pop up. These are all\n                  the layers available. Small, colored badges indicate what libraries the\n                  layer is available in, i.e. TF for TensorFlow, or PT for PyTorch.<br/><br/>\n                  If you start typing the name of a layer, the list will try to suggest a smaller selection of layers.<br/><br/>\n                  Ideally, it should be possible to create models utilizing layers that are available\n                  in either library, and quickly switch between them by just changing the \"Library\" field\n                  in the \"Misc\" tab.<br/>\n                  This won't always be the case, but entertain this idea, paramaters from all libraries\n                  will be stored whenever you create a link to your model.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={6} completed={false}>\n              <StepLabel onClick={() => {this.goTo(6)}}>Changing appearance</StepLabel>\n              <StepContent>\n                <Typography>\n                  Head over to the \"Misc\" tab. You'll see the fields \"Theme\" and \"Variant\",\n                  and a couple of buttons just beneath.<br/><br/>\n                  These have no practical application what-so-ever, but you'll be able to\n                  create deep learning models with style! I recommend trying the theme \"orange\"\n                  with the variant \"paper\".<br/><br/>\n                  Play arround till you find something you like. When you share a model, any\n                  changes to it's appearance will be included.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={7} completed={false}>\n              <StepLabel onClick={() => {this.goTo(7)}}>Sharing</StepLabel>\n              <StepContent>\n                <Typography>\n                  Ready to show off your work?<br/><br/>\n                  Click the button in the button stack showing a link. This should open a new box on your\n                  screen, asking wether you'd like to encrypt your model.<br/><br/>\n                  Adding encryption will ensure that no one without the correct password can open your model.<br/><br/>\n                  If you want to create a public link, just leave the text field empty and click continue.<br/><br/>\n                  The link will be copied to your clip-board, and the current URL should at the top of your\n                  browser will change in order to match the link.<br/><br/>\n                  If you chose to add a password, this password will be requested the next time you open your model.<br/><br/>\n                  Note that if you forget your password, the data of your model can be considered lost.\n                  Your password is not stored anywhere, and there exists no other keys that can decrypt your data.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={8} completed={false}>\n              <StepLabel onClick={() => {this.goTo(8)}}>Examples</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=KlHpdLzP3SDx\" target=\"_blank\">TensorFlow CNN used for the CIFAR10 example</Link><br/>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=9fehu18ra4ty\" target=\"_blank\">PyTorch CNN used for the CIFAR10 example</Link>\n                </Typography>\n              </StepContent>\n            </Step>\n\n          </Stepper>\n        </div>\n      </Dialog>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\n// Importing installed tools\nimport { Flowpoint, Flowspace } from 'flowpoints';\nimport copy from 'copy-to-clipboard';\n\n\n// Importing local tools\nimport { Sidebar } from './sidebar/Sidebar.js';\nimport { MainButtons } from './MainButtons';\nimport { Parser } from './parser/Parser';\nimport { Library2String, String2Library } from './LibraryParser';\nimport { PostToDataBase, LoadDataBase } from './DataBaseHandler';\nimport { Encrypt, Decrypt } from './Cryptographer';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { LoadDialog, SaveDialog } from './PasswordDialog.js';\nimport { MainLibrary } from './MainLibrary';\nimport { HelpDialog } from './HelpDialog';\n\n\nfunction shapeBox(shape) {\n  var msg = '['\n  shape.map(val => {\n    msg += val + ','\n  })\n  if (shape.length > 0) msg = msg.substring(0, msg.length - 1)\n  msg += ']'\n  return (\n    <div style={{textAlign:'center', paddingBottom:'10px'}}>\n      {\n        msg\n      }\n    </div>\n  )\n}\n\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props);\n\n    // Building state library\n    this.state = MainLibrary()\n\n    // Helpers\n    this.diagramRef = null;\n\n    // Binding class methods\n    this.showNotification = this.showNotification.bind(this);\n    this.updateCode = this.updateCode.bind(this);\n    this.updateAvailableLayers = this.updateAvailableLayers.bind(this);\n    this.prepOutputShapes = this.prepOutputShapes.bind(this);\n    this.loadDecryptedModel = this.loadDecryptedModel.bind(this);\n    this.getEmptyFlowpointContent = this.getEmptyFlowpointContent.bind(this);\n    this.addFlowpoint = this.addFlowpoint.bind(this);\n    this.copyCode = this.copyCode.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.showHideHelp = this.showHideHelp.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.deleteFlowpoint = this.deleteFlowpoint.bind(this);\n    this.deleteSelected = this.deleteSelected.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n\n  \n  componentDidMount() {\n\n    // Open drawer\n    var visual = this.state.visual;\n    visual.drawerOpen = true;\n    this.setState({visual});\n\n    // Loading model?\n    var query = window.location.href.split(this.state.settings.baseUrl)[1]\n    if (query.includes('p=')) {\n\n      query = query.substring(query.indexOf('p=') + 2, query.length)\n      query = query.substring(0, 12)\n\n      // Notify user that model is trying to load\n      this.showNotification('Trying to load model...', 'info')\n\n      // Loading database\n      LoadDataBase(data => {\n\n        // Model in data?\n        if (query in data) {\n          var decrypted = Decrypt(data[query], 'Hello world')\n          // Encryption?\n          if (decrypted) {\n            this.loadDecryptedModel(decrypted, query)\n          } else {\n            this.showNotification('Model is encrypted')\n            var visual = this.state.visual;\n            var environment = this.state.environment;\n            var settings = this.state.settings;\n            settings.modelID = query;\n            environment.encrypted_model = data[query]\n            visual.show_load_dialog = true;\n            this.setState({visual, environment, settings})\n          }\n\n        } else {\n          this.showNotification('Could not find model in database', 'error')\n        }\n\n      })\n\n    }\n\n    // Updating available layers\n    this.updateAvailableLayers()\n\n  }\n\n\n  showNotification(msg, color) {\n    if (!((color || 'nothing').includes('#'))) {\n      switch(color) {\n        case 'info':\n          color = '#2979ff'\n          break;\n        case 'error':\n          color = '#dd2c00'\n          break;\n        case 'warning':\n          color = '#ffd600'\n          break;\n        case 'success':\n          color = '#00b843'\n          break;\n        default:\n          color = '#37474f'\n      }\n    }\n    var notification = this.state.notification;\n    notification.queue.push({\n      msg,\n      color,\n      key: new Date().getTime()\n    })\n    if (notification.show) {\n      notification.show = false;\n    } else {\n      if (notification.queue.length) {\n        notification.content = notification.queue.shift()\n        notification.show = true\n      }\n    }\n    this.setState({notification})\n  }\n\n\n  updateCode(cb) {\n    var environment = this.state.environment;\n    let tmp = Parser(this.state)\n    environment.code = tmp.msg;\n    environment.order = tmp.order;\n    environment.dummies = tmp.dummies;\n    this.setState({environment})\n    this.prepOutputShapes();\n    if (cb) cb(environment.code)\n  }\n\n\n  updateAvailableLayers() {\n\n    var environment = this.state.environment;\n\n    // Creating list\n    var availableLayers = {Input: Object.keys(environment.libraryFetchers)};\n    Object.keys(environment.baseLib).map(layer_key => {\n      availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\n    })\n\n    // Updating environment\n    environment.availableLayers = availableLayers;\n\n    // Updating state\n    this.setState({environment})\n\n  }\n\n\n  prepOutputShapes(cb) {\n\n    if (this.state.environment.library in this.state.environment.autoparams) {\n\n      // Helpers\n      const autoparams = this.state.environment.autoparams[this.state.environment.library]();\n      var flowpoints = this.state.flowpoints;\n      var dummies = this.state.environment.dummies;\n      const order = this.state.environment.order;\n      const library = this.state.environment.library;\n\n      // Setting output-shapes of inputs\n      var visited = []\n      order.map(key => {\n        var point = flowpoints[key]\n        if (point.base_ref === 'Input') {\n          point.output_shape = Object.keys(point.content.dimensions).map(dimkey => {\n            return parseInt(point.content.dimensions[dimkey])\n          })\n          visited.push(key)\n        }\n      })\n\n      // Setting all output-shapes\n      order.map(key => {\n        if (!visited.includes(key)) {\n          var point = flowpoints[key];\n          if (point.content[library]) {\n            var tmp_autoparams = autoparams[point.content[library].reference];\n            if (tmp_autoparams) {\n              var bestInp = null\n              var all_inps = []\n              dummies[key].inputs.map(inp_key => {\n                if (visited.includes(inp_key)) {\n                  bestInp = inp_key\n                  all_inps.push(flowpoints[inp_key].output_shape.map(value => 1 * value))\n                }\n              })\n              if (flowpoints[bestInp]) {\n                const prevshape = flowpoints[bestInp].output_shape.map(value => 1 * value);\n                point.content[library].parameters = tmp_autoparams.autoparams(all_inps, point.content[library].parameters)\n                point.output_shape = tmp_autoparams.outshape(all_inps, point.content[library].parameters).map(value => parseInt(value))\n                visited.push(key)\n              }\n            }\n          } else {\n            point.output_shape = []\n          }\n        }\n      })\n\n      // Updating state\n      this.setState({ flowpoints })\n\n    }\n\n  }\n\n\n  loadDecryptedModel(decrypted, model_id) {\n\n    // Parsing\n    var new_state = String2Library(decrypted, this.getEmptyFlowpointContent, this.state)\n\n    // Updating visual\n    new_state.visual.show_load_dialog = false;\n    new_state.visual.load_dialog_error = false;\n    new_state.visual.show_save_dialog = false;\n\n    // Ensuring getbaselib and library fetchers are added\n    new_state.environment.getBaseLibrary = this.state.environment.getBaseLibrary\n    new_state.environment.libraryFetchers = this.state.environment.libraryFetchers\n\n    // Fixing model ID\n    new_state.settings.modelID = model_id || this.state.settings.modelID;\n\n    // Setting state\n    this.setState({flowpoints:{}, settings:{...this.state.settings, count:0}}, () => {\n      this.setState(new_state, () => {\n        // Showing notification\n        this.showNotification('Loaded model', '#00b24a')\n  \n        // Updating code and layers\n        this.updateAvailableLayers()\n        this.updateCode()\n      })\n    })\n\n  }\n\n\n  getEmptyFlowpointContent(base_ref) {\n\n    // Input nodes are treated differently from all other nodes\n    if (base_ref === 'Input') {\n      return {\n        n_dims: 4,\n        dimensions: {\n          0: 1,\n          1: 1,\n          2: 1,\n          3: 1\n        }\n      }\n    }\n\n    // Not an input node? Getting base_library references\n    var environment = this.state.environment;\n    const base_point = environment.getBaseLibrary()[base_ref];\n\n    // Adding contents and returning\n    var content = {};\n    Object.keys(base_point).map(library_key => {\n      if (library_key in environment.libraryFetchers) {\n        content[library_key] = {\n          reference: base_point[library_key],\n          parameters: environment.libraryFetchers[library_key]()[base_point[library_key]]\n        }\n      }\n    })\n    return content\n\n  }\n\n\n  addFlowpoint() {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Creating flowpoint\n    const base_ref = settings.count === 0 ? 'Input' : 'Linear';\n    var newPoint = {\n      base_ref: base_ref,\n      name: '',\n      outputs: {},\n      is_output: false,\n      concat_inputs: false,\n      concat_dim: 0,\n      output_shape: [],\n      contiguous: false,\n      reshape_ndims: 0,\n      reshape_dims: [],\n      pos: {\n        x: settings.lastPos.x,\n        y: settings.lastPos.y + 90\n      },\n      content: this.getEmptyFlowpointContent(base_ref)\n    }\n\n    // Adding flowpoint\n    flowpoints['' + settings.count] = newPoint;\n\n    // Connecting previously selected flowpoint to this one (maybe)\n    if (settings.selected) flowpoints[settings.selected].outputs['' + settings.count] = {}\n\n    // Updating settings\n    settings.selected = '' + settings.count\n    settings.count += 1\n    settings.lastPos = {\n      x: settings.lastPos.x,\n      y: settings.lastPos.y + 90\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n    this.updateCode()\n\n  }\n\n\n  copyCode() {\n    this.updateCode(code => {\n      copy(code);\n      this.showNotification('Code copied to clip-board', 'info')\n    })\n  }\n\n\n  createLink() {\n    var visual = this.state.visual;\n\n    // Showing encryption dialog\n    visual.show_save_dialog = true\n\n    // Updating state\n    this.setState({visual})\n\n  }\n\n\n  showHideHelp() {\n    var visual = this.state.visual;\n    visual.show_help_dialog = !visual.show_help_dialog;\n    this.setState({visual})\n  }\n\n\n  showHide() {\n    \n    // Loading from state\n    var visual = this.state.visual;\n    \n    // Open/close drawer\n    visual.drawerOpen = !visual.drawerOpen;\n\n    // Updating state\n    this.setState({ visual })\n\n  }\n\n\n  deleteFlowpoint(key) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Removing selected?\n    if (key === settings.selected) settings.selected = null;\n\n    // Deleting flowpoint\n    delete flowpoints[key];\n\n    // Removing any connections other flowpoints have to the deleted one\n    Object.keys(flowpoints).map(test_key => {\n      if (key in flowpoints[test_key].outputs) {\n        delete flowpoints[test_key].outputs[key]\n      }\n    })\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  deleteSelected() {\n    this.deleteFlowpoint(this.state.settings.selected);\n  }\n\n\n  handleClick(key, e) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Handling click\n    if (e.shiftKey) {\n      // If shift is pressed: Create / delete connection\n      if (settings.selected === null) {\n        // Nothing selected: selecting current\n        settings.selected = key;\n      } else {\n        if (settings.selected !== key) {\n          // Creating connection from previously clicked to current clicked\n          var pointA = flowpoints[settings.selected]\n          if (key in pointA.outputs) {\n            delete pointA.outputs[key]\n          } else {\n            pointA.outputs[key] = {}\n          }\n          this.updateCode()\n        }\n      }\n    } else {\n      // If not shift pressed: Select / deselect flowpoint\n      settings.selected = (settings.selected === null ? key : (settings.selected == key ? null : key))\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div style={{backgroundColor: (this.state.visual.darkTheme ? 'black' : 'white')}}>\n\n\n        <Sidebar\n          state={this.state}\n          refresh={() => {return this.state}}\n          updateFlowpoints={flowpoints => {this.setState({flowpoints}); this.updateCode()}}\n          updateEnvironment={environment => {this.setState({environment}); this.updateCode()}}\n          updateVisual={visual => this.setState({visual})}\n          updateSettings={settings => {this.setState({settings}); this.updateCode()}}\n          notification={(msg, color) => this.showNotification(msg, color)}\n          getEmptyFlowpointContent={this.getEmptyFlowpointContent}\n          deleteSelected={this.deleteSelected}\n          updateAvailableLayers={this.updateAvailableLayers}\n          diagramRef={this.diagramRef}\n          prepOutputShapes={this.prepOutputShapes}/>\n        \n\n        <Flowspace\n          theme={this.state.visual.theme}\n          variant={this.state.visual.variant}\n          background={this.state.visual.darkTheme ? 'black' : 'white'}\n          selected={this.state.settings.selected}\n          getDiagramRef={ref => {this.diagramRef = ref}}\n          avoidCollisions\n          onClick={() => {\n            \n            // Loading from state\n            var settings = this.state.settings;\n            settings.selected = null;\n\n            // Updating state\n            this.setState({settings})\n\n          }}\n          style={{\n            height: '100vh',\n            width: 'calc(100vw - ' + this.state.visual.drawerWidth * this.state.visual.drawerOpen + ')',\n            marginLeft: this.state.visual.drawerWidth * this.state.visual.drawerOpen,\n            transition: 'margin-left 0.4s ease-out'\n          }}>\n\n          {\n            Object.keys(this.state.flowpoints).map(key => {\n              const point = this.state.flowpoints[key];\n              return (\n                <Flowpoint\n                  key={key}\n                  outputs={point.outputs}\n                  onClick={e => {this.handleClick(key, e)}}\n                  startPosition={point.pos}\n                  snap={{x:10, y:10}}\n                  style={{\n                    width:'auto',\n                    height:'auto',\n                    minWidth:150,\n                    maxHeight: (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? 150 : 50\n                  }}\n                  onDrag={pos => {\n                    var flowpoints = this.state.flowpoints;\n                    var settings = this.state.settings;\n                    flowpoints[key].pos = pos;\n                    settings.lastPos = pos;\n                    this.setState({flowpoints, settings})\n                  }}>\n                  <div style={{height:'auto', paddingLeft:4, paddingRight:4}}>\n                      <div style={{display:'table', width:'100%', height:'50px'}}>\n                        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n                          {\n                            this.state.visual.showName ? (point.name !== '' ? point.name : 'p_' + key) : point.base_ref\n                          }\n                        </div>\n                      </div>\n                      {\n                        (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? shapeBox(point.output_shape) : null\n                      }\n                  </div>\n                </Flowpoint>\n              )\n            })\n          }\n\n        </Flowspace>\n\n\n        <MainButtons\n          state={this.state}\n          addFlowpoint={this.addFlowpoint}\n          copyCode={this.copyCode}\n          createLink={this.createLink}\n          showHide={this.showHide}\n          showHideHelp={this.showHideHelp}/>\n        \n\n        <Snackbar\n          autoHideDuration={4000}\n          onClose={() => {\n            var notification = this.state.notification;\n            notification.show = false;\n            this.setState({notification})\n          }}\n          onExited={() => {\n            var notification = this.state.notification;\n            if (notification.queue.length > 0) {\n              notification.content = notification.queue.shift();\n              notification.show = true\n            }\n            this.setState({notification})\n          }}\n          anchorOrigin={{vertical:'top', horizontal:'right'}}\n          open={this.state.notification.show}>\n          <SnackbarContent\n            message={this.state.notification.content.msg}\n            style={{backgroundColor:this.state.notification.content.color, boxShadow:'none'}}/>\n        </Snackbar>\n\n\n        <HelpDialog\n          open={this.state.visual.show_help_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_help_dialog = false;\n            this.setState({visual})\n          }}/>\n\n        \n        <LoadDialog\n          error={this.state.visual.load_dialog_error}\n          open={this.state.visual.show_load_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_load_dialog = false;\n            this.setState({visual, settings:{...this.state.settings, modelID:null}})\n          }}\n          onSubmit={pswd => {\n            var environment = this.state.environment;\n            var decrypted = Decrypt(environment.encrypted_model, pswd)\n            if (decrypted) {\n              this.loadDecryptedModel(decrypted)\n            } else {\n              var visual = this.state.visual;\n              visual.load_dialog_error = true;\n              this.setState({visual})\n              this.showNotification('Wrong password', 'error')\n            }\n          }}/>\n\n\n        <SaveDialog\n          error={this.state.visual.save_dialog_error}\n          open={this.state.visual.show_save_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n          }}\n          onSubmit={pswd => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n            PostToDataBase(Encrypt(Library2String(this.state), (pswd === '' ? 'Hello world' : pswd)), model_id => {\n\n              // Loading from state\n              var settings = this.state.settings;\n              var newUrl = settings.baseUrl + '?p=' + model_id;\n\n              // Setting model id\n              settings.modelID = model_id;\n\n              // Updating state\n              this.setState({settings})\n\n              // Updating code\n              this.updateCode()\n\n              // Changing current url\n              window.history.pushState({}, model_id, newUrl);\n\n              // Copy link to clip-board and display notification\n              copy(newUrl)\n              this.showNotification('Model saved and link copied to clip-board')\n\n            })\n          }}/>\n      \n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { getBaseLibrary } from \"./libraries/base_library\";\nimport { getPyTorchLibrary } from \"./libraries/pytorch_library\";\nimport { getTensorFlowLibrary } from \"./libraries/tensorflow_library\";\nimport { getPyTorchAutoparams } from \"./libraries/pytorch_autoparams\";\n\nexport function MainLibrary() {\n  return {\n    flowpoints: {},\n    environment: {\n      getBaseLibrary: getBaseLibrary,\n      baseLib: getBaseLibrary(),\n      library: 'pytorch',\n      libraryFetchers: {\n        pytorch: getPyTorchLibrary,\n        tensorflow: getTensorFlowLibrary\n      },\n      autoparams: {\n        pytorch: getPyTorchAutoparams\n      },\n      availableLayers: [],\n      code: 'Dont panick',\n      encrypted_model: '',\n      notes: '',\n      order: [],\n      dummies: {},\n      batch_first: true,\n      modelname: 'NeuralNet',\n      include_training: true,\n      include_saveload: true,\n      include_predict: true,\n    },\n    visual: {\n      darkTheme: false,\n      theme: 'indigo',\n      background: 'white',\n      variant: 'outlined',\n      drawerOpen: false,\n      drawerWidth: 360,\n      showShape: false,\n      showName: false,\n      snap: true,\n      show_load_dialog: false,\n      load_dialog_error: false,\n      show_save_dialog: false,\n      show_help_dialog: false\n    },\n    settings: {\n      tab: 'Misc',\n      modelID: null,\n      baseUrl: window.location.href.split('/?')[0],\n      count: 0,\n      selected: null,\n      lastPos: {x:50, y:-40}\n    },\n    notification: {\n      show: false,\n      content: {\n        msg: 'Hello world',\n        color: '#00e676'\n      },\n      queue: []\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}