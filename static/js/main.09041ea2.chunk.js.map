{"version":3,"sources":["sidebar/SidebarHead.js","sidebar/FrontHelpers.js","sidebar/MiscTab.js","sidebar/CodeTab.js","sidebar/FlowpointTab.js","sidebar/SidebarContents.js","sidebar/TabContainer.js","sidebar/Sidebar.js","MainButtons.js","parser/FlowOrder.js","parser/PytorchParser.js","parser/Parser.js","parser/TensorflowParser.js","libraries/base_library.js","libraries/pytorch_library.js","libraries/tensorflow_library.js","libraries/pytorch_autoparams.js","LibraryParser.js","DataBaseHandler.js","Cryptographer.js","PasswordDialog.js","HelpDialog.js","App.js","MainLibrary.js","serviceWorker.js","index.js"],"names":["SidebarHead","props","react_default","a","createElement","Typography_default","href","gutterBottom","variant","component","style","padding","index_es","color","underline","position","right","top","IconButton_default","target","index_esm","TextFieldContainer","label","value","placeholder","type","rows","margin","multiline","onChange","e","SelectContainer","FormControl_default","htmlFor","inputProps","name","id","options","map","opt","Autosuggest","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","initmsg","open","arrow_idx","wrapperRef","handleClickOutside","bind","assertThisInitialized","inherits","createClass","key","document","addEventListener","removeEventListener","contains","setState","_this2","opt_keys","idx","keys","chips","val","push","fontSize","height","marginLeft","backgroundColor","toLowerCase","includes","selected","onClick","class","length","disabled","width","paddingTop","marginTop","onKeyDown","keyCode","Math","max","min","ref","node","maxHeight","overflow","React","Component","SwitchContainer","clickable","marginBottom","themes","variants","htmlToImage","require","NotesSection","FrontHelpers_TextFieldContainer","environment","notes","refresh","updateEnvironment","EnvironmentSection","FrontHelpers_SelectContainer","library","libraryFetchers","updateAvailableLayers","FrontHelpers_SwitchContainer","batch_first","CustomizeViewSection","visual","theme","paddingRight","paddingBottom","updateVisual","tmp","autoparams","showShape","prepOutputShapes","diagramRef","toPng","then","dataUrl","Image","src","link","download","click","MiscTab","MiscTab_EnvironmentSection","MiscTab_CustomizeViewSection","MiscTab_NotesSection","github","hljs","background","CodeTab","codetheme","darkTheme","atelierForestDark","default_highlight","language","showLineNumbers","code","fieldChanger","updateFlowpoints","flowpoints","settings","content","parameters","fieldChanger_base","TransformsSection","point","bools","ints","tuples","contiguous","reshape_ndims","new_dims","Array","from","parseInt","reshape_dims","new_value","ParametersSection","fields","int","float","select","tuple","bool","string","unknown","base_ref","p_key","parameter","istuple","n_dims","round","Infinity","dims","dimensions","ButtonContainer","title","tooltip","placement","aria-label","children","SettingsSection","FrontHelpers_Autosuggest","availableLayers","getEmptyFlowpointContent","FlowpointTab_ButtonContainer","deleteSelected","Delete_default","is_output","concat_inputs","concat_dim","FlowpointTab","display","verticalAlign","textAlign","show_param_section","FlowpointTab_SettingsSection","FlowpointTab_ParametersSection","FlowpointTab_TransformsSection","SidebarContents","tab","MiscTab_MiscTab","updateSettings","notification","CodeTab_CodeTab","FlowpointTab_FlowpointTab","TabContainer","undefined","tabs","indexOf","classes","ceil","className","root","Tabs_default","onSelectTab","textColor","tabsRoot","indicator","tabsIndicator","scrollButtons","Tab_default","disableRipple","tabRoot","tabSelected","withStyles","flexGrow","borderBottom","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","unit","fontFamily","join","&:hover","opacity","&$tabSelected","&:focus","darkMuiTheme","createMuiTheme","palette","useNextVariants","lightMuiTheme","Sidebar","styles","Drawer_default","anchor","drawerOpen","maxWidth","drawerWidth","SidebarHead_SidebarHead","sidebar_TabContainer","SidebarContents_SidebarContents","disableTriggerFocus","disableFocusListener","zIndex","boxShadow","MainButtons","bottom","left","transition","MainButtons_ButtonContainer","addFlowpoint","Add_default","copyCode","FileCopy_default","createLink","Link_default","showHideHelp","Help_default","showHide","Menu_default","getPointName","p","replace","dent","indent","n","FormatInitParams","indentation","max_l","param","i","substring","FormatParamInputs","input_keys","isDownStream","dummies","target_key","test_key","r_key","downStreamTested","recIsDownStream","found_downstream","outputs","out_key","recGetOrder","order","dummy","ordered","ready","inputs","isReady","sort","getStateNames","states","last_user","max_index","getLastUser","FlowOrder","inps","getInputs","is_recurrent","getDummyLibrary","init_states","outs","getStateName","getOutputTargetName","code_parsers","pytorch","need_flattening","Flatten","got_hidden_states","extras","gothidden","modelID","state_msg","reference","Constructor","StartupRoutines","hidden","ResetHidden","formated_inputs","p_name","Predict","step_lib","step_msg","inp_key","dim","reshape_msg","step","slice","Forward","FitStep","ValidationStep","Fit","PlotHist","pointcode","SaveLoad","InitModel","tensorflow","current_point_name","current_point_key","rawparams","raw_p_key","concatname","addname","getBaseLibrary","AbstractRNNCell","Activation","ActivityRegularization","AdaptiveAvgPool1d","AdaptiveAvgPool2d","AdaptiveAvgPool3d","AdaptiveLogSoftmaxWithLoss","AdaptiveMaxPool1d","AdaptiveMaxPool2d","AdaptiveMaxPool3d","Add","AlphaDropout","Average","AveragePooling1D","AveragePooling2D","AveragePooling3D","AvgPool1d","AvgPool2d","AvgPool3d","BatchNorm1d","BatchNorm2d","BatchNorm3d","BatchNormalization","Bidirectional","Bilinear","CELU","Concatenate","ConstantPad1d","ConstantPad2d","ConstantPad3d","Conv1d","Conv2d","Conv3d","ConvLSTM2D","ConvTranspose1d","ConvTranspose2d","ConvTranspose3d","Cropping1D","Cropping2D","Cropping3D","Dense","DenseFeatures","DepthwiseConv2D","Dot","Dropout","Dropout2d","Dropout3d","ELU","Embedding","EmbeddingBag","Fold","FractionalMaxPool2d","GRU","GRUCell","GaussianDropout","GaussianNoise","GlobalAveragePooling1D","GlobalAveragePooling2D","GlobalAveragePooling3D","GlobalMaxPool1D","GlobalMaxPool2D","GlobalMaxPool3D","GroupNorm","Hardshrink","Hardtanh","Identity","InputLayer","InputSpec","InstanceNorm1d","InstanceNorm2d","InstanceNorm3d","LPPool1d","LPPool2d","LSTM","LSTMCell","Lambda","Layer","LayerNorm","LeakyReLU","Linear","LinearModel","LocalResponseNorm","LocallyConnected1D","LocallyConnected2D","LogSigmoid","LogSoftmax","Masking","MaxPool1d","MaxPool2d","MaxPool3d","MaxUnpool1d","MaxUnpool2d","MaxUnpool3d","Maximum","Mean","Minimum","MultiheadAttention","Multiply","PReLU","Permute","RNN","RNNCell","RReLU","ReLU","ReLU6","ReflectionPad1d","ReflectionPad2d","RepeatVector","ReplicationPad1d","ReplicationPad2d","ReplicationPad3d","Reshape","SELU","SeparableConv1D","SeparableConv2D","Sigmoid","SimpleRNN","SimpleRNNCell","Softmax","Softmax2d","Softmin","Softplus","Softshrink","Softsign","SpatialDropout1D","SpatialDropout2D","SpatialDropout3D","StackedRNNCells","Subtract","SyncBatchNorm","Tanh","Tanhshrink","Threshold","ThresholdedReLU","TimeDistributed","Unfold","UpSampling1D","UpSampling2D","UpSampling3D","Wrapper","ZeroPad2d","ZeroPadding1D","ZeroPadding2D","ZeroPadding3D","getPyTorchLibrary","output_size","in_features","n_classes","cutoffs","div_value","head_bias","return_indices","inplace","kernel_size","stride","ceil_mode","count_include_pad","num_features","eps","momentum","affine","track_running_stats","in1_features","in2_features","out_features","bias","alpha","in_channels","out_channels","padding_mode","dilation","groups","output_padding","num_embeddings","embedding_dim","padding_idx","max_norm","norm_type","scale_grad_by_freq","sparse","mode","output_ratio","input_size","hidden_size","num_layers","dropout","bidirectional","num_groups","num_channels","lambd","min_val","max_val","normalized_shape","elementwise_affine","negative_slope","size","beta","k","Max","keepdim","embed_dim","num_heads","num_parameters","init","nonlinearity","lower","upper","threshold","getTensorFlowLibrary","trainable","dtype","dynamic","activation","l1","l2","rate","noise_shape","seed","pool_size","strides","data_format","axis","epsilon","center","scale","beta_initializer","gamma_initializer","moving_mean_initializer","moving_variance_initializer","beta_regularizer","gamma_regularizer","beta_constraint","gamma_constraint","renorm","renorm_clipping","renorm_momentum","fused","virtual_batch_size","adjustment","layer","merge_mode","weights","Conv1D","filters","dilation_rate","use_bias","kernel_initializer","bias_initializer","kernel_regularizer","bias_regularizer","activity_regularizer","kernel_constraint","bias_constraint","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","recurrent_activation","recurrent_initializer","unit_forget_bias","recurrent_regularizer","recurrent_constraint","return_sequences","go_backwards","stateful","recurrent_dropout","cropping","units","feature_columns","depth_multiplier","depthwise_initializer","depthwise_regularizer","depthwise_constraint","axes","normalize","input_dim","output_dim","embeddings_initializer","embeddings_regularizer","embeddings_constraint","mask_zero","input_length","implementation","return_state","unroll","time_major","reset_after","stddev","shape","ndim","max_ndim","min_ndim","function","output_shape","mask","arguments",")","sparse_combiner","mask_value","MaxPool1D","MaxPool2D","MaxPool3D","alpha_initializer","alpha_regularizer","alpha_constraint","shared_axes","cell","max_value","target_shape","pointwise_initializer","pointwise_regularizer","pointwise_constraint","cells","theta","interpolation","getPyTorchAutoparams","outshape","inp","floor","current","console","log","row","L_in","L_out","H_in","W_in","H_out","W_out","D_in","D_out","features","out_shape","index","SimplifyParameters","new_parameters","DeSimplifyParameters","recipe","JSON","parse","stringify","recipe_copy","new_param_lib","SimplifyOutputs","new_outputs","DeSimplifyOutputs","new_outputs_lib","SimplifyFlowpoint","flowpoint","pos","new_flowpoint","isout","out","x","y","cont","contig","re_ndims","re_dims","new_content","library_key","SimplifyContent","DeSimplifyFlowpoint","new_flowpoint_lib","new_content_lib","DeSimplifyContent","SimplifyFlowpoints","new_flowpoints","DeSimplifyFlowpoints","new_flowpoints_lib","lib_key","param_key","isArray","param_key_2","p2","FixTuples","DeSimplifyEnvironment","env","main_env","new_env_lib","DeSimplifyVisual","vis","main_vis","new_vis_lib","showName","snap","DeSimplifySettings","main_set","new_set_lib","count","lastPos","DeSimplify","main_lib","err","TryParseJSON","Library2String","Simplify","axios","rjust","rep","getId","l","lib","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2bigBase","num","getYear","toString","CryptoJS","ReplaceAll","str","search","replacement","newstr","split","getSpecialsLib","reversed","§","\"","#","%","&","=","`","^","+","´","¨","revlib","Decrypt","data","specials","decrypted","AES","decrypt","enc","Utf8","WhatIsThis","Button_default","Collapse_default","in","paragraph","LoadDialog","_React$Component2","_this3","pswd","fieldRef","_this4","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","PasswordDialog_WhatIsThis","focus","autoComplete","onSubmit","preventDefault","TextField_default","error","InputLabelProps","shrink","inputRef","input","DialogActions_default","continueMsg","SaveDialog","_React$Component3","_this5","_this6","HelpDialog","goTo","fullWidth","activeStep","orientation","completed","App","baseLib","encrypted_model","show_load_dialog","load_dialog_error","show_save_dialog","show_help_dialog","baseUrl","window","location","show","queue","showNotification","updateCode","loadDecryptedModel","deleteFlowpoint","handleClick","cb","query","get","res","concat_data","raw","number","getTime","shift","flow_order","DefaultMessage","Parser","Input","layer_key","visited","dimkey","tmp_autoparams","bestInp","all_inps","model_id","new_state","objectSpread","0","1","2","3","base_point","newPoint","copy","shiftKey","pointA","Sidebar_Sidebar","dist","getDiagramRef","avoidCollisions","startPosition","onDrag","paddingLeft","shapeBox","MainButtons_MainButtons","autoHideDuration","onExited","anchorOrigin","vertical","horizontal","message","HelpDialog_HelpDialog","PasswordDialog_LoadDialog","PasswordDialog_SaveDialog","save_dialog_error","match","url","PostToDataBase","toEncrypt","test_string","encrypted","encrypt","Encrypt","newUrl","history","pushState","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.09041ea2.chunk.js","sourcesContent":["import React from 'react';\n\n// Material\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// Icons\nimport { FaGithub, FaLinkedin, FaNpm } from \"react-icons/fa\";\nimport { Link } from '@material-ui/core';\n\n\nexport const SidebarHead = props => {\n  return (\n    <div>\n\n      <Typography href='https://mariusbrataas.github.io/flowpoints_ml' gutterBottom variant=\"h5\" component=\"h2\" style={{padding:'15px'}}>\n        <Link href='https://mariusbrataas.github.io/flowpoints_ml' color='inherit' underline='none'>\n          Flowpoints\n        </Link>\n      </Typography>\n\n      <div style={{position:'absolute', right:5, top:5}}>\n        <IconButton target='_blank' href='https://www.npmjs.com/package/flowpoints'>\n          <FaNpm/>\n        </IconButton>\n        <IconButton target='_blank' href='https://www.linkedin.com/in/mariusbrataas/'>\n          <FaLinkedin/>\n        </IconButton>\n        <IconButton target='_blank' href='https://github.com/mariusbrataas/flowpoints_ml#readme'>\n          <FaGithub/>\n        </IconButton>\n      </div>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './FrontHelpers.css'\n\n// Material\nimport FormControl from '@material-ui/core/FormControl';\nimport { Paper, InputLabel, Select, MenuItem, FormControlLabel, Switch, TextField, Tooltip, Chip } from '@material-ui/core';\n\n\nexport const TextFieldContainer = props => {\n  return (\n    <TextField\n      label={props.label}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n      rows={props.rows}\n      variant={props.variant}\n      margin={props.margin ? props.margin : 'tight'}\n      style={props.style}\n      multiline={props.multiline}\n      onChange={e => {\n        if (props.onChange) props.onChange(e.target.value)\n      }}/>\n  )\n}\n\n\nexport const SelectContainer = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            props.options.map(opt => {\n              return (\n                <MenuItem value={opt}>{opt}</MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport const SelectContainerTooltips = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            Object.keys(props.options).map(opt => {\n              var chips = []\n              props.options[opt].map(val => {\n                chips.push(\n                  <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n                )\n              })\n              return (\n                <MenuItem value={opt}>\n                <div class='container'>\n                  <div class='option'>{opt}</div>\n                  <div class='chips'>{chips}</div>\n                </div>\n                </MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport class Autosuggest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      msg: this.props.value,\n      initmsg: this.props.value,\n      options: this.props.options,\n      open: false,\n      arrow_idx: 0\n    }\n    this.wrapperRef = null;\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside(e) {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) this.setState({open:false, msg:this.props.value})\n  }\n  render() {\n    if (this.state.initmsg !== this.props.value) {\n      this.setState({\n        msg: this.props.value,\n        initmsg: this.props.value,\n        open: false,\n        arrow_idx: 0\n      })\n    }\n    var options = [];\n    var opt_keys = [];\n    var idx = 0;\n    Object.keys(this.state.options).map(opt => {\n      var chips = [];\n      this.state.options[opt].map(val => {\n        chips.push(\n          <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n        )\n      })\n      if (opt.toLowerCase().includes(this.state.msg.toLowerCase())) {\n        options.push(\n          <MenuItem\n            value={opt}\n            selected={this.state.arrow_idx === idx}\n            onClick={e => {\n              this.setState({arrow_idx:idx, msg:opt, open:false})\n              if (this.props.onChange) this.props.onChange(opt)\n            }}>\n            <div class='container'>\n              <div class='option'>{opt}</div>\n              <div class='chips'>{chips}</div>\n            </div>\n          </MenuItem>\n        )\n        opt_keys.push(opt)\n        idx += 1\n      }\n    })\n    if (options.length === 0) options.push( <MenuItem disabled value='Nothing'>No available layers</MenuItem> )\n    return (\n      <div style={{width:'100%'}}>\n        <TextField\n          style={{width:'100%', paddingTop:0, marginTop:0}}\n          onClick={() => {this.setState({open:!this.state.open})}}\n          label=\"Layer type\"\n          value={this.state.msg}\n          onChange={e => {this.setState({msg:e.target.value, arrow_idx:0, open:true})}}\n          margin=\"normal\"\n          onKeyDown={e => {\n            if (e.keyCode === 40) {\n              this.setState({arrow_idx: Math.max(Math.min(options.length - 1, this.state.arrow_idx + 1), 0)})\n            } else if (e.keyCode === 38) {\n              this.setState({arrow_idx: Math.min(Math.max(0, this.state.arrow_idx - 1), options.length)})\n            } else if (e.keyCode === 13) {\n              if (opt_keys.length > this.state.arrow_idx) {\n                this.setState({msg:opt_keys[this.state.arrow_idx], open:false})\n                if (this.props.onChange) this.props.onChange(opt_keys[this.state.arrow_idx])\n              }\n            }\n          }}\n        />\n        {\n          this.state.open ? <div ref={node => {this.wrapperRef = node}}>\n            <Paper style={{maxHeight:'40vh', overflow:'scroll'}}>\n              {\n                options\n              }\n            </Paper></div> : null\n        }\n      </div>\n    )\n  }\n}\n\n\n/*export const SwitchContainer = props => {\n  return (\n    <FormControlLabel\n      style={props.style}\n      control={\n        <Switch\n          checked={props.value}\n          color='primary'\n          onChange={e => {\n            if (props.onChange) props.onChange(!props.value)\n          }}/>\n      }\n      label={props.label}/>\n  )\n}*/\n\n\nexport const SwitchContainer = props => {\n  return (\n    <Chip\n      label={props.label}\n      clickable\n      style={{\n        marginLeft:5,\n        marginTop:2,\n        marginBottom:2,\n        backgroundColor:(props.value ? '#64b5f6' : '#e0e0e0'),\n        color:(props.value ? 'white' : '#424242')\n      }}\n      onClick={e => {\n        if (props.onChange) props.onChange(!props.value)\n      }}/>\n  )\n}\n\nexport const themes = [\n  'red',\n  'pink',\n  'purple',\n  'deep-purple',\n  'indigo',\n  'blue',\n  'light-blue',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'blue-grey',\n  'black',\n  'white'\n]\n\nexport const variants = [\n  'paper',\n  'outlined',\n  'filled'\n]","import React, { Component } from 'react';\n\n// Local tools\nimport { SelectContainer, themes, variants, SwitchContainer, TextFieldContainer } from './FrontHelpers.js';\nimport { Button } from '@material-ui/core';\n\n// Other imports\n\nconst htmlToImage = require('html-to-image');\n\n\n\nconst NotesSection = props => {\n  return (\n    <div style={{paddingTop:30}}>\n\n      <TextFieldContainer\n        label='Model notes'\n        multiline={true}\n        value={props.state.environment.notes}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.notes = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n    </div>\n  )\n}\n\n\nconst EnvironmentSection = props => {\n  var environment = props.state.environment;\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Environment</h3>\n\n      <SelectContainer\n        label='Library'\n        value={environment.library}\n        options={Object.keys(environment.libraryFetchers)}\n        onChange={val => {\n          \n          // Loading from state\n          var environment = props.refresh().environment;\n          environment.library = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n          // Updating available layers\n          props.updateAvailableLayers()\n\n        }}/>\n\n      {\n        environment.library === 'pytorch' ? <div style={{paddingTop:20}}><SwitchContainer\n          label='batch first'\n          value={environment.batch_first}\n          style={{paddingTop:0}}\n          onChange={val => {\n\n            // Loading from state\n            var environment = props.refresh().environment;\n            environment.batch_first = val;\n\n            // Updating state\n            props.updateEnvironment(environment)\n\n          }}/></div> : null\n      }\n\n    </div>\n  )\n}\n\n\nconst CustomizeViewSection = props => {\n  var visual = props.state.visual;\n  var environment = props.state.environment;\n  return (\n    <div style={{paddingTop:20, width:'100%'}}>\n      \n      <h3>Customize view</h3>\n\n      <div>\n\n        <SelectContainer\n          label='Theme'\n          value={visual.theme}\n          options={themes}\n          style={{width:'48%', paddingRight:10, paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.theme = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n        \n        <SelectContainer\n          label='Variant'\n          value={visual.variant}\n          options={variants}\n          style={{width:'48%', paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.variant = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n\n      </div>\n\n\n      <div style={{paddingTop:20}}>\n        {\n          [\n            {ref:'darkTheme', label:'Dark theme'},\n            {ref:'showName', label:'Show names'}\n          ].map(tmp => {\n            return (\n              <SwitchContainer\n                label={tmp.label}\n                value={visual[tmp.ref]}\n                style={{paddingTop:0}}\n                onChange={val => {\n\n                  // Loading from state\n                  var visual = props.refresh().visual;\n                  visual[tmp.ref] = val;\n\n                  // Updating state\n                  props.updateVisual(visual)\n\n                }}/>\n            )\n          })\n        }\n        {\n          environment.library in environment.autoparams ? <SwitchContainer\n            label='Show shapes'\n            value={visual.showShape}\n            style={{paddingTop:0}}\n            onChange={val => {\n              var visual = props.refresh().visual;\n              visual.showShape = val;\n              props.updateVisual(visual);\n              if (val) props.prepOutputShapes();\n            }}/> : null\n        }\n      </div>\n\n      {\n        props.diagramRef ? <div style={{paddingTop:20}}>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                htmlToImage.toPng(props.diagramRef).then(function (dataUrl) {\n                  var img = new Image();\n                  img.src = dataUrl;\n                  var link = document.createElement('a');\n                  link.download = 'diagram.png';\n                  link.href = dataUrl;\n                  link.click();\n                })\n              }}>\n              Export png\n            </Button></div> : null\n      }\n\n    </div>\n  )\n}\n\n\n\nexport const MiscTab = props => {\n  return (\n    <div style={{padding:15}}>\n\n      <EnvironmentSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}\n        updateAvailableLayers={props.updateAvailableLayers}/>\n      \n      <CustomizeViewSection\n        state={props.state}\n        refresh={props.refresh}\n        updateVisual={props.updateVisual}\n        diagramRef={props.diagramRef}\n        prepOutputShapes={props.prepOutputShapes}/>\n      \n      <NotesSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}/>\n      \n    </div>\n  )\n}","import React, { Component } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierForestDark } from 'react-syntax-highlighter/dist/styles/hljs';\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github';\n\ngithub.hljs.background = '#ffffff';\n\nexport const CodeTab = props => {\n  const codetheme = props.state.visual.darkTheme ? atelierForestDark : github\n  return (\n    <div style={{fontSize:12}}>\n\n      <SyntaxHighlighter language='python' style={codetheme} showLineNumbers>\n      {\n        props.state.environment.code\n      }\n      </SyntaxHighlighter>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { Autosuggest, SelectContainer, TextFieldContainer, SwitchContainer, SelectContainerTooltips } from './FrontHelpers';\nimport { IconButton, TextField, MenuItem, Paper, FormControl, Chip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Tooltip } from '@material-ui/core';\n\n\n\nfunction fieldChanger(refresh, updateFlowpoints, key, value) {\n  var state = refresh();\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[environment.library.toLowerCase()].parameters[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_input(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_base(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected][key] = value;\n  updateFlowpoints(flowpoints)\n}\n\n\nconst TransformsSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected]\n\n  // Container for bools\n  var bools = [];\n  var ints = [];\n  var tuples = [];\n\n  // Adding bools\n  bools.push(\n    <SwitchContainer\n      label='contiguous'\n      value={point.contiguous}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'contiguous',\n          val\n        )\n      }}/>\n  )\n\n  // Adding ints\n  ints.push(\n    <TextFieldContainer\n      label='Reshape dimensions'\n      value={point.reshape_ndims}\n      type='number'\n      variant='outlined'\n      margin='dense'\n      style={{\n        width: 150,\n        paddingRight: 5\n      }}\n      onChange={val => {\n        fieldChanger_base(\n          props.refresh,\n          props.updateFlowpoints,\n          'reshape_ndims',\n          val\n        )\n        if (val) {\n          var new_dims = [];\n          Array.from(Array(parseInt(val)).keys()).map(idx => {\n            new_dims.push(point.reshape_dims[idx] ? point.reshape_dims[idx] : 0)\n          })\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_dims\n          )\n        }\n      }}/>\n  )\n\n  // Tuples\n  Array.from(Array(parseInt(point.reshape_ndims ? point.reshape_ndims : 0)).keys()).map(idx => {\n    tuples.push(\n      <TextFieldContainer\n        label={'reshape dim ' + idx}\n        value={point.reshape_dims[idx]}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n          var new_value = point.reshape_dims;\n          new_value[idx] = val\n          fieldChanger_base(\n            props.refresh,\n            props.updateFlowpoints,\n            'reshape_dims',\n            new_value\n          )\n        }}/>\n    )\n  })\n\n  // Returning\n  return (\n    <div>\n  \n      <h3 style={{marginTop:30}}>Tensor transforms</h3>\n\n      <div style={{paddingTop:0, marginTop:0, marginLeft:-5, paddingBottom:10}}>{ bools }</div>\n      <div>{ ints }</div>\n      <div>{ tuples }</div>\n\n    </div>\n  )\n\n}\n\n\nconst ParametersSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected];\n\n  // Creating all fields\n  var fields = {\n    int: [],\n    float: [],\n    select: [],\n    tuple: [],\n    bool: [],\n    string: [],\n    unknown: []\n  }\n\n  if (point.base_ref !== 'Input') {\n\n    var parameters = point.content[props.state.environment.library.toLowerCase()].parameters;\n\n    // Adding fields\n    Object.keys(parameters).map(p_key => {\n\n      if (p_key !== 'extras') {\n\n        const parameter = parameters[p_key]\n        if (parameter.istuple) {\n          fields.tuple.push(\n            <div style={{paddingTop:15}}><h5 style={{margin:0}}>{p_key}</h5></div>\n          )\n          parameter.value.map((value, idx) => {\n            fields.tuple.push(\n              <TextFieldContainer\n                label={p_key + ' ' + idx}\n                value={value}\n                type='number'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  var new_value = parameter.value;\n                  new_value[idx] = val;\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    new_value\n                  )\n                }}/>\n            )\n          })\n        } else {\n\n          switch(parameter.type) {\n            case 'int':\n              fields.int.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'float':\n              fields.float.push(\n                <TextFieldContainer\n                  label={p_key}\n                  value={parameter.value}\n                  type='number'\n                  variant='outlined'\n                  margin='dense'\n                  style={{\n                    width: 150,\n                    paddingRight: 5\n                  }}\n                  onChange={val => {\n                    fieldChanger(\n                      props.refresh,\n                      props.updateFlowpoints,\n                      p_key,\n                      val\n                    )\n                  }}/>\n              )\n              break;\n            \n            case 'string':\n            fields.string.push(\n              <TextFieldContainer\n                label={p_key}\n                value={parameter.value}\n                type='text'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    val\n                  )\n                }}/>\n            )\n            break;\n            \n            case 'bool':\n              if (p_key === 'batch_first') {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={props.state.environment.batch_first}\n                    onChange={val => {}}/>\n                )\n              } else {\n                fields.bool.push(\n                  <SwitchContainer\n                    label={p_key}\n                    value={parameter.value}\n                    onChange={val => {\n                      fieldChanger(\n                        props.refresh,\n                        props.updateFlowpoints,\n                        p_key,\n                        val\n                      )\n                    }}/>\n                )\n              }\n            break;\n          \n          case null:\n          fields.unknown.push(\n            <TextFieldContainer\n              label={p_key}\n              value={parameter.value}\n              type='text'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n            \n          case 'select':\n          fields.select.push(\n            <SelectContainer\n              label={p_key}\n              value={parameter.value}\n              options={parameter.options}\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n\n          }\n\n        }\n\n      }\n\n    })\n  } else {\n    var parameters = point.content;\n\n    // Adding n_dims field\n    fields.int.push(\n      <TextFieldContainer\n        label='n_dimensions'\n        value={parameters.n_dims}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n\n          val = val === '' ? '' : Math.max(Math.min(Math.round(val), Infinity), 1)\n\n          // Making sure dims got the correct number of parameters\n          var dims = {};\n          Array.from(Array(val).keys()).map(idx => {\n            if (idx in parameters.dimensions) {\n              dims[idx] = parameters.dimensions[idx];\n            } else {\n              dims[idx] = 1;\n            }\n          })\n\n          // Changing parameters\n          var state = props.refresh()\n          var flowpoints = state.flowpoints;\n          const selected = state.settings.selected;\n          flowpoints[selected].content.n_dims = val;\n          flowpoints[selected].content.dimensions = dims;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n    )\n\n\n    // Adding dimensions field\n    fields.tuple.push(\n      <div style={{paddingTop:15}}><h5 style={{margin:0}}>Dimensions</h5></div>\n    )\n    Object.keys(parameters.dimensions).map((p_key, idx) => {\n      fields.tuple.push(\n        <TextFieldContainer\n          label={'dimension ' + p_key}\n          value={parameters.dimensions[p_key]}\n          type='number'\n          variant='outlined'\n          margin='dense'\n          style={{\n            width: 150,\n            paddingRight: 5\n          }}\n          onChange={val => {\n            var state = props.refresh();\n            var flowpoints = state.flowpoints;\n            state.flowpoints[state.settings.selected].content.dimensions[p_key] = val;\n            props.updateFlowpoints(flowpoints)\n          }}/>\n      )\n    })\n  }\n\n\n  if ((fields.int.length + fields.float.length + fields.select.length + fields.tuple.length + fields.bool.length ) > 0) {\n    return (\n      <div>\n  \n        <h3 style={{marginTop:30}}>Parameters</h3>\n  \n        <div>{ fields.int }</div>\n        <div>{ fields.float }</div>\n        <div>{ fields.select }</div>\n        <div>{ fields.tuple }</div>\n        <div>{ fields.string }</div>\n        <div style={{paddingTop:10, marginLeft:-5}}>{ fields.bool }</div>\n        {\n          fields.unknown.length > 0 ? <div>\n            <h5 style={{paddingTop:5, paddingBottom:0}}>Unknown datatypes. Put your own code here.</h5>\n            { fields.unknown }\n          </div> : null\n        }\n  \n      </div>\n    )\n  }\n\n  return null\n\n}\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\">\n      <IconButton\n        aria-label={props.tooltip}\n        style={props.style}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </IconButton>\n    </Tooltip>\n  )\n}\n\n/*\n<SelectContainerTooltips\n        label='Layer type'\n        value={point.base_ref}\n        options={environment.availableLayers}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var state = props.refresh();\n          var settings = state.settings;\n          var flowpoints = state.flowpoints;\n\n          // Changing flowpoint layer type\n          var point = flowpoints[settings.selected];\n          point.content = props.getEmptyFlowpointContent(val)\n          point.base_ref = val;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n*/\n\n\nconst SettingsSection = props => {\n  var settings = props.state.settings;\n  var flowpoints = props.state.flowpoints;\n  var environment = props.state.environment;\n  const point = flowpoints[settings.selected];\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Flowpoint settings</h3>\n\n        <Autosuggest\n          value={point.base_ref}\n          options={environment.availableLayers}\n          onChange={val => {\n\n            // Loading from state\n            var state = props.refresh();\n            var settings = state.settings;\n            var flowpoints = state.flowpoints;\n  \n            // Changing flowpoint layer type\n            var point = flowpoints[settings.selected];\n            point.content = props.getEmptyFlowpointContent(val)\n            point.base_ref = val;\n  \n            // Updating state\n            props.updateFlowpoints(flowpoints)\n  \n          }}/>\n\n\n        <div style={{paddingTop:15}}>\n\n          <TextFieldContainer\n            label='Layer name'\n            value={point.name}\n            style={{width:'80%'}}\n            onChange={val => {\n\n              // Loading from state\n              var state = props.refresh();\n              var flowpoints = state.flowpoints;\n              var settings = state.settings;\n\n              // Changing layer name\n              flowpoints[settings.selected].name = val;\n\n              // Updating state\n              props.updateFlowpoints(flowpoints)\n\n            }}/>\n\n            <ButtonContainer\n              tooltip='Delete flowpoint'\n              style={{\n                marginLeft: 15,\n                marginTop: 5\n              }}\n              onClick={props.deleteSelected}>\n              <DeleteIcon/>\n            </ButtonContainer>\n\n        </div>\n\n\n        {\n          point.base_ref !== 'Input' ? <div style={{paddingTop:10, marginLeft:-10}}>\n              <SwitchContainer\n                label='Use as output'\n                value={point.is_output}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].is_output = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n                }}/>\n              <SwitchContainer\n                label='Concatenate inputs'\n                value={point.concat_inputs}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].concat_inputs = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n              }}/>\n            </div> : null\n        }\n\n        {\n          point.concat_inputs ? <div style={{paddingTop:15}}>\n            <TextFieldContainer\n              label='Concat dim'\n              value={point.concat_dim}\n              type='number'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                var flowpoints = props.refresh().flowpoints;\n                flowpoints[settings.selected].concat_dim = val;\n                props.updateFlowpoints(flowpoints)\n              }}/>\n          </div> : null\n        }\n\n    </div>\n  )\n}\n\n\n\nexport const FlowpointTab = props => {\n  var settings = props.state.settings;\n\n  // Nothing selected? Returning msg to select something\n  if (settings.selected === null) {\n    return (\n      <div style={{display:'table', width:'100%', height:'50px'}}>\n        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n          Select a flowpoint to display it's settings.\n        </div>\n      </div>\n    )\n  }\n\n  // Layer type doesnt exist in current library?\n  var show_param_section = true;\n  if (!(props.state.environment.library in props.state.flowpoints[props.state.settings.selected].content) && props.state.flowpoints[props.state.settings.selected].base_ref !== 'Input') {\n    show_param_section = false;\n  }\n\n  // Paramaters and settings of selected\n  var flowpoints = props.state.flowpoints;\n  const point = flowpoints[settings.selected];\n  return (\n    <div style={{padding:15}}>\n      \n      <SettingsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}\n        getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n        deleteSelected={props.deleteSelected}/>\n      \n      {\n        show_param_section ? <ParametersSection\n          state={props.state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}/> : <div style={{display:'table', width:'100%', height:'50px', paddingTop:20}}>\n            <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n              Layer type is not available in your current library.\n            </div>\n          </div>\n      }\n\n      <TransformsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}/>\n\n    </div>\n  )\n\n}","import React, { Component } from 'react';\n\n// Importing local tools\nimport { MiscTab } from './MiscTab.js';\nimport { CodeTab } from './CodeTab.js';\nimport { FlowpointTab } from './FlowpointTab.js';\n\n\n// Styles\nimport './SidebarContents.css';\n\nexport const SidebarContents = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <div\n      class='sidebarContents'\n      style={{\n        backgroundColor: (visual.darkTheme ? '#1b1918' : null)\n      }}>\n\n      {\n        settings.tab === 'Misc' ? <MiscTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          updateAvailableLayers={props.updateAvailableLayers}\n          diagramRef={props.diagramRef}\n          prepOutputShapes={props.prepOutputShapes}/> : null\n      }\n      {\n        settings.tab === 'Code' ? <CodeTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}/> : null\n      }\n      {\n        settings.tab === 'Flowpoint' ? <FlowpointTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n          deleteSelected={props.deleteSelected}/> : null\n      }\n\n    </div>\n  )\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\n// Styling\nconst styles = theme => ({\n  root: {\n    flexGrow: 0,\n    overflow:'scroll',\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #1890ff',\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: 50,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing.unit * 0,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$tabSelected': {\n      color: '#1890ff',\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 0,\n  },\n});\n\n\n// Main class\nclass TabContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: props.tab !== undefined ? props.tabs.indexOf(props.tab) : 0\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    const width = Math.ceil(this.props.width/this.props.tabs.length) + 'px'\n\n    return (\n      <div className={classes.root} style={{overflow:'hidden'}}>\n        <Tabs\n          value={value}\n          onChange={(e, value) => {\n            this.setState({ value });\n            if (this.props.onSelectTab) this.props.onSelectTab(this.props.tabs[value]);\n          }}\n          textColor=\"primary\"\n          classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\n          scrollButtons={false}>\n          {\n            this.props.tabs.map(value => {\n              return (\n                <Tab\n                  disableRipple\n                  classes={{ root: classes.tabRoot, selected: classes.tabSelected }}\n                  label={value}\n                  style={{width: width}}\n                />\n              )\n            })\n          }\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n// Setting proptypes\nTabContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Exporting\nexport default withStyles(styles)(TabContainer);\n","import React, { Component } from 'react';\n\n// Styles\nimport './Sidebar.css';\n\n// Material\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\n// Local tools\nimport { SidebarHead } from './SidebarHead.js';\nimport { SidebarContents } from './SidebarContents.js';\nimport TabContainer from './TabContainer.js';\n\n\n// Themes\nconst darkMuiTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: { useNextVariants: true }\n});\n\nconst lightMuiTheme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: { useNextVariants: true }\n});\n\n\n// Sidebar\nexport const Sidebar = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <MuiThemeProvider theme={visual.darkTheme ? darkMuiTheme : lightMuiTheme}>\n\n      <Drawer variant='persistent' anchor='left' open={visual.drawerOpen}>\n        <div\n          class='fullSidebar'\n          style={{\n            maxWidth: visual.drawerWidth,\n            color: (visual.darkTheme ? 'white' : 'black'),\n            width: visual.drawerWidth\n          }}>\n\n          <SidebarHead/>\n\n          <div>\n            <TabContainer\n              tabs={['Misc', 'Code', 'Flowpoint']}\n              tab={settings.tab}\n              width={360}\n              onSelectTab={tab => {\n\n                // Loading state\n                var state = props.refresh();\n                var settings = state.settings;\n                var visual = state.visual;\n\n                // Changing tab\n                settings.tab = tab;\n\n                // Wider drawer if displaying code\n                if (tab === 'Code') {\n                  visual.drawerWidth = 600;\n                } else {\n                  visual.drawerWidth = 360;\n                }\n\n                // Updating state\n                props.updateSettings(settings);\n                props.updateVisual(visual);\n\n              }}/>\n          </div>\n          \n          <SidebarContents\n            state={state}\n            refresh={props.refresh}\n            updateFlowpoints={props.updateFlowpoints}\n            updateEnvironment={props.updateEnvironment}\n            updateVisual={props.updateVisual}\n            updateSettings={props.updateSettings}\n            notification={props.notification}\n            getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n            deleteSelected={props.deleteSelected}\n            updateAvailableLayers={props.updateAvailableLayers}\n            diagramRef={props.diagramRef}\n            prepOutputShapes={props.prepOutputShapes}/>\n\n        </div>\n      </Drawer>\n\n    </MuiThemeProvider>\n  )\n}","import React, { Component } from 'react';\nimport { Fab, Tooltip } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LinkIcon from '@material-ui/icons/Link';\nimport HelpIcon from '@material-ui/icons/Help';\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\" disableTriggerFocus disableFocusListener>\n      <Fab\n        style={{\n          background: props.color,\n          color: '#ffffff',\n          zIndex: 6,\n          boxShadow: 'none'\n        }}\n        aria-label={props.tooltip}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </Fab>\n    </Tooltip>\n  )\n}\n\n\nexport const MainButtons = props => {\n  var visual = props.state.visual;\n  return (\n    <div\n      style={{\n        bottom:'5px',\n        left: visual.drawerWidth * visual.drawerOpen + 5 + 'px',\n        position: 'fixed',\n        transition: 'left 0.4s ease-out'\n      }}>\n      <div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#00b0ff'\n            tooltip='Add flowpoint'\n            onClick={props.addFlowpoint}>\n            <AddIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#2979ff'\n            tooltip='Copy code to clip-board'\n            onClick={props.copyCode}>\n            <FileCopyIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#3d5afe'\n            tooltip='Share link to current model'\n            onClick={props.createLink}>\n            <LinkIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#651fff'\n            tooltip='Help'\n            onClick={props.showHideHelp}>\n            <HelpIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div>\n          <ButtonContainer\n            color='#b0bec5'\n            tooltip='Show/hide sidebar'\n            onClick={props.showHide}>\n            <MenuIcon/>\n          </ButtonContainer>\n        </div>\n\n      </div>\n    </div>\n  )\n}","export function getPointName(flowpoints, key) {\n  let p = flowpoints[key];\n  return (p.name === '' ? ('p_' + key) : p.name).replace(/ /g, '_')\n}\n\n\nexport function dent(indent, n) {\n  var msg = ''\n  Array.from(Array(n).keys()).map(idx => msg += indent)\n  return msg\n}\n\n\nexport function FormatInitParams(parameters, indentation, indent, padding) {\n  if (padding === undefined) padding = true\n  // Getting longest parameter name\n  var max_l = 0;\n  Object.keys(parameters).map(p_key => {\n    if (parameters[p_key].value !== 'None') max_l = Math.max(p_key.length, max_l)\n  })\n  var msg = ''\n  if (padding) msg += '('\n  Object.keys(parameters).map(p_key => {\n    let param = parameters[p_key];\n\n    if (param.value !== 'None') {\n      // Adding argument\n      msg += '\\n' + dent(indent, indentation + 1) + p_key\n\n      // Aligning with other arguments\n      for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n      msg += ' = '\n\n      // Adding argument values\n      if (param.istuple) {\n        // Tuples are put in between parantheses\n        msg += '(';\n        param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n        msg = msg.substring(0, msg.length - 1) + ')';\n      } else if (param.type === 'select') {\n        msg += \"'\" + param.value + \"'\";\n      } else if (param.type === 'bool') {\n        msg += (param.value === true ? 'True' : 'False')\n      } else if (param.type === 'string') {\n        msg += '\"' + param.value + '\"'\n      } else {\n        msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n      }\n      msg += ','\n    }\n  })\n  if (padding) {\n    if (max_l > 0) {\n      msg += '\\n' + dent(indent, 1)\n    }\n    msg += ')'\n  }\n  return msg\n}\n\n\nexport function FormatParamInputs(flowpoints, input_keys) {\n  var msg = ''\n  input_keys.map(key => msg += getPointName(flowpoints, key) + ', ')\n  if (input_keys.length > 0) msg = msg.substring(0, msg.length - 2)\n  return msg\n}\n\n\nfunction getDummyLibrary(flowpoints) {\n  var dummies = {}\n  Object.keys(flowpoints).map(key => {\n    var dummy = {\n      base_ref: flowpoints[key].base_ref,\n      name: flowpoints[key].name,\n      inputs: [],\n      outputs: [],\n      ordered: false,\n      ready: false,\n      downStreamTested: false,\n      is_recurrent: false\n    }\n    Object.keys(flowpoints[key].outputs).map(out_key => {\n      dummy.outputs.push(out_key)\n    })\n    if (flowpoints[key].base_ref === 'Input') {\n      dummy.ready = true;\n    }\n    dummies[key] = dummy;\n  })\n\n  // Adding corresponding inputs\n  Object.keys(dummies).map(key => {\n    dummies[key].outputs.map(out_key => {\n      dummies[out_key].inputs.push(key)\n    })\n  })\n\n  // Returning\n  return dummies\n\n}\n\n\nfunction getInputs(flowpoints) {\n  var inps = [];\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Input') inps.push(key)\n  })\n  return inps\n}\n\n\nfunction recIsDownStream(dummies, target_key, test_key) {\n\n  // Returning if matching\n  if (target_key === test_key) return true;\n\n  // Continue only if havent been visited before\n  var found_downstream = false\n  if (!dummies[test_key].downStreamTested) {\n\n    // Marking self as visited on this run\n    dummies[test_key].downStreamTested = true;\n\n    // Looking deeper down\n    dummies[test_key].outputs.map(out_key => {\n      if (!found_downstream) {\n        found_downstream = recIsDownStream(dummies, target_key, out_key)\n      }\n    })\n  }\n\n  // Returning\n  return found_downstream\n\n}\n\n\nfunction isDownStream(dummies, target_key, test_key) {\n\n  // Resetting downstream helpers\n  Object.keys(dummies).map(r_key => dummies[r_key].downStreamTested = false)\n\n  // Running checks\n  return recIsDownStream(dummies, target_key, test_key)\n\n}\n\n\nfunction isReady(dummies, key) {\n  var ready = true;\n  dummies[key].inputs.map(test_key => {\n    if ((!dummies[test_key].ready && !isDownStream(dummies, test_key, key))) {\n      ready = false;\n    }\n  })\n  return ready\n}\n\n\nfunction recGetOrder(order, dummies, key) {\n\n  // Helper\n  var dummy = dummies[key];\n\n  // Checking dummy, going deeper\n  if (dummy) {\n\n    // Visited before? -> Return\n    if (dummy.ordered) return order\n\n    // Dummy ready?\n    if (isReady(dummies, key)) {\n\n      // Making sure dummy is ready\n      dummy.ready = true;\n\n      // Making sure dummy is added to order\n      dummy.ordered = true;\n      if (!order.includes(key)) order.push(key)\n\n      // Going deeper\n      dummy.outputs.sort().map(out_key => order = recGetOrder(order, dummies, out_key))\n\n    }\n\n  }\n\n  // Returning\n  return order\n\n}\n\n\nfunction getLastUser(order, dummies, target_key) {\n  var max_index = -1;\n  order.map((test_key, idx) => {\n    if (dummies[test_key].inputs.includes(target_key)) max_index = Math.max(max_index, idx)\n  })\n  return order[max_index]\n}\n\n\nfunction getStateNames(order, dummies) {\n  var states = {};\n\n  // Adding all states\n  order.map((key, idx) => {\n    const point = dummies[key];\n\n    // Adding to states\n    if (!(key in states)) {\n      states[key] = getPointName(dummies, key) + (point.base_ref === 'Input' ? '' : '_state');\n    }\n\n    // Setting state of last user\n    const last_user = getLastUser(order, dummies, key);\n    if (last_user !== null) {\n      states[last_user] = states[key];\n    }\n\n  })\n\n  // Setting state of last node to default\n  states[order[order.length - 1]] = 'self.state'\n\n  // Returning\n  return states\n\n}\n\n\nexport function FlowOrder(state) {\n\n  // Init helpers\n  var inps = getInputs(state.flowpoints);\n  var dummies = getDummyLibrary(state.flowpoints);\n  var order = [];\n  var init_states = [];\n  var outs = [];\n\n  // Adding input flowpoints to beginning of order\n  inps.map(key => order.push(key));\n\n  // Recursively mapping tree\n  inps.map(key => order = recGetOrder(order, dummies, key));\n\n  // Flagging flowpoints with recurrent connections and getting init states\n  order.map((key, idx) => {\n    var is_recurrent = false;\n    dummies[key].outputs.map(out_key => {\n      if (idx > order.indexOf(out_key) && !is_recurrent) is_recurrent = true;\n    })\n    if (is_recurrent || state.flowpoints[key].is_output) {\n      dummies[key].is_recurrent = true;\n      init_states.push(key)\n    }\n  })\n\n  // Outputs\n  order.map(key => {\n    if (state.flowpoints[key].is_output) outs.push(key)\n  })\n  if (outs.length === 0) outs = [order[order.length - 1]]\n\n  // State names\n  var states = getStateNames(order, dummies);\n\n  // Returning\n  return {order, inps, states, dummies, init_states, outs}\n\n}","import { getPointName, FormatParamInputs, dent } from \"./FlowOrder\";\n\n\nfunction getStateName(key, flowpoints, states, init_states) {\n  if (init_states.includes(key)) {\n    return 'self.' + getPointName(flowpoints, key) + '_state'\n  }\n  return states[key]\n}\n\n\nfunction getOutputTargetName(key, flowpoints) {\n  return getPointName(flowpoints, key) + '_target'\n}\n\n\nfunction PyTorchImports(indent) {\n  var msg = '# Importing PyTorch tools'\n  msg += '\\nimport torch'\n  msg += '\\nfrom torch import nn, optim, cuda'\n  msg += '\\n\\n\\n# Importing other libraries'\n  msg += '\\nimport numpy as np'\n  msg += '\\nimport matplotlib.pyplot as plt'\n  msg += '\\nimport time'\n  return msg\n}\n\n\nfunction Flatten(indent) {\n  var msg = '# Helper class for flattening'\n  msg += '\\nclass Flatten(nn.Module):'\n  msg += '\\n' + dent(indent, 1) + 'def __init__(self):'\n  msg += '\\n' + dent(indent, 2) + 'super(Flatten, self).__init__()'\n  msg += '\\n' + dent(indent, 1) + 'def forward(self, x):'\n  msg += '\\n' + dent(indent, 2) + 'return x.view(x.shape[0], -1)'\n  return msg\n}\n\n\n\nfunction Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, modelID) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n  \n  // Basics\n  var msg = '# Model'\n  msg += '\\nclass NeuralNet(nn.Module):'\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def __init__(self, optimizer=optim.SGD, alpha=0.001, criterion=nn.CrossEntropyLoss(), use_cuda=None):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Basics'\n  msg += '\\n' + dent(indent, 2) + 'super(NeuralNet, self).__init__()'\n  msg += '\\n' + dent(indent, 2) + 'self.name        = ' + (modelID ? (\"'\" + modelID + \"'\") : \"'model'\")\n  msg += '\\n' + dent(indent, 2) + 'self.batch_first = ' + (environment.batch_first ? 'True' : 'False')\n  msg += '\\n' + dent(indent, 2) + 'self.__call__    = self.predict'\n  msg += '\\n\\n' + dent(indent, 2) + '# Settings'\n  msg += '\\n' + dent(indent, 2) + 'self.optim_type = optimizer'\n  msg += '\\n' + dent(indent, 2) + 'self.optimizer  = None'\n  msg += '\\n' + dent(indent, 2) + 'self.alpha      = alpha'\n  msg += '\\n' + dent(indent, 2) + 'self.criterion  = criterion'\n  msg += '\\n\\n' + dent(indent, 2) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 2) + 'self.use_cuda = use_cuda if (use_cuda != None and cuda.is_available()) else cuda.is_available()'\n  msg += '\\n\\n' + dent(indent, 2) + '# Current loss and loss history'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss = 0'\n  msg += '\\n' + dent(indent, 2) + 'self.valid_loss = 0'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss_hist = []'\n  msg += '\\n' + dent(indent, 2) + 'self.valid_loss_hist = []'\n\n  // Prep aligning recurrent states\n  var max_l = 0;\n  order.map(key => {\n    let dummy = dummies[key];\n    if (dummy.is_recurrent) {\n      max_l = Math.max(max_l, getStateName(key, flowpoints, states, init_states).length);\n    }\n  })\n\n  // Initializing recurrent states\n  if (max_l > 0) {\n    var state_msg = dent(indent, 2) + '# Initializing states with placeholder tensors';\n    order.map(key => {\n      let dummy = dummies[key];\n      if (dummy.is_recurrent) {\n\n        // Init state\n        state_msg += '\\n' + dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n\n        // Aligning equals sign\n        for (var i = 0; i < max_l - getStateName(key, flowpoints, states, init_states).length; i++) state_msg += ' '\n        state_msg += ' = torch.tensor([0], dtype=torch.float64)'\n\n      }\n    })\n    msg += '\\n\\n' + state_msg\n  }\n\n  // Initializing all layers\n  msg += '\\n\\n' + dent(indent, 2) + '# Initializing all layers'\n  order.map(key => {\n    let point = flowpoints[key];\n    \n    if (point.base_ref === 'Concatenate') {\n\n    } else if (point.base_ref === 'Input') {\n\n    } else if (point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        let content = point.content[environment.library.toLowerCase()];\n        let parameters = content.parameters\n\n        // Getting longest parameter name\n        var max_l = 0;\n        Object.keys(parameters).map(p_key => {\n          if (p_key !== 'extras') max_l = Math.max(p_key.length, max_l)\n        })\n\n        // Init object\n        msg += '\\n' + dent(indent, 2) + 'self.' + getPointName(flowpoints, key) + ' = ' + (point.base_ref === 'Flatten' ? '' : 'nn.') + content.reference + '(';\n\n        // Adding arguments\n        Object.keys(parameters).map(p_key => {\n\n          if (p_key !== 'extras') {\n\n            let param = parameters[p_key];\n          \n            // Adding argument\n            msg += '\\n' + dent(indent, 3) + p_key\n\n            // Aligning with other arguments\n            for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n            msg += ' = '\n\n            // Adding argument values\n            if (param.istuple) {\n              // Tuples are put in between parantheses\n              msg += '(';\n              param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n              msg = msg.substring(0, msg.length - 1) + ')';\n            } else if (param.type === 'select') {\n              msg += \"'\" + param.value + \"'\";\n            } else if (param.type === 'bool') {\n              if (p_key === 'batch_first') {\n                msg += 'self.batch_first'\n              } else {\n                msg += (param.value === true ? 'True' : 'False')\n              }\n            } else {\n              msg += (param.value === '' ? 'None' : param.value)\n              //msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n            }\n            msg += ','\n\n          }\n\n        })\n        if (max_l > 0) msg += '\\n' + dent(indent, 2)\n        msg += ')'\n      }\n    }\n  })\n\n  // Startup routines\n  msg += '\\n\\n' + dent(indent, 2) + '# Running startup routines'\n  msg += '\\n' + dent(indent, 2) + 'self.startup_routines()'\n  if (got_hidden_states) msg += '\\n' + dent(indent, 2) + 'self.reset_hidden_states()'\n\n  // Returning\n  return msg\n\n}\n\n\nfunction StartupRoutines(indent) {\n  var msg = dent(indent, 1) + 'def startup_routines(self):'\n  msg += '\\n' + dent(indent, 2) + 'self.optimizer = self.optim_type(self.parameters(), lr=self.alpha)'\n  msg += '\\n' + dent(indent, 2) + 'if self.use_cuda:'\n  msg += '\\n' + dent(indent, 3) + 'self.cuda()'\n  return msg\n}\n\n\nfunction ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library) {\n  var msg = dent(indent, 1) + 'def reset_hidden_states(self, sample=None):'\n  msg += '\\n' + dent(indent, 2) + 'if type(sample) == torch.Tensor:'\n  msg += '\\n' + dent(indent, 3) + 'batch_size = sample.shape[0 if self.batch_first else 1]'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        const parameters = flowpoints[key].content[library].parameters;\n        if (parameters.extras.gothidden) {\n          if (parameters['hidden_size'] && parameters['num_layers']) {\n            msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = '\n            const hidden = '\\n' + dent(indent, 4) + 'torch.zeros((' + parameters['num_layers'].value + ', batch_size, ' + parameters['hidden_size'].value + '), device=sample.device)'\n            msg += '(' + hidden + ', ' + hidden + '\\n' + dent(indent, 3) + ')'\n          }\n        }\n      }\n    }\n  })\n  msg += '\\n' + dent(indent, 2) + 'else:'\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          msg += '\\n' + dent(indent, 3) + 'self.' + getPointName(flowpoints, key) + '_hidden = None'\n        }\n      }\n    }\n  })\n  return msg\n}\n\n\nfunction Predict(flowpoints, inps, indent, got_hidden_states) {\n  var msg = dent(indent, 1) + 'def predict(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(flowpoints, inps);\n  msg += formated_inputs + (got_hidden_states ? ', reset_hidden_states=False' : '') + '):'\n\n  // Running preds\n  msg += '\\n\\n' + dent(indent, 2) + '# Switching off autograd'\n  msg += '\\n' + dent(indent, 2) + 'with torch.no_grad():'\n  msg += '\\n\\n' + dent(indent, 3) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 3) + 'if self.use_cuda:'\n  inps.map(key => {\n    const p_name = getPointName(flowpoints, key);\n    msg += '\\n' + dent(indent, 4) + p_name + ' = ' + p_name + '.cuda()'\n  })\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 3) + '# Reset hidden states?'\n    msg += '\\n' + dent(indent, 3) + 'if reset_hidden_states:'\n    msg += '\\n' + dent(indent, 4) + 'self.reset_hidden_states(' + getPointName(flowpoints, inps[0]) + ')'\n  }\n  msg += '\\n\\n' + dent(indent, 3) + '# Running inference'\n  msg += '\\n' + dent(indent, 3) + 'return self.forward(' + formated_inputs + ')'\n\n  // Returning\n  return msg\n}\n\n\nfunction Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library) {\n  var msg = dent(indent, 1) + 'def forward(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  msg += formated_inputs + '):'\n\n  // Forwarding\n  var step_lib = [];\n  var outputs = [];\n  order.map(key => {\n    const point = dummies[key];\n    if (point.base_ref === 'Concatenate') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.cat(['\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n      step_msg = step_msg.substring(0, step_msg.length - 2) + '], dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Concatenate' })\n    } else if (point.base_ref === 'Mean') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.mean('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')'\n      step_lib.push({ msg:step_msg, title:'Mean' })\n    } else if (point.base_ref === 'Maximum') {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n      step_msg += ' = torch.max('\n      point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ')\n      step_msg = step_msg.substring(0, step_msg.length - 3) + ', dim=' + flowpoints[key].content.pytorch.parameters.dim.value + ')[0]'\n      step_lib.push({ msg:step_msg, title:'Max' })\n    } else if (point.base_ref === 'Input') {\n\n    } else {\n      if (flowpoints[key].content[library]) {\n        var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', self.' + getPointName(flowpoints, key) + '_hidden'\n        step_msg += ' = self.' + getPointName(dummies, key) + '(';\n        if (point.inputs.length > 1) {\n          if (flowpoints[key].concat_inputs) {\n            //torch.cat(tensors, dim=0\n            step_msg += 'torch.cat(['\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n            step_msg = step_msg.substring(0, step_msg.length -2 ) + '], dim=' + flowpoints[key].concat_dim + ')'\n          } else {\n            point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ');\n            step_msg = step_msg.substring(0, step_msg.length - 3);\n          }\n        } else {\n          step_msg += getStateName(point.inputs[0], flowpoints, states, init_states)\n        }\n        if (flowpoints[key].content.pytorch.parameters.extras.gothidden) step_msg += ', tuple([_.data for _ in self.' + getPointName(flowpoints, key) + '_hidden]) if self.' + getPointName(flowpoints, key) + '_hidden else None'\n        step_msg += ')'\n        step_lib.push({ msg:step_msg, title:point.base_ref });\n        if (flowpoints[key].contiguous) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states) + '.contiguous()'\n          if (flowpoints[key].reshape_ndims > 0) {\n            reshape_msg += '.view('\n            flowpoints[key].reshape_dims.map(val => {\n              reshape_msg += val + ', '\n            })\n            reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          }\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        } else if (flowpoints[key].reshape_ndims > 0) {\n          var reshape_msg = '';\n          reshape_msg += dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = ' + getStateName(key, flowpoints, states, init_states)\n          reshape_msg += '.view('\n          flowpoints[key].reshape_dims.map(val => {\n            reshape_msg += val + ', '\n          })\n          reshape_msg = reshape_msg.substring(0, reshape_msg.length - 2) + ')'\n          step_lib.push({ msg:reshape_msg, title:'Tensor transforms' });\n        }\n        if (flowpoints[key].is_output) outputs.push(key);\n      }\n    }\n  })\n\n  // Max length\n  var max_l = 0;\n  step_lib.map(step => max_l = Math.max(max_l, step.msg.length > 60 ? 0 : step.msg.length))\n\n  // Adding steps\n  step_lib.map(step => {\n    \n    // Adding step\n    msg += '\\n' + step.msg;\n\n    // Aligning comment with others\n    for (var i = 0; i < max_l - step.msg.length; i++) msg += ' ';\n    msg += ' # ' + step.title;\n  })\n\n  // Adding return\n  if (outputs.length === 0) outputs = [order[order.length-1]];\n  msg += '\\n' + dent(indent, 2) + 'return'\n  outputs.map(key => {\n    msg += ' ' + getStateName(key, flowpoints, states, init_states) + ','\n  })\n  msg = msg.slice(0, -1)\n\n  // Returning\n  return msg\n\n}\n\n\nfunction FitStep(dummies, inps, indent, outs, flowpoints, states, init_states, got_hidden_states, library) {\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  var msg = dent(indent, 1) + 'def fit_step(self, training_loader'\n  if (got_hidden_states) msg += ', reset_hidden_states=False'\n  msg += '):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Preparations for fit step'\n  if (got_hidden_states) {\n    msg += '\\n' + dent(indent, 2) + 'self.train_loss = 0        # Resetting training loss'\n    msg += '\\n' + dent(indent, 2) + 'self.train()               # Switching to autograd'\n  } else {\n    msg += '\\n' + dent(indent, 2) + 'self.train_loss = 0 # Resetting training loss'\n    msg += '\\n' + dent(indent, 2) + 'self.train()        # Switching to autograd'\n  }\n  msg += '\\n\\n' + dent(indent, 2) + '# Looping through data'\n  msg += '\\n' + dent(indent, 2) + 'for idx, (' + formated_inputs + ','\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + ','\n  })\n  msg = msg.slice(0, -1)\n  msg += ') in enumerate(training_loader):'\n  msg += '\\n\\n' + dent(indent, 3) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 3) + 'if self.use_cuda:'\n  inps.map(key => {\n    const p_name = getPointName(dummies, key);\n    msg += '\\n' + dent(indent, 4) + '' + p_name + ' = ' + p_name + '.cuda()'\n  })\n  outs.map(key => {\n    const p_name = getOutputTargetName(key, flowpoints);\n    msg += '\\n' + dent(indent, 4) + '' + p_name + ' = ' + p_name + '.cuda()'\n  })\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 3) + '# Reset hidden states?'\n    msg += '\\n' + dent(indent, 3) + 'if reset_hidden_states or idx == 0:'\n    msg += '\\n' + dent(indent, 4) + 'self.reset_hidden_states(' + getPointName(flowpoints, inps[0]) + ')'\n  }\n  msg += '\\n\\n' + dent(indent, 3) + '# Forward pass'\n  msg += '\\n' + dent(indent, 3) + 'self.forward(' + formated_inputs + ')'\n\n  // Loss\n  msg += '\\n\\n' + dent(indent, 3) + '# Calculating loss'\n  outs.map((key, idx) => {\n    msg += '\\n' + dent(indent, 3) + 'loss ' + (idx === 0 ? '= ' : '+= ')\n    msg += 'self.criterion(' + getStateName(key, flowpoints, states, init_states) + ', '\n    msg += getOutputTargetName(key, flowpoints)\n    msg += ')'\n  })\n  msg += '\\n' + dent(indent, 3) + 'self.train_loss += loss.item() # Adding to epoch loss'\n  \n  // Backward pass and optimization\n  msg += '\\n\\n' + dent(indent, 3) + '# Backward pass and optimization'\n  msg += '\\n' + dent(indent, 3) + 'loss.backward()            # Backward pass'\n  msg += '\\n' + dent(indent, 3) + 'self.optimizer.step()      # Optimizing weights'\n  msg += '\\n' + dent(indent, 3) + 'self.optimizer.zero_grad() # Clearing gradients'\n  msg += '\\n\\n' + dent(indent, 2) + '# Adding loss to history'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss_hist.append(self.train_loss / len(training_loader))'\n\n  // Returning\n  return msg\n\n}\n\n\nfunction ValidationStep(dummies, inps, indent, outs, flowpoints, states, init_states, got_hidden_states, library) {\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  var msg = dent(indent, 1) + 'def validation_step(self, validation_loader'\n  if (got_hidden_states) msg += ', reset_hidden_states=False'\n  msg += '):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Preparations for validation step'\n  msg += '\\n' + dent(indent, 2) + 'self.valid_loss = 0 # Resetting validation loss'\n  msg += '\\n\\n' + dent(indent, 2) + '# Switching off autograd'\n  msg += '\\n' + dent(indent, 2) + 'with torch.no_grad():'\n  msg += '\\n\\n' + dent(indent, 3) + '# Looping through data'\n  msg += '\\n' + dent(indent, 3) + 'for idx, (' + formated_inputs + ','\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + ','\n  })\n  msg = msg.slice(0, -1)\n  msg += ') in enumerate(validation_loader):'\n  msg += '\\n\\n' + dent(indent, 4) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 4) + 'if self.use_cuda:'\n  inps.map(key => {\n    const p_name = getPointName(dummies, key);\n    msg += '\\n' + dent(indent, 5) + p_name + ' = ' + p_name + '.cuda()'\n  })\n  outs.map(key => {\n    const p_name = getOutputTargetName(key, flowpoints);\n    msg += '\\n' + dent(indent, 5) + '' + p_name + ' = ' + p_name + '.cuda()'\n  })\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 4) + '# Reset hidden states?'\n    msg += '\\n' + dent(indent, 4) + 'if reset_hidden_states or idx == 0:'\n    msg += '\\n' + dent(indent, 5) + 'self.reset_hidden_states(' + getPointName(flowpoints, inps[0]) + ')'\n  }\n  msg += '\\n\\n' + dent(indent, 4) + '# Forward pass'\n  msg += '\\n' + dent(indent, 4) + 'self.forward(' + formated_inputs + ')'\n\n  // Loss\n  msg += '\\n\\n' + dent(indent, 4) + '# Calculating loss'\n  outs.map((key, idx) => {\n    msg += '\\n' + dent(indent, 4) + 'loss ' + (idx === 0 ? '= ' : '+= ')\n    msg += 'self.criterion(' + getStateName(key, flowpoints, states, init_states) + ', '\n    msg += getOutputTargetName(key, flowpoints)\n    msg += ')'\n  })\n  msg += '\\n' + dent(indent, 4) + 'self.valid_loss += loss.item() # Adding to epoch loss'\n  msg += '\\n\\n' + dent(indent, 3) + '# Adding loss to history'\n  msg += '\\n' + dent(indent, 3) + 'self.valid_loss_hist.append(self.valid_loss / len(validation_loader))'\n\n  // Returning\n  return msg\n\n}\n\n\nfunction Fit(indent, got_hidden_states) {\n  var msg = dent(indent, 1) + 'def fit(self, training_loader, validation_loader=None, epochs=10, show_progress=True, save_best=False'\n  if (got_hidden_states) msg += ', reset_hidden_states=False'\n  msg += '):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Helpers'\n  msg += '\\n' + dent(indent, 2) + 'best_validation = 1e5'\n  msg += '\\n\\n' + dent(indent, 2) + '# Possibly printing progress'\n  msg += '\\n' + dent(indent, 2) + 'if show_progress:'\n  msg += '\\n' + dent(indent, 3) + 'epoch_l = max(len(str(epochs)), 2)' //HERE\n  msg += '\\n' + dent(indent, 3) + \"msg = '%sEpoch   Training loss' % ''.rjust(2 * epoch_l - 4, ' ')\"\n  msg += '\\n' + dent(indent, 3) + \"msg += ('   Validation loss' if validation_loader else '') + '   Time remaining'\"\n  msg += '\\n' + dent(indent, 3) + 'print(msg)'\n  msg += '\\n' + dent(indent, 3) + 't = time.time()'\n  msg += '\\n\\n' + dent(indent, 2) + '# Looping through epochs'\n  msg += '\\n' + dent(indent, 2) + 'for epoch in range(epochs):'\n  msg += '\\n\\n' + dent(indent, 3) + '# Fit step'\n  msg += '\\n' + dent(indent, 3) + 'self.fit_step(training_loader' + (got_hidden_states ? ', reset_hidden_states=reset_hidden_states' : '') + ')'\n  msg += '\\n\\n' + dent(indent, 3) + '# Validation step'\n  msg += '\\n' + dent(indent, 3) + 'if validation_loader:'\n  msg += '\\n' + dent(indent, 4) + 'self.validation_step(validation_loader' + (got_hidden_states ? ', reset_hidden_states=reset_hidden_states' : '') + ')'\n  msg += '\\n\\n' + dent(indent, 3) + '# Possibly printing progress'\n  msg += '\\n' + dent(indent, 3) + 'if show_progress:'\n  msg += '\\n' + dent(indent, 4) + 'eta_s = ((time.time() - t) / (epoch + 1)) * (epochs - epoch - 1)'\n  msg += '\\n' + dent(indent, 4) + \"msg = '%s/%s' % (str(epoch + 1).rjust(epoch_l, ' '), str(epochs).ljust(epoch_l, ' '))\"\n  msg += '\\n' + dent(indent, 4) + \"msg += ' | %s' % str(round(self.train_loss_hist[-1], 9)).ljust(13, ' ')\"\n  msg += '\\n' + dent(indent, 4) + \"if validation_loader: msg += ' | %s' % str(round(self.valid_loss_hist[-1], 9)).ljust(15, ' ')\"\n  msg += '\\n' + dent(indent, 4) + \"msg += ' | '\"\n  msg += '\\n' + dent(indent, 4) + \"msg += '%sh ' % round(eta_s / 3600) if eta_s > 3600 else ''\"\n  msg += '\\n' + dent(indent, 4) + \"msg += '%sm ' % round(eta_s % 3600 / 60) if eta_s > 60 else ''\"\n  msg += '\\n' + dent(indent, 4) + \"msg += '%ss ' % round(eta_s % 60)\"\n  msg += '\\n' + dent(indent, 4) + 'print(msg)'\n  msg += '\\n\\n' + dent(indent, 3) + '# Possibly saving model'\n  msg += '\\n' + dent(indent, 3) + 'if save_best:'\n  msg += '\\n' + dent(indent, 4) + 'if self.valid_loss_hist[-1] < best_validation:'\n  msg += '\\n' + dent(indent, 5) + \"self.save('best_validation')\"\n  msg += '\\n' + dent(indent, 5) + 'best_validation = self.valid_loss_hist[-1]'\n  if (got_hidden_states) {\n    msg += '\\n\\n' + dent(indent, 2) + '# Resetting hidden states'\n    msg += '\\n' + dent(indent, 2) + 'self.reset_hidden_states()'\n  }\n  msg += '\\n\\n' + dent(indent, 2) + '# Switching to eval'\n  msg += '\\n' + dent(indent, 2) + 'self.eval()'\n\n  // Returning\n  return msg\n}\n\n\nfunction PlotHist(indent) {\n  var msg = dent(indent, 1) + 'def plot_hist(self):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Adding plots'\n  msg += '\\n' + dent(indent, 2) + \"plt.plot(self.train_loss_hist, color='blue', label='Training loss')\"\n  msg += '\\n' + dent(indent, 2) + \"plt.plot(self.valid_loss_hist, color='springgreen', label='Validation loss')\"\n  msg += '\\n\\n' + dent(indent, 2) + '# Axis labels'\n  msg += '\\n' + dent(indent, 2) + \"plt.xlabel('Epoch')\"\n  msg += '\\n' + dent(indent, 2) + \"plt.ylabel('Loss')\"\n  msg += '\\n' + dent(indent, 2) + \"plt.legend(loc='upper right')\"\n  msg += '\\n\\n' + dent(indent, 2) + '# Displaying plot'\n  msg += '\\n' + dent(indent, 2) + 'plt.show()'\n\n  // Returning\n  return msg\n}\n\n\nfunction SaveLoad(flowpoints, dummies, order, indent, library) {\n  var msg = dent(indent, 1) + \"def save(self, name=None):\"\n  msg += '\\n' + dent(indent, 2) + \"if not name: name = self.name + '_%sepochs' % len(self.train_loss_hist)\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"torch.save({\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 3) + \"'\" + pointcode + \"': self.\" + pointcode + ','\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 3) + \"'name':            self.name,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'train_loss':      self.train_loss,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'valid_loss':      self.valid_loss,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'train_loss_hist': self.train_loss_hist,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'valid_loss_hist': self.valid_loss_hist,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'optim_type':      self.optim_type,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'alpha':           self.alpha,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'criterion':       self.criterion,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'use_cuda':        self.use_cuda\"\n  msg += \"\\n\" + dent(indent, 2) + \"}, name)\"\n  msg += \"\\n\\n\\n\" + dent(indent, 1) + \"@staticmethod\"\n  msg += \"\\n\" + dent(indent, 1) + \"def load(name='model'):\"\n  msg += \"\\n\" + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"checkpoint = torch.load(name)\"\n  msg += \"\\n\" + dent(indent, 2) + \"model = NeuralNet(\"\n  msg += \"\\n\" + dent(indent, 3) + \"optimizer = checkpoint['optim_type'],\"\n  msg += \"\\n\" + dent(indent, 3) + \"alpha     = checkpoint['alpha'],\"\n  msg += \"\\n\" + dent(indent, 3) + \"criterion = checkpoint['criterion'],\"\n  msg += \"\\n\" + dent(indent, 3) + \"use_cuda  = checkpoint['use_cuda']\"\n  msg += \"\\n\" + dent(indent, 2) + \")\"\n  order.map(key => {\n    const point = dummies[key]\n    if (point.base_ref !== 'Input' && point.base_ref !== 'Concatenate' && point.base_ref !== 'Mean' && point.base_ref !== 'Maximum') {\n      if (flowpoints[key].content[library]) {\n        const pointcode = getPointName(dummies, key)\n        msg += \"\\n\" + dent(indent, 2) + \"model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\n      }\n    }\n  })\n  msg += \"\\n\" + dent(indent, 2) + \"model.name = checkpoint['name']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.train_loss = checkpoint['train_loss']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.valid_loss = checkpoint['valid_loss']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.train_loss_hist = checkpoint['train_loss_hist']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.valid_loss_hist = checkpoint['valid_loss_hist']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.startup_routines()\"\n  msg += \"\\n\" + dent(indent, 2) + \"return model\"\n\n  // Returning\n  return msg\n}\n\n\nfunction InitModel(indent) {\n  var msg = '# Initialize model?'\n  msg += \"\\nif __name__ == '__main__':\"\n  msg += '\\n' + dent(indent, 1) + 'model = NeuralNet('\n  msg += '\\n' + dent(indent, 2) + 'optimizer = optim.Adam,'\n  msg += '\\n' + dent(indent, 2) + 'alpha     = 0.001,'\n  msg += '\\n' + dent(indent, 2) + 'criterion = nn.CrossEntropyLoss(),'\n  msg += '\\n' + dent(indent, 2) + 'use_cuda  = True'\n  msg += '\\n' + dent(indent, 1) + ')'\n  return msg\n}\n\n\nexport function PyTorchParser(state, order, inps, states, dummies, indent, init_states, outs) {\n\n  var flowpoints = state.flowpoints;\n  const library = state.environment.library.toLowerCase()\n\n  // Imports\n  var msg = PyTorchImports(indent)\n\n  // Add flattening helper class if needed\n  var need_flattening = false;\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Flatten') need_flattening = true;\n  })\n  if (need_flattening) msg += '\\n\\n\\n' + Flatten(indent)\n\n  // Need hidden states?\n  var got_hidden_states = false\n  order.map(key => {\n    if (flowpoints[key].base_ref !== 'Input') {\n      if (flowpoints[key].content[library]) {\n        if (flowpoints[key].content[library].parameters.extras.gothidden) {\n          got_hidden_states = true\n        }\n      }\n    }\n  })\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, indent, dummies, states, init_states, got_hidden_states, library, state.settings.modelID);\n  msg += '\\n\\n\\n' + StartupRoutines(indent);\n  if (got_hidden_states) msg += '\\n\\n\\n' + ResetHidden(flowpoints, order, inps, states, dummies, indent, init_states, library);\n  msg += '\\n\\n\\n' + Predict(flowpoints, inps, indent, got_hidden_states);\n  msg += '\\n\\n\\n' + Forward(flowpoints, order, inps, states, dummies, indent, init_states, got_hidden_states, library);\n  msg += '\\n\\n\\n' + FitStep(dummies, inps, indent, outs, flowpoints, states, init_states, got_hidden_states, library);\n  msg += '\\n\\n\\n' + ValidationStep(dummies, inps, indent, outs, flowpoints, states, init_states, got_hidden_states, library);\n  msg += '\\n\\n\\n' + Fit(indent, got_hidden_states);\n  msg += '\\n\\n\\n' + PlotHist(indent);\n  msg += '\\n\\n\\n' + SaveLoad(flowpoints, dummies, order, indent, library);\n  msg += '\\n\\n\\n' + InitModel(indent)\n\n  // Returning\n  return msg\n}","import { FlowOrder } from \"./FlowOrder\";\nimport { PyTorchParser } from \"./PytorchParser\";\nimport { TensorFlowParser } from \"./TensorflowParser\";\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nconst code_parsers = {\n  pytorch: PyTorchParser,\n  tensorflow: TensorFlowParser\n}\n\n\nfunction DefaultMessage(state) {\n  var msg = \"\";\n  msg += \"'''\\n\";\n  msg += \"Created using flowpoints.io\\n\\n\";\n  if (state.settings.modelID) {\n    msg += \"Link to model:\\n\";\n    msg += \"https://mariusbrataas.github.io/flowpoints_ml/?p=\" + state.settings.modelID + \"\\n\\n\";\n  }\n  msg += \"LICENSE:\\n\"\n  msg += \"https://github.com/mariusbrataas/flowpoints_ml/blob/master/LICENSE\"\n  if (state.environment.notes !== '') {\n    var notes = state.environment.notes;\n    notes = ReplaceAll(notes, \"'\", '')\n    msg += '\\n\\nNOTES:\\n' + notes\n  }\n  msg += \"\\n'''\\n\\n\\n\"\n  return msg\n}\n\n\nexport function Parser(state) {\n\n  if (Object.keys(state.flowpoints).length > 0) {\n\n    // Order and inputs\n    const tmp = FlowOrder(state)\n    const flow_order = tmp.order;\n    const inps = tmp.inps;\n    const states = tmp.states;\n    const init_states = tmp.init_states;\n    const outs = tmp.outs;\n    var dummies = tmp.dummies;\n\n    // Init msg with default text\n    var msg = DefaultMessage(state)\n\n    // Parsing\n    const lib = state.environment.library.toLowerCase()\n    if (lib in code_parsers) {\n      msg += code_parsers[lib](state, flow_order, inps, states, dummies, '    ', init_states, outs)\n    }\n\n    // Returning\n    return {msg, order:flow_order, dummies}\n\n  }\n\n  return {msg:'', order:[], dummies:{}}\n\n}","import { getPointName, FormatParamInputs, dent, FormatInitParams } from \"./FlowOrder\";\n\n\nfunction TensorFlowImports() {\n  var msg = '# Importing TensorFlow tools'\n  msg += '\\nimport tensorflow as tf'\n  return msg\n}\n\n\nfunction Constructor(state, order, inps, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  // Basics\n  var msg = '# Model'\n  msg += \"\\ndef NeuralNet(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']):\"\n\n  // Initializing inputs\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing inputs'\n  order.map(key => {\n    let point = flowpoints[key]\n    let current_point_name = getPointName(flowpoints, key);\n\n    if (inps.includes(key)) {\n      let content = point.content;\n      msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Input(('\n      Object.keys(content.dimensions).sort().map(idx => msg += '' + content.dimensions[idx] + ',')\n      msg += \"), name='\" + current_point_name + \"')\"\n    }\n  })\n\n  // Initializing layers\n  var current_point_name = '';\n  var current_point_key = '';\n  var outputs = [];\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing layers'\n  order.map(key => {\n    let point = flowpoints[key]\n    current_point_name = getPointName(flowpoints, key);\n    current_point_key = key\n\n    if (point.base_ref !== 'Input') {\n      const content = point.content[environment.library.toLowerCase()];\n\n      if (content) {\n        const rawparams = content.parameters;\n        var parameters = { name:{type:'string', value:current_point_name} }\n        Object.keys(rawparams).map(raw_p_key => {\n          if (raw_p_key !== 'extras') parameters[raw_p_key] = rawparams[raw_p_key]\n        })\n        //parameters['name'] = {type:'string', value:current_point_name};\n        let inputs = dummies[key].inputs;\n\n        /*\n        Need an add-operation first?\n        If a node got multiple inputs and is not \"Concatenate\", those inputs should be added together.\n        */ \n        if (inputs.length > 1) {\n\n          if (point.base_ref === 'Concatenate') {\n\n            // Adding inputs\n            msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Concatenate(axis=' + point.concat_dim + ')('\n            msg += '\\n' + dent(indent, 2) + '['\n            inputs.map(inp_key => {\n              msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n            })\n            msg = msg.slice(0, -1)\n            msg += '\\n' + dent(indent, 2) + ']'\n            msg += '\\n' + dent(indent, 1) + ')'\n\n          } else {\n\n            if (point.concat_inputs) {\n\n              // Concat name\n              var concatname = \"'concat_\"\n              inputs.map(inp_key => concatname += getPointName(flowpoints, inp_key) + '_')\n              concatname = concatname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Concatenate(name=\" + concatname + \", axis=\" + point.concat_dim + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            } else {\n\n              // Adder name\n              var addname = \"'add_\"\n              inputs.map(inp_key => addname += getPointName(flowpoints, inp_key) + '_')\n              addname = addname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Add(name=\" + addname + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            }\n\n          }\n\n        } else {\n\n          // Creating layer\n          msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n          msg += FormatInitParams(parameters, 1, indent)\n          msg += '(' + getPointName(flowpoints, inputs[0]) + ')'\n\n        }\n        if (point.is_output) outputs.push(current_point_key)\n      } else {\n        msg += '\\n\\nCOULD NOT ADD ' + current_point_name + ' (' + point.base_ref + ')!'\n        msg += '\\nThe layertype is not available in the the currently selected library.\\n\\n'\n      }\n    }\n  })\n\n  // Fixing outputs?\n  if (outputs.length === 0 && current_point_key !== '') outputs.push(current_point_key)\n\n  // Creating model\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating model'\n  msg += '\\n' + dent(indent, 1) + '_model = tf.keras.models.Model('\n  if (inps.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'inputs  = [' + FormatParamInputs(dummies, inps) + '],'\n  }\n  if (outputs.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'outputs = [' + FormatParamInputs(dummies, outputs) + ']'\n  }\n  if (state.settings.modelID !== '' && state.settings.modelID !== null) {\n    msg += ','\n    msg += '\\n' + dent(indent, 2) + \"name    = 'flowpoints.io/?p=\" + state.settings.modelID + \"'\"\n  }\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Compiling model\n  msg += '\\n\\n' + dent(indent, 1) + '# Compiling model'\n  msg += '\\n' + dent(indent, 1) + \"_model.compile(\"\n  msg += '\\n' + dent(indent, 2) + \"optimizer = optimizer,\"\n  msg += '\\n' + dent(indent, 2) + \"loss      = loss,\"\n  msg += '\\n' + dent(indent, 2) + \"metrics   = metrics\"\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Returning model\n  msg += '\\n\\n' + dent(indent, 1) + '# Returning model'\n  msg += '\\n' + dent(indent, 1) + 'return _model'\n\n  // Returning\n  return msg\n\n}\n\n\n\nexport function TensorFlowParser(state, order, inps, states, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n\n  // Imports\n  var msg = TensorFlowImports()\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, inps, dummies, indent)\n\n  // Returning\n  return msg\n}","export function getBaseLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"tensorflow\": \"AbstractRNNCell\"\n    },\n    \"Activation\": {\n      \"tensorflow\": \"Activation\"\n    },\n    \"ActivityRegularization\": {\n      \"tensorflow\": \"ActivityRegularization\"\n    },\n    \"AdaptiveAvgPool1d\": {\n      \"pytorch\": \"AdaptiveAvgPool1d\"\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"pytorch\": \"AdaptiveAvgPool2d\"\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"pytorch\": \"AdaptiveAvgPool3d\"\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"pytorch\": \"AdaptiveLogSoftmaxWithLoss\"\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"pytorch\": \"AdaptiveMaxPool1d\"\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"pytorch\": \"AdaptiveMaxPool2d\"\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"pytorch\": \"AdaptiveMaxPool3d\"\n    },\n    \"Add\": {\n      \"tensorflow\": \"Add\"\n    },\n    \"AlphaDropout\": {\n      \"pytorch\": \"AlphaDropout\",\n      \"tensorflow\": \"AlphaDropout\"\n    },\n    \"Average\": {\n      \"tensorflow\": \"Average\"\n    },\n    \"AveragePooling1D\": {\n      \"tensorflow\": \"AveragePooling1D\"\n    },\n    \"AveragePooling2D\": {\n      \"tensorflow\": \"AveragePooling2D\"\n    },\n    \"AveragePooling3D\": {\n      \"tensorflow\": \"AveragePooling3D\"\n    },\n    \"AvgPool1d\": {\n      \"pytorch\": \"AvgPool1d\"\n    },\n    \"AvgPool2d\": {\n      \"pytorch\": \"AvgPool2d\"\n    },\n    \"AvgPool3d\": {\n      \"pytorch\": \"AvgPool3d\"\n    },\n    \"BatchNorm1d\": {\n      \"pytorch\": \"BatchNorm1d\"\n    },\n    \"BatchNorm2d\": {\n      \"pytorch\": \"BatchNorm2d\"\n    },\n    \"BatchNorm3d\": {\n      \"pytorch\": \"BatchNorm3d\"\n    },\n    \"BatchNormalization\": {\n      \"tensorflow\": \"BatchNormalization\"\n    },\n    \"Bidirectional\": {\n      \"tensorflow\": \"Bidirectional\"\n    },\n    \"Bilinear\": {\n      \"pytorch\": \"Bilinear\"\n    },\n    \"CELU\": {\n      \"pytorch\": \"CELU\"\n    },\n    \"Concatenate\": {\n      \"pytorch\": \"Concatenate\",\n      \"tensorflow\": \"Concatenate\"\n    },\n    \"ConstantPad1d\": {\n      \"pytorch\": \"ConstantPad1d\"\n    },\n    \"ConstantPad2d\": {\n      \"pytorch\": \"ConstantPad2d\"\n    },\n    \"ConstantPad3d\": {\n      \"pytorch\": \"ConstantPad3d\"\n    },\n    \"Conv1d\": {\n      \"pytorch\": \"Conv1d\",\n      \"tensorflow\": \"Conv1D\"\n    },\n    \"Conv2d\": {\n      \"pytorch\": \"Conv2d\",\n      \"tensorflow\": \"Conv2D\"\n    },\n    \"Conv3d\": {\n      \"pytorch\": \"Conv3d\",\n      \"tensorflow\": \"Conv3D\"\n    },\n    \"ConvLSTM2D\": {\n      \"tensorflow\": \"ConvLSTM2D\"\n    },\n    \"ConvTranspose1d\": {\n      \"pytorch\": \"ConvTranspose1d\"\n    },\n    \"ConvTranspose2d\": {\n      \"pytorch\": \"ConvTranspose2d\",\n      \"tensorflow\": \"Conv2DTranspose\"\n    },\n    \"ConvTranspose3d\": {\n      \"pytorch\": \"ConvTranspose3d\",\n      \"tensorflow\": \"Conv3DTranspose\"\n    },\n    \"Cropping1D\": {\n      \"tensorflow\": \"Cropping1D\"\n    },\n    \"Cropping2D\": {\n      \"tensorflow\": \"Cropping2D\"\n    },\n    \"Cropping3D\": {\n      \"tensorflow\": \"Cropping3D\"\n    },\n    \"Dense\": {\n      \"tensorflow\": \"Dense\"\n    },\n    \"DenseFeatures\": {\n      \"tensorflow\": \"DenseFeatures\"\n    },\n    \"DepthwiseConv2D\": {\n      \"tensorflow\": \"DepthwiseConv2D\"\n    },\n    \"Dot\": {\n      \"tensorflow\": \"Dot\"\n    },\n    \"Dropout\": {\n      \"pytorch\": \"Dropout\",\n      \"tensorflow\": \"Dropout\"\n    },\n    \"Dropout2d\": {\n      \"pytorch\": \"Dropout2d\"\n    },\n    \"Dropout3d\": {\n      \"pytorch\": \"Dropout3d\"\n    },\n    \"ELU\": {\n      \"pytorch\": \"ELU\",\n      \"tensorflow\": \"ELU\"\n    },\n    \"Embedding\": {\n      \"pytorch\": \"Embedding\",\n      \"tensorflow\": \"Embedding\"\n    },\n    \"EmbeddingBag\": {\n      \"pytorch\": \"EmbeddingBag\"\n    },\n    \"Flatten\": {\n      \"pytorch\": \"Flatten\",\n      \"tensorflow\": \"Flatten\"\n    },\n    \"Fold\": {\n      \"pytorch\": \"Fold\"\n    },\n    \"FractionalMaxPool2d\": {\n      \"pytorch\": \"FractionalMaxPool2d\"\n    },\n    \"GRU\": {\n      \"pytorch\": \"GRU\",\n      \"tensorflow\": \"GRU\"\n    },\n    \"GRUCell\": {\n      \"pytorch\": \"GRUCell\",\n      \"tensorflow\": \"GRUCell\"\n    },\n    \"GaussianDropout\": {\n      \"tensorflow\": \"GaussianDropout\"\n    },\n    \"GaussianNoise\": {\n      \"tensorflow\": \"GaussianNoise\"\n    },\n    \"GlobalAveragePooling1D\": {\n      \"tensorflow\": \"GlobalAveragePooling1D\"\n    },\n    \"GlobalAveragePooling2D\": {\n      \"tensorflow\": \"GlobalAveragePooling2D\"\n    },\n    \"GlobalAveragePooling3D\": {\n      \"tensorflow\": \"GlobalAveragePooling3D\"\n    },\n    \"GlobalMaxPool1D\": {\n      \"tensorflow\": \"GlobalMaxPool1D\"\n    },\n    \"GlobalMaxPool2D\": {\n      \"tensorflow\": \"GlobalMaxPool2D\"\n    },\n    \"GlobalMaxPool3D\": {\n      \"tensorflow\": \"GlobalMaxPool3D\"\n    },\n    \"GroupNorm\": {\n      \"pytorch\": \"GroupNorm\"\n    },\n    \"Hardshrink\": {\n      \"pytorch\": \"Hardshrink\"\n    },\n    \"Hardtanh\": {\n      \"pytorch\": \"Hardtanh\"\n    },\n    \"Identity\": {\n      \"pytorch\": \"Identity\"\n    },\n    \"InputLayer\": {\n      \"tensorflow\": \"InputLayer\"\n    },\n    \"InputSpec\": {\n      \"tensorflow\": \"InputSpec\"\n    },\n    \"InstanceNorm1d\": {\n      \"pytorch\": \"InstanceNorm1d\"\n    },\n    \"InstanceNorm2d\": {\n      \"pytorch\": \"InstanceNorm2d\"\n    },\n    \"InstanceNorm3d\": {\n      \"pytorch\": \"InstanceNorm3d\"\n    },\n    \"LPPool1d\": {\n      \"pytorch\": \"LPPool1d\"\n    },\n    \"LPPool2d\": {\n      \"pytorch\": \"LPPool2d\"\n    },\n    \"LSTM\": {\n      \"pytorch\": \"LSTM\",\n      \"tensorflow\": \"LSTM\"\n    },\n    \"LSTMCell\": {\n      \"pytorch\": \"LSTMCell\",\n      \"tensorflow\": \"LSTMCell\"\n    },\n    \"Lambda\": {\n      \"tensorflow\": \"Lambda\"\n    },\n    \"Layer\": {\n      \"tensorflow\": \"Layer\"\n    },\n    \"LayerNorm\": {\n      \"pytorch\": \"LayerNorm\"\n    },\n    \"LeakyReLU\": {\n      \"pytorch\": \"LeakyReLU\",\n      \"tensorflow\": \"LeakyReLU\"\n    },\n    \"Linear\": {\n      \"pytorch\": \"Linear\",\n      \"tensorflow\": \"Dense\"\n    },\n    \"LinearModel\": {\n      \"tensorflow\": \"LinearModel\"\n    },\n    \"LocalResponseNorm\": {\n      \"pytorch\": \"LocalResponseNorm\"\n    },\n    \"LocallyConnected1D\": {\n      \"tensorflow\": \"LocallyConnected1D\"\n    },\n    \"LocallyConnected2D\": {\n      \"tensorflow\": \"LocallyConnected2D\"\n    },\n    \"LogSigmoid\": {\n      \"pytorch\": \"LogSigmoid\"\n    },\n    \"LogSoftmax\": {\n      \"pytorch\": \"LogSoftmax\"\n    },\n    \"Masking\": {\n      \"tensorflow\": \"Masking\"\n    },\n    \"MaxPool1d\": {\n      \"pytorch\": \"MaxPool1d\",\n      \"tensorflow\": \"MaxPool1D\"\n    },\n    \"MaxPool2d\": {\n      \"pytorch\": \"MaxPool2d\",\n      \"tensorflow\": \"MaxPool2D\"\n    },\n    \"MaxPool3d\": {\n      \"pytorch\": \"MaxPool3d\",\n      \"tensorflow\": \"MaxPool3D\"\n    },\n    \"MaxUnpool1d\": {\n      \"pytorch\": \"MaxUnpool1d\"\n    },\n    \"MaxUnpool2d\": {\n      \"pytorch\": \"MaxUnpool2d\"\n    },\n    \"MaxUnpool3d\": {\n      \"pytorch\": \"MaxUnpool3d\"\n    },\n    \"Maximum\": {\n      \"pytorch\": \"Max\",\n      \"tensorflow\": \"Maximum\"\n    },\n    \"Mean\": {\n      \"pytorch\": \"Mean\"\n    },\n    \"Minimum\": {\n      \"tensorflow\": \"Minimum\"\n    },\n    \"MultiheadAttention\": {\n      \"pytorch\": \"MultiheadAttention\"\n    },\n    \"Multiply\": {\n      \"tensorflow\": \"Multiply\"\n    },\n    \"PReLU\": {\n      \"pytorch\": \"PReLU\",\n      \"tensorflow\": \"PReLU\"\n    },\n    \"Permute\": {\n      \"tensorflow\": \"Permute\"\n    },\n    \"RNN\": {\n      \"pytorch\": \"RNN\",\n      \"tensorflow\": \"RNN\"\n    },\n    \"RNNCell\": {\n      \"pytorch\": \"RNNCell\"\n    },\n    \"RReLU\": {\n      \"pytorch\": \"RReLU\"\n    },\n    \"ReLU\": {\n      \"pytorch\": \"ReLU\",\n      \"tensorflow\": \"ReLU\"\n    },\n    \"ReLU6\": {\n      \"pytorch\": \"ReLU6\"\n    },\n    \"ReflectionPad1d\": {\n      \"pytorch\": \"ReflectionPad1d\"\n    },\n    \"ReflectionPad2d\": {\n      \"pytorch\": \"ReflectionPad2d\"\n    },\n    \"RepeatVector\": {\n      \"tensorflow\": \"RepeatVector\"\n    },\n    \"ReplicationPad1d\": {\n      \"pytorch\": \"ReplicationPad1d\"\n    },\n    \"ReplicationPad2d\": {\n      \"pytorch\": \"ReplicationPad2d\"\n    },\n    \"ReplicationPad3d\": {\n      \"pytorch\": \"ReplicationPad3d\"\n    },\n    \"Reshape\": {\n      \"tensorflow\": \"Reshape\"\n    },\n    \"SELU\": {\n      \"pytorch\": \"SELU\"\n    },\n    \"SeparableConv1D\": {\n      \"tensorflow\": \"SeparableConv1D\"\n    },\n    \"SeparableConv2D\": {\n      \"tensorflow\": \"SeparableConv2D\"\n    },\n    \"Sigmoid\": {\n      \"pytorch\": \"Sigmoid\"\n    },\n    \"SimpleRNN\": {\n      \"tensorflow\": \"SimpleRNN\"\n    },\n    \"SimpleRNNCell\": {\n      \"tensorflow\": \"SimpleRNNCell\"\n    },\n    \"Softmax\": {\n      \"pytorch\": \"Softmax\",\n      \"tensorflow\": \"Softmax\"\n    },\n    \"Softmax2d\": {\n      \"pytorch\": \"Softmax2d\"\n    },\n    \"Softmin\": {\n      \"pytorch\": \"Softmin\"\n    },\n    \"Softplus\": {\n      \"pytorch\": \"Softplus\"\n    },\n    \"Softshrink\": {\n      \"pytorch\": \"Softshrink\"\n    },\n    \"Softsign\": {\n      \"pytorch\": \"Softsign\"\n    },\n    \"SpatialDropout1D\": {\n      \"tensorflow\": \"SpatialDropout1D\"\n    },\n    \"SpatialDropout2D\": {\n      \"tensorflow\": \"SpatialDropout2D\"\n    },\n    \"SpatialDropout3D\": {\n      \"tensorflow\": \"SpatialDropout3D\"\n    },\n    \"StackedRNNCells\": {\n      \"tensorflow\": \"StackedRNNCells\"\n    },\n    \"Subtract\": {\n      \"tensorflow\": \"Subtract\"\n    },\n    \"SyncBatchNorm\": {\n      \"pytorch\": \"SyncBatchNorm\"\n    },\n    \"Tanh\": {\n      \"pytorch\": \"Tanh\"\n    },\n    \"Tanhshrink\": {\n      \"pytorch\": \"Tanhshrink\"\n    },\n    \"Threshold\": {\n      \"pytorch\": \"Threshold\"\n    },\n    \"ThresholdedReLU\": {\n      \"tensorflow\": \"ThresholdedReLU\"\n    },\n    \"TimeDistributed\": {\n      \"tensorflow\": \"TimeDistributed\"\n    },\n    \"Unfold\": {\n      \"pytorch\": \"Unfold\"\n    },\n    \"UpSampling1D\": {\n      \"tensorflow\": \"UpSampling1D\"\n    },\n    \"UpSampling2D\": {\n      \"tensorflow\": \"UpSampling2D\"\n    },\n    \"UpSampling3D\": {\n      \"tensorflow\": \"UpSampling3D\"\n    },\n    \"Wrapper\": {\n      \"tensorflow\": \"Wrapper\"\n    },\n    \"ZeroPad2d\": {\n      \"pytorch\": \"ZeroPad2d\"\n    },\n    \"ZeroPadding1D\": {\n      \"tensorflow\": \"ZeroPadding1D\"\n    },\n    \"ZeroPadding2D\": {\n      \"tensorflow\": \"ZeroPadding2D\"\n    },\n    \"ZeroPadding3D\": {\n      \"tensorflow\": \"ZeroPadding3D\"\n    }\n  }\n}","export function getPyTorchLibrary() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"n_classes\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"cutoffs\": {\n        \"type\": \"sequence\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"div_value\": {\n        \"type\": \"float\",\n        \"value\": 4.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"head_bias\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AlphaDropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Bilinear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in1_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"in2_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"CELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Concatenate\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Embedding\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_idx\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"EmbeddingBag\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mode\": {\n        \"type\": \"string\",\n        \"value\": \"'mean'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Flatten\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Fold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_ratio\": {\n        \"type\": \"float\",\n        \"value\": [\n          0.5,\n          0.5\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": 1\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRU\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRUCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GroupNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardtanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"min_val\": {\n        \"type\": \"float\",\n        \"value\": -1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_val\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Identity\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"InstanceNorm1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTM\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTMCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LayerNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"normalized_shape\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"elementwise_affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LeakyReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"negative_slope\": {\n        \"type\": \"float\",\n        \"value\": 0.01,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Linear\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocalResponseNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.0001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta\": {\n        \"type\": \"float\",\n        \"value\": 0.75,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"k\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LogSigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"LogSoftmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Max\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Mean\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"keepdim\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MultiheadAttention\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"embed_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_heads\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"PReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_parameters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"init\": {\n        \"type\": \"float\",\n        \"value\": 0.25,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNN\": {\n      \"extras\": {\n        \"gothidden\": true\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNNCell\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      }\n    },\n    \"RReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lower\": {\n        \"type\": \"float\",\n        \"value\": 0.125,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"upper\": {\n        \"type\": \"float\",\n        \"value\": 0.3333333333333333,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU6\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad1d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad3d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SELU\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Sigmoid\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmax\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"1\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softmax2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Softmin\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softplus\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"beta\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 20,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softsign\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"SyncBatchNorm\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Tanh\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Tanhshrink\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n    },\n    \"Threshold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"threshold\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"value\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Unfold\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPad2d\": {\n      \"extras\": {\n        \"gothidden\": false\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    }\n  }\n}","export function getTensorFlowLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dynamic\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Activation\": {\n      \"activation\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ActivityRegularization\": {\n      \"l1\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"l2\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Add\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AlphaDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Average\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"AveragePooling3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"BatchNormalization\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"epsilon\": {\n        \"type\": \"float\",\n        \"value\": 0.001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"center\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_mean_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_variance_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_clipping\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"fused\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"virtual_batch_size\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"adjustment\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Bidirectional\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"merge_mode\": {\n        \"type\": \"string\",\n        \"value\": \"concat\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"weights\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Concatenate\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv2DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Conv3DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ConvLSTM2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping1D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping2D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Cropping3D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1,\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dense\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DenseFeatures\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"DepthwiseConv2D\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dot\": {\n      \"axes\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"normalize\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Dropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Embedding\": {\n      \"input_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_dim\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask_zero\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"input_length\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Flatten\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRU\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GRUCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GaussianNoise\": {\n      \"stddev\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalAveragePooling3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"GlobalMaxPool3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"InputSpec\": {\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"min_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"axes\": {\n        \"type\": \"string\",\n        \"value\": \"None)\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTM\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LSTMCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Lambda\": {\n      \"function\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"arguments\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Layer\": {\n      \")\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LeakyReLU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.3,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LinearModel\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse_combiner\": {\n        \"type\": \"string\",\n        \"value\": \"sum\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"LocallyConnected2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Masking\": {\n      \"mask_value\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"MaxPool3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Maximum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Minimum\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Multiply\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"PReLU\": {\n      \"alpha_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shared_axes\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Permute\": {\n      \"dims\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RNN\": {\n      \"cell\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ReLU\": {\n      \"max_value\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"negative_slope\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"RepeatVector\": {\n      \"n\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Reshape\": {\n      \"target_shape\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SeparableConv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNN\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SimpleRNNCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Softmax\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout1D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout2D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"SpatialDropout3D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"StackedRNNCells\": {\n      \"cells\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Subtract\": {\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ThresholdedReLU\": {\n      \"theta\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"TimeDistributed\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling1D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling2D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"interpolation\": {\n        \"type\": \"string\",\n        \"value\": \"nearest\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"UpSampling3D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"Wrapper\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding1D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding2D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    },\n    \"ZeroPadding3D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"extras\": {\n        \"gothidden\": false\n      }\n    }\n  }\n}","export function getPyTorchAutoparams() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp.slice(0, inp.length - 1)\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AlphaDropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value)\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"AvgPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = 1 + ((inp[inp.length - 3] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[2] - p.kernel_size.value[2]) / p.stride.value[2])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 3] = Math.ceil(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 3] = Math.floor(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"BatchNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Bilinear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.out_features.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"CELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Concatenate\": {\n      outshape: (inp, p) => {\n        console.log(inp, p)\n        var tmp = inp[0]\n        inp.slice(1).map(row => {tmp[p.dim.value] += row[p.dim.value]})\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[0]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[1]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ConstantPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        tmp[tmp.length - 3] = inp[inp.length - 3] + 2 * p.padding.value[0]\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[1]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[2]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Conv1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"Conv2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"Conv3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"ConvTranspose1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = (L_in - 1) * p.stride.value + p.dilation.value * (p.kernel_size.value - 1) + p.output_padding.value + 1\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"ConvTranspose2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = (H_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const W_out = (W_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"ConvTranspose3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = (D_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const H_out = (H_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        const W_out = (W_in - 1) * p.stride.value[2] + p.dilation.value[2] * (p.kernel_size.value[2] - 1) + p.output_padding.value[2] + 1\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"Dropout\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Dropout3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Embedding\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        inp[inp.length - 1] = p.embedding_dim.value\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_embeddings.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"EmbeddingBag\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        tmp.push(p.embedding_dim.value)\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Flatten\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var features = 1/inp[0]\n        inp.map(val => {features *= val})\n        return [inp[0], Math.round(features)]\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_in\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"GRU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GRUCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GroupNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_channels.value = inp[1]\n        return p\n      }\n    },\n    \"Hardshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Identity\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"InstanceNorm1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"LPPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var L_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value\n        if (p.ceil_mode.value) {\n          L_out = Math.ceil(L_out)\n        } else {\n          L_out = Math.floor(L_out)\n        }\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LPPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var tmp = inp\n        var H_out = 1 + (inp[inp.length - 2] + 2 * p.padding.value[0] - p.dilation[0] * (p.kernel_size[0] - 1) - 1) / p.stride.value[0]\n        var W_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value[1] - p.dilation[1] * (p.kernel_size[1] - 1) - 1) / p.stride.value[1]\n        if (p.ceil_mode.value) {\n          H_out = Math.ceil(H_out)\n          W_out = Math.ceil(W_out)\n        } else {\n          H_out = Math.floor(H_out)\n          W_out = Math.floor(W_out)\n        }\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LSTM\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LSTMCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LayerNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LeakyReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Linear\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0;\n        var out_shape = inp.map((val, index) => {\n          idx = index;\n          return val\n        });\n        out_shape[idx] = p.out_features.value;\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.in_features.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"LocalResponseNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"LogSoftmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Max\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        inp[inp.length - 1] = L_out;\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxPool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 1]\n        inp[inp.length - 1] = (H_in - 1) * p.stride.value - 2 * p.padding.value + p.kernel_size.value\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"MaxUnpool3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 3] = (D_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[2] - 2 * p.padding.value[2] + p.kernel_size.value[2]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Mean\": {\n      outshape: (inp, p) => {\n        return inp[0]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"PReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"RNN\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RNNCell\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReLU6\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReflectionPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad1d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ReplicationPad3d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        let D_out = inp[inp.length - 3] + 2 * p.padding.value[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[1]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[2]\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SELU\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Sigmoid\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmax2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softmin\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softplus\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Softsign\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"SyncBatchNorm\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Tanh\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Tanhshrink\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"Threshold\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    },\n    \"ZeroPad2d\": {\n      outshape: (inp, p) => {\n        inp = inp[0]\n        const H_out = inp[inp.length - 2] + 2 * p.padding[0]\n        const W_out = inp[inp.length - 1] + 2 * p.padding[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        inp = inp[0]\n        return p\n      }\n    }\n  }\n}","import { MainLibrary } from \"./MainLibrary\";\n\n\n// Cascaded simplifying and de-simplifying\n\n// Parameters\nfunction SimplifyParameters(parameters) {\n  var new_parameters = [];\n  var keys = [];\n  Object.keys(parameters).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.sort().map((p_key, idx) => {\n    new_parameters.push(parameters[p_key].value)\n  })\n  new_parameters.push(parameters.extras)\n  return new_parameters\n}\nfunction DeSimplifyParameters(parameters, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  const recipe_copy = JSON.parse(JSON.stringify(recipe))\n  var new_param_lib = {};\n  var keys = [];\n  Object.keys(recipe).map(p_key => {\n    if (p_key !== 'extras') keys.push(p_key)\n  })\n  keys.map(p_key => new_param_lib[p_key] = null)\n  keys.sort().map((p_key, idx) => {\n    new_param_lib[p_key] = recipe[p_key];\n    new_param_lib[p_key].value = parameters[idx];\n    if (new_param_lib[p_key].value === undefined) {\n      new_param_lib[p_key].value = recipe_copy[p_key].value\n    }\n  })\n  if (parameters[keys.length]) {\n    new_param_lib.extras = parameters[keys.length]\n  } else {\n    new_param_lib.extras = recipe.extras\n  }\n  return new_param_lib\n}\n\n// Content\nfunction SimplifyContent(content) {\n  var new_content = {};\n  Object.keys(content).sort().map((library_key, idx) => {\n    new_content[library_key] = [\n      content[library_key].reference,\n      SimplifyParameters(content[library_key].parameters)\n    ]\n  })\n  return new_content\n}\nfunction DeSimplifyContent(content, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  var new_content_lib = {}\n  Object.keys(recipe).sort().map((library_key, idx) => {\n    if (library_key in content) {\n      new_content_lib[library_key] = {\n        reference: content[library_key][0],\n        parameters: DeSimplifyParameters(content[library_key][1], recipe[library_key].parameters)\n      }\n    } else {\n      new_content_lib[library_key] = recipe[library_key]\n    }\n  })\n  return new_content_lib\n}\n\n// Outputs\nfunction SimplifyOutputs(outputs) {\n  var new_outputs = [];\n  Object.keys(outputs).sort().map(key => {\n    new_outputs.push(key)\n  })\n  return new_outputs\n}\nfunction DeSimplifyOutputs(outputs) {\n  var new_outputs_lib = {};\n  outputs.map(key => {\n    new_outputs_lib[key] = {}\n  })\n  return new_outputs_lib\n}\n\n// Position\nfunction SimplifyPosition(pos) {\n  return [\n    pos.x,\n    pos.y\n  ]\n}\nfunction DeSimplifyPosition(pos) {\n  return {\n    x: pos[0],\n    y: pos[1]\n  }\n}\n\n// Entire flowpoint\nfunction SimplifyFlowpoint(flowpoint) {\n  var new_flowpoint = {\n    ref: flowpoint.base_ref,\n    name: flowpoint.name,\n    isout: flowpoint.is_output,\n    out: SimplifyOutputs(flowpoint.outputs),\n    pos: SimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs,\n    concat_dim: flowpoint.concat_dim,\n    cont: {},\n    contig: flowpoint.contiguous,\n    re_ndims: flowpoint.reshape_ndims,\n    re_dims: flowpoint.reshape_dims\n  }\n  if (flowpoint.base_ref === 'Input') {\n    new_flowpoint.cont = flowpoint.content;\n  } else {\n    new_flowpoint.cont = SimplifyContent(flowpoint.content)\n  }\n  return new_flowpoint\n}\nfunction DeSimplifyFlowpoint(flowpoint, getEmptyFlowpointContent) {\n  const recipe = getEmptyFlowpointContent(flowpoint.ref);\n  var new_flowpoint_lib = {\n    base_ref: flowpoint.ref,\n    name: flowpoint.name,\n    is_output: flowpoint.isout,\n    outputs: DeSimplifyOutputs(flowpoint.out),\n    pos: DeSimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs || false,\n    concat_dim: flowpoint.concat_dim || 0,\n    output_shape: [],\n    content: {},\n    contiguous: flowpoint.contig || false,\n    reshape_ndims: flowpoint.re_ndims || 0,\n    reshape_dims: flowpoint.re_dims || []\n  };\n  if (flowpoint.ref === 'Input') {\n    new_flowpoint_lib.content = flowpoint.cont;\n  } else {\n    new_flowpoint_lib.content = DeSimplifyContent(flowpoint.cont, recipe, flowpoint.ref === 'Softmax')\n  }\n  return new_flowpoint_lib\n}\n\n// Fix tuples\nfunction FixTuples(flowpoints) {\n  Object.keys(flowpoints).map(key => {\n    var point = flowpoints[key];\n    if (point.base_ref !== 'Input') {\n      Object.keys(point.content).map(lib_key => {\n        var content = flowpoints[key].content[lib_key];\n        Object.keys(content.parameters).map(param_key => {\n          var param = flowpoints[key].content[lib_key].parameters[param_key];\n          if (param.istuple && !Array.isArray(param.value)) {\n\n            if (point.base_ref.toLowerCase().includes('1d')) {\n              param.value = [param.value];\n            } else if (point.base_ref.toLowerCase().includes('2d')) {\n              param.value = [param.value, param.value]\n            } else if (point.base_ref.toLowerCase().includes('3d')) {\n              param.value = [param.value, param.value, param.value]\n            }\n\n            if (!Array.isArray(param.value)) {\n              var sample_tuple = null;\n              Object.keys(content).map(param_key_2 => {\n                const p2 = content[param_key_2];\n                if (p2.istuple && Array.isArray(p2.value)) sample_tuple = p2.value.map(val => 1 * val)\n              })\n            }\n\n            if (!Array.isArray(param.value)) console.log('Could not fix', point)\n\n          }\n        })\n      })\n    }\n  })\n  return flowpoints\n}\n\n// Flowpoints (like plural)\nfunction SimplifyFlowpoints(flowpoints) {\n  var new_flowpoints = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints[key] = SimplifyFlowpoint(flowpoints[key])\n  })\n  return new_flowpoints\n}\nfunction DeSimplifyFlowpoints(flowpoints, getEmptyFlowpointContent) {\n  var new_flowpoints_lib = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints_lib[key] = DeSimplifyFlowpoint(flowpoints[key], getEmptyFlowpointContent)\n  })\n  return FixTuples(new_flowpoints_lib)\n}\n\n// Environment\nfunction SimplifyEnvironment(env) {\n  return [\n    env.library,\n    env.notes,\n    env.batch_first\n  ]\n}\nfunction DeSimplifyEnvironment(env, main_env) {\n  var new_env_lib = JSON.parse(JSON.stringify(main_env));\n  new_env_lib.library = '' + env[0]\n  new_env_lib.notes = '' + env[1]\n  new_env_lib.batch_first = env[2] || false\n  new_env_lib.autoparams = main_env.autoparams\n  return new_env_lib\n}\n\n// Visual\nfunction SimplifyVisual(vis) {\n  return [\n    vis.darkTheme,\n    vis.theme,\n    vis.background,\n    vis.variant,\n    vis.drawerOpen,\n    vis.showShape,\n    vis.showName,\n    vis.snap\n  ]\n}\nfunction DeSimplifyVisual(vis, main_vis) {\n  var new_vis_lib = JSON.parse(JSON.stringify(main_vis));\n  new_vis_lib.darkTheme = vis[0]\n  new_vis_lib.theme = vis[1]\n  new_vis_lib.background = vis[2]\n  new_vis_lib.variant = vis[3]\n  new_vis_lib.drawerOpen = vis[4]\n  new_vis_lib.showShape = vis[5]\n  new_vis_lib.showName = vis[6]\n  new_vis_lib.snap = vis[7]\n  return new_vis_lib\n}\n\n// Settings\nfunction SimplifySettings(settings) {\n  return [\n    settings.modelID,\n    settings.count,\n    settings.lastPos\n  ]\n}\nfunction DeSimplifySettings(settings, main_set) {\n  var new_set_lib = JSON.parse(JSON.stringify(main_set));\n  new_set_lib.modelID = settings[0]\n  new_set_lib.count = settings[1]\n  new_set_lib.lastPos = settings[2]\n  return new_set_lib\n}\n\n// Try to parse json\nfunction TryParseJSON(msg) {\n  try {\n    return JSON.parse(msg)\n  } catch(err) {}\n  return msg\n}\n\n// Full\nfunction Simplify(state) {\n  return {\n    flowpoints: SimplifyFlowpoints(state.flowpoints),\n    environment: SimplifyEnvironment(state.environment),\n    visual: SimplifyVisual(state.visual),\n    settings: SimplifySettings(state.settings),\n  }\n}\nfunction DeSimplify(state, getEmptyFlowpointContent, main_lib) {\n  state = TryParseJSON(state)\n  //var main_lib = MainLibrary();\n  return {\n    flowpoints: DeSimplifyFlowpoints(state.flowpoints, getEmptyFlowpointContent),\n    environment: DeSimplifyEnvironment(state.environment, main_lib.environment),\n    visual: DeSimplifyVisual(state.visual, main_lib.visual),\n    settings: DeSimplifySettings(state.settings, main_lib.settings),\n    notification: main_lib.notification\n  }\n}\n\n\nexport function Library2String(state) {\n\n  return JSON.stringify(Simplify(state))\n\n}\n\n\nexport function String2Library(msg, getEmptyFlowpointContent, main_lib) {\n  \n  return DeSimplify(msg, getEmptyFlowpointContent, main_lib)\n\n}","var axios = require('axios');\n\nfunction rjust(msg, n, rep) {\n  msg = '' + msg\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(() => {\n    msg = rep + msg\n  })\n  return msg\n}\n\n\nfunction num2bigBase(num, lib) {\n  if (!lib) {\n    lib = '0123456789'\n    lib += 'abcdefghijklmnopqrstuvwxyz'\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  }\n  if (num < lib.length) {\n    return lib[num]\n  } else {\n    return num2bigBase(Math.floor(num / lib.length)) + lib[num % lib.length]\n  }\n}\n\n\nfunction getId(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var lib = '0123456789'\n  lib += 'abcdefghijklmnopqrstuvwxyz'\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var msg = ''\n  msg += Math.round(Math.random() * 100)\n  var d = new Date()\n  msg += rjust(d.getSeconds(), 2, 0)\n  msg += rjust(d.getMinutes(), 2, 0)\n  msg += rjust(d.getHours(), 2, 0)\n  msg += rjust(d.getDate(), 2, 0)\n  msg += rjust(d.getMonth(), 2, 0)\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\n  msg = num2bigBase(msg, lib)\n  Array.from(Array(l - msg.length).keys()).map(() => {\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\n  })\n  return msg\n}\n\n\nexport function PostToDataBase(data, cb) {\n  let model_id = getId(12)\n  data.match(/.{1,5000}/g).map((msg, idx) => {\n    try {\n      var url = 'https://docs.google.com/forms/d/e/1FAIpQLSfA4C6HCBGWLtdfUI4th6VDR7cjtSsj0fp0Tomw96CbgqjO9g/formResponse?usp=pp_url'\n      url += '&entry.1116133740=' + model_id;\n      url += '&entry.1405886587=' + msg + '_NnUuMmBbEeRr_' + rjust('' + idx, 4, '0');\n      url += '&submit=Submit'\n      axios.get(url).then(() => {})\n    } catch(err) {}\n  })\n  if (cb) cb(model_id)\n}\n\n\nexport function LoadDataBase(cb) {\n  axios.get('https://docs.google.com/spreadsheets/d/10LoweeCDvGHQBHb8Plr_1IrLXPy4-N7CFqzcO73MqCs/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0').then(res => {\n    var data = {};\n    var concat_data = {};\n    var raw = res.data.split('\\r\\n');\n    var tmp;\n    for (var idx = 1; idx < raw.length; idx++) {\n      tmp = raw[idx].split(',')\n      if (!(tmp[0] in concat_data)) concat_data[tmp[0]] = {}\n      var number = tmp[1].substring(tmp[1].length - 18)\n      if (number.includes('NnUuMmBbEeRr')) concat_data[tmp[0]][number] = tmp[1].substring(0, tmp[1].length - 18)\n    }\n    // Concating data\n    Object.keys(concat_data).map(key => {\n      data[key] = ''\n      Object.keys(concat_data[key]).sort().map(msg => {\n        data[key] += concat_data[key][msg]\n      })\n    })\n    if (cb) cb(data)\n  })\n}","var CryptoJS = require(\"crypto-js\");\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nfunction getSpecialsLib(reversed) {\n  var lib = {\n    '§': '%C2%A7',\n    '\"': '%22',\n    '#': '%23',\n    '%': '%25',\n    '&': '%26',\n    '=': '%3D',\n    '`': '%60',\n    '^': '%5E',\n    '+': '%2B',\n    '´': '%C2%B4',\n    '¨': '%C2%A8'\n  }\n  if (reversed) {\n    var revlib = {}\n    Object.keys(lib).map(key => {\n      revlib[lib[key]] = key\n    })\n    return revlib\n  }\n  return lib\n}\n\n\nexport function Encrypt(data, key) {\n  var toEncrypt = {\n    test_string: 'there_are_fish_in_the_ocean',\n    data: data\n  }\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(toEncrypt), key).toString()\n  const specials = getSpecialsLib()\n  Object.keys(specials).map(key => {\n    encrypted = ReplaceAll(encrypted, key, specials[key])\n  })\n  return encrypted\n}\n\n\nexport function Decrypt(data, key) {\n  var msg = data\n  const specials = getSpecialsLib(true)\n  Object.keys(specials).map(key => {\n    msg = ReplaceAll(msg, key, specials[key])\n  })\n  var decrypted = '';\n  try {\n    decrypted = CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8)\n  } catch(err) {\n    return false\n  }\n  if (decrypted.includes('there_are_fish_in_the_ocean')) {\n    return JSON.parse(decrypted).data\n  }\n  return false\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\n\n\nclass WhatIsThis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    }\n  }\n  render() {\n    return (\n      <div style={{padding:0}}>\n        <Button color='primary' style={{textTransform:'none', padding:'1', marginLeft:-7}} onClick={() => {this.setState({open:!this.state.open}); this.props.onClick()}}>\n          What is this?\n        </Button>\n        <div style={{marginLeft:20, marginTop:10}} onClick={() => {this.setState({open:false}); this.props.onClick()}}>\n          <Collapse in={this.state.open}>\n            <Typography color='inherit' paragraph>Model protection, using AES encryption.</Typography>\n            <Typography color='inherit' paragraph>\n              When a model is saved, it's content is converted to a string and stored in a\n              publicly view-able google sheet.<br/>\n              Altough anyone can see the model in this google sheet, encryption will make it\n              impossible for anyone without the password to read the model.\n            </Typography>\n            <Typography color='inherit' paragraph>\n              If you choose to encrypt your model, your own device will perform the\n              encryption, and then send the encrypted model to the google sheet.<br/><br/>\n\n              When you try to load an encrypted model, the encrypted string will be downloaded\n              from the google sheet, and then decrypted by your device.<br/><br/>\n              This ensures point-to-point encryption, in which no un-encrypted data is ever\n              transmitted over the internet.\n            </Typography>\n            <Typography color='inherit' style={{fontWeight:'bold'}} paragraph>\n              NB!<br/>\n              The password is NEVER STORED! If you forget your password, the contents\n              of your model cannot be recovered.\n            </Typography>\n          </Collapse>\n        </div>\n        <br/>\n      </div>\n    )\n  }\n}\n\n\nexport class LoadDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Encrypted model</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please type your password in order to decrypt the model<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (this.state.pswd === '') {\n                this.props.onClose()\n              } else {\n                this.props.onSubmit(this.state.pswd)\n              }\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'CONTINUE WITHOUT LOADING MODEL') : 'DECRYPT MODEL'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\n\nexport class SaveDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Model encryption (optional)</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Type a password to encrypt your model, or leave the\n            password field empty in order to create a public link<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) this.props.onSubmit(this.state.pswd)\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              this.props.onSubmit(this.state.pswd)\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'Continue without password') : 'Continue'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}","import React from 'react';\nimport { Typography, Dialog, DialogTitle, DialogContentText, DialogContent, ExpansionPanel, ExpansionPanelSummary, Stepper, StepContent, StepLabel, Step, Link } from \"@material-ui/core\";\n\n\nexport class HelpDialog extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { step:0 }\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo(idx) {\n    this.setState({ step:idx })\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        fullWidth\n        maxWidth='sm'\n        style={{maxHeight:'90vh', height:'auto'}}>\n\n        <DialogTitle>Getting started</DialogTitle>\n\n        <div style={{overflow:'scroll', width:'100%'}}>\n\n          <DialogContent>\n            <DialogContentText>\n              Welcome to Flowpoints ML!<br/>\n              Here you can design deep learning models graphically.<br/><br/>\n              The following few sections will help you get going :)<br/>\n              You can also check out the <Link href='https://github.com/mariusbrataas/flowpoints_ml#readme' target='_blank'>documentation</Link> for more information.<br/><br/>\n              Found an bug? Please open a new <Link href=\"https://github.com/mariusbrataas/flowpoints_ml/issues\" target='_blank'>issue</Link>, and feel free to fix it!\n            </DialogContentText>\n          </DialogContent>\n\n          <Stepper activeStep={this.state.step} orientation='vertical'>\n\n            <Step key={0} completed={false}>\n              <StepLabel onClick={() => {this.goTo(0)}}>The main parts of the screen</StepLabel>\n              <StepContent>\n                <Typography>\n                  Before we get started you should know the main parts of this tool.<br/><br/>\n                  \n                  The little stack of colored buttons:<br/>\n                  You'll use these for creating new flowpoints, copy the entire code of your model,\n                  create shareable links to your model, show/hide the panel on the left of your screen,\n                  and to view this guide.<br/><br/>\n                  \n                  The \"Misc\" tab in the side panel:<br/>\n                  Here you can change what library you want to utilize to create your model,\n                  write some notes about your work, and change the appearance of things.\n                  \n                  The \"Code\" tab in the side panel:<br/>\n                  When you create a model, it's corresponding code will be displayed here.<br/><br/>\n                  \n                  The \"Flowpoint\" tab:<br/>\n                  All parameters of the selected flowpoint can be viewed and changed in this tab.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={1} completed={false}>\n              <StepLabel onClick={() => {this.goTo(1)}}>Creating a new flowpoint</StepLabel>\n              <StepContent>\n                <Typography>\n                  Click the + button in the button stack. This should create a new\n                  flowpoint on your screen and move focus to this one automatically.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={2} completed={false}>\n              <StepLabel onClick={() => {this.goTo(2)}}>Connecting flowpoints</StepLabel>\n              <StepContent>\n                <Typography>\n                  First create two flowpoints.<br/>\n                  Did they create a connection automatically? No worries, that is supposed\n                  to happen whenever you create a flowpoint while another flowpoint is selected.<br/><br/>\n                  To create a new connection manually, start by selecting the flowpoint\n                  you want to get the output from. Next, hold shift while clicking the flowpoint\n                  that should receive the output. Poof! They're connected!<br/><br/>\n                  Disconnecting flowpoints is just as simple. Select the flowpoint that supplies the output,\n                  hold shift, and click the flowpoint that's receiving the input.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={3} completed={false}>\n              <StepLabel onClick={() => {this.goTo(3)}}>Direction of connections</StepLabel>\n              <StepContent>\n                <Typography>\n                  All connections between flowpoints signify what direction data is moving.<br/><br/>\n                  When connecting two flowpoints, the first flowpoint you select will be used as\n                  the \"sender\" in that connection, while the second flowpoint will be the \"receiver\".<br/><br/>\n                  The color-gradient of connections help identify which is which.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={4} completed={false}>\n              <StepLabel onClick={() => {this.goTo(4)}}>Changing a flowpoint's parameters</StepLabel>\n              <StepContent>\n                <Typography>\n                  If you head over to the \"Flowpoint\" tab you should see a bunch of fields\n                  (click on a flowpoint if you can't see any such fields).<br/><br/>\n                  To change the value of a field, click it, and try typing something.\n                  Note that some fields will only accept numbers.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={5} completed={false}>\n              <StepLabel onClick={() => {this.goTo(5)}}>Layer types</StepLabel>\n              <StepContent>\n                <Typography>\n                  The field at the very top in the \"Flowpoint\" tab is where you assign\n                  a layer type to your flowpoint.<br/><br/>\n                  When you click this field, a long list will pop up. These are all\n                  the layers available. Small, colored badges indicate what libraries the\n                  layer is available in, i.e. TF for TensorFlow, or PT for PyTorch.<br/><br/>\n                  If you start typing the name of a layer, the list will try to suggest a smaller selection of layers.<br/><br/>\n                  Ideally, it should be possible to create models utilizing layers that are available\n                  in either library, and quickly switch between them by just changing the \"Library\" field\n                  in the \"Misc\" tab.<br/>\n                  This won't always be the case, but entertain this idea, paramaters from all libraries\n                  will be stored whenever you create a link to your model.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={6} completed={false}>\n              <StepLabel onClick={() => {this.goTo(6)}}>Changing appearance</StepLabel>\n              <StepContent>\n                <Typography>\n                  Head over to the \"Misc\" tab. You'll see the fields \"Theme\" and \"Variant\",\n                  and a couple of buttons just beneath.<br/><br/>\n                  These have no practical application what-so-ever, but you'll be able to\n                  create deep learning models with style! I recommend trying the theme \"orange\"\n                  with the variant \"paper\".<br/><br/>\n                  Play arround till you find something you like. When you share a model, any\n                  changes to it's appearance will be included.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={7} completed={false}>\n              <StepLabel onClick={() => {this.goTo(7)}}>Sharing</StepLabel>\n              <StepContent>\n                <Typography>\n                  Ready to show off your work?<br/><br/>\n                  Click the button in the button stack showing a link. This should open a new box on your\n                  screen, asking wether you'd like to encrypt your model.<br/><br/>\n                  Adding encryption will ensure that no one without the correct password can open your model.<br/><br/>\n                  If you want to create a public link, just leave the text field empty and click continue.<br/><br/>\n                  The link will be copied to your clip-board, and the current URL should at the top of your\n                  browser will change in order to match the link.<br/><br/>\n                  If you chose to add a password, this password will be requested the next time you open your model.<br/><br/>\n                  Note that if you forget your password, the data of your model can be considered lost.\n                  Your password is not stored anywhere, and there exists no other keys that can decrypt your data.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={8} completed={false}>\n              <StepLabel onClick={() => {this.goTo(8)}}>Examples</StepLabel>\n              <StepContent>\n                <Typography>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=KlHpdLzP3SDx\" target=\"_blank\">TensorFlow CNN used for the CIFAR10 example</Link><br/>\n                  <Link href=\"https://mariusbrataas.github.io/flowpoints_ml/?p=9fehu18ra4ty\" target=\"_blank\">PyTorch CNN used for the CIFAR10 example</Link>\n                </Typography>\n              </StepContent>\n            </Step>\n\n          </Stepper>\n        </div>\n      </Dialog>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\n// Importing installed tools\nimport { Flowpoint, Flowspace } from 'flowpoints';\nimport copy from 'copy-to-clipboard';\n\n\n// Importing local tools\nimport { Sidebar } from './sidebar/Sidebar.js';\nimport { MainButtons } from './MainButtons';\nimport { Parser } from './parser/Parser';\nimport { Library2String, String2Library } from './LibraryParser';\nimport { PostToDataBase, LoadDataBase } from './DataBaseHandler';\nimport { Encrypt, Decrypt } from './Cryptographer';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { LoadDialog, SaveDialog } from './PasswordDialog.js';\nimport { MainLibrary } from './MainLibrary';\nimport { HelpDialog } from './HelpDialog';\n\n\nfunction shapeBox(shape) {\n  var msg = '['\n  shape.map(val => {\n    msg += val + ','\n  })\n  if (shape.length > 0) msg = msg.substring(0, msg.length - 1)\n  msg += ']'\n  return (\n    <div style={{textAlign:'center', paddingBottom:'10px'}}>\n      {\n        msg\n      }\n    </div>\n  )\n}\n\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props);\n\n    // Building state library\n    this.state = MainLibrary()\n\n    // Helpers\n    this.diagramRef = null;\n\n    // Binding class methods\n    this.showNotification = this.showNotification.bind(this);\n    this.updateCode = this.updateCode.bind(this);\n    this.updateAvailableLayers = this.updateAvailableLayers.bind(this);\n    this.prepOutputShapes = this.prepOutputShapes.bind(this);\n    this.loadDecryptedModel = this.loadDecryptedModel.bind(this);\n    this.getEmptyFlowpointContent = this.getEmptyFlowpointContent.bind(this);\n    this.addFlowpoint = this.addFlowpoint.bind(this);\n    this.copyCode = this.copyCode.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.showHideHelp = this.showHideHelp.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.deleteFlowpoint = this.deleteFlowpoint.bind(this);\n    this.deleteSelected = this.deleteSelected.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n\n  \n  componentDidMount() {\n\n    // Open drawer\n    var visual = this.state.visual;\n    visual.drawerOpen = true;\n    this.setState({visual});\n\n    // Loading model?\n    var query = window.location.href.split(this.state.settings.baseUrl)[1]\n    if (query.includes('p=')) {\n\n      query = query.substring(query.indexOf('p=') + 2, query.length)\n      query = query.substring(0, 12)\n\n      // Notify user that model is trying to load\n      this.showNotification('Trying to load model...', 'info')\n\n      // Loading database\n      LoadDataBase(data => {\n\n        // Model in data?\n        if (query in data) {\n          var decrypted = Decrypt(data[query], 'Hello world')\n          // Encryption?\n          if (decrypted) {\n            this.loadDecryptedModel(decrypted, query)\n          } else {\n            this.showNotification('Model is encrypted')\n            var visual = this.state.visual;\n            var environment = this.state.environment;\n            var settings = this.state.settings;\n            settings.modelID = query;\n            environment.encrypted_model = data[query]\n            visual.show_load_dialog = true;\n            this.setState({visual, environment, settings})\n          }\n\n        } else {\n          this.showNotification('Could not find model in database', 'error')\n        }\n\n      })\n\n    }\n\n    // Updating available layers\n    this.updateAvailableLayers()\n\n  }\n\n\n  showNotification(msg, color) {\n    if (!((color || 'nothing').includes('#'))) {\n      switch(color) {\n        case 'info':\n          color = '#2979ff'\n          break;\n        case 'error':\n          color = '#dd2c00'\n          break;\n        case 'warning':\n          color = '#ffd600'\n          break;\n        case 'success':\n          color = '#00b843'\n          break;\n        default:\n          color = '#37474f'\n      }\n    }\n    var notification = this.state.notification;\n    notification.queue.push({\n      msg,\n      color,\n      key: new Date().getTime()\n    })\n    if (notification.show) {\n      notification.show = false;\n    } else {\n      if (notification.queue.length) {\n        notification.content = notification.queue.shift()\n        notification.show = true\n      }\n    }\n    this.setState({notification})\n  }\n\n\n  updateCode(cb) {\n    var environment = this.state.environment;\n    let tmp = Parser(this.state)\n    environment.code = tmp.msg;\n    environment.order = tmp.order;\n    environment.dummies = tmp.dummies;\n    this.setState({environment})\n    this.prepOutputShapes();\n    if (cb) cb(environment.code)\n  }\n\n\n  updateAvailableLayers() {\n\n    var environment = this.state.environment;\n\n    // Creating list\n    var availableLayers = {Input: Object.keys(environment.libraryFetchers)};\n    Object.keys(environment.baseLib).map(layer_key => {\n      availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\n    })\n\n    // Updating environment\n    environment.availableLayers = availableLayers;\n\n    // Updating state\n    this.setState({environment})\n\n  }\n\n\n  prepOutputShapes(cb) {\n\n    if (this.state.environment.library in this.state.environment.autoparams) {\n\n      // Helpers\n      const autoparams = this.state.environment.autoparams[this.state.environment.library]();\n      var flowpoints = this.state.flowpoints;\n      var dummies = this.state.environment.dummies;\n      const order = this.state.environment.order;\n      const library = this.state.environment.library;\n\n      // Setting output-shapes of inputs\n      var visited = []\n      order.map(key => {\n        var point = flowpoints[key]\n        if (point.base_ref === 'Input') {\n          point.output_shape = Object.keys(point.content.dimensions).map(dimkey => {\n            return parseInt(point.content.dimensions[dimkey])\n          })\n          visited.push(key)\n        }\n      })\n\n      // Setting all output-shapes\n      order.map(key => {\n        if (!visited.includes(key)) {\n          var point = flowpoints[key];\n          if (point.content[library]) {\n            var tmp_autoparams = autoparams[point.content[library].reference];\n            if (tmp_autoparams) {\n              var bestInp = null\n              var all_inps = []\n              dummies[key].inputs.map(inp_key => {\n                if (visited.includes(inp_key)) {\n                  bestInp = inp_key\n                  all_inps.push(flowpoints[inp_key].output_shape.map(value => 1 * value))\n                }\n              })\n              if (flowpoints[bestInp]) {\n                const prevshape = flowpoints[bestInp].output_shape.map(value => 1 * value);\n                point.content[library].parameters = tmp_autoparams.autoparams(all_inps, point.content[library].parameters)\n                point.output_shape = tmp_autoparams.outshape(all_inps, point.content[library].parameters).map(value => parseInt(value))\n                visited.push(key)\n              }\n            }\n          } else {\n            point.output_shape = []\n          }\n        }\n      })\n\n      // Updating state\n      this.setState({ flowpoints })\n\n    }\n\n  }\n\n\n  loadDecryptedModel(decrypted, model_id) {\n\n    // Parsing\n    var new_state = String2Library(decrypted, this.getEmptyFlowpointContent, this.state)\n\n    // Updating visual\n    new_state.visual.show_load_dialog = false;\n    new_state.visual.load_dialog_error = false;\n    new_state.visual.show_save_dialog = false;\n\n    // Ensuring getbaselib and library fetchers are added\n    new_state.environment.getBaseLibrary = this.state.environment.getBaseLibrary\n    new_state.environment.libraryFetchers = this.state.environment.libraryFetchers\n\n    // Fixing model ID\n    new_state.settings.modelID = model_id || this.state.settings.modelID;\n\n    // Setting state\n    this.setState({flowpoints:{}, settings:{...this.state.settings, count:0}}, () => {\n      this.setState(new_state, () => {\n        // Showing notification\n        this.showNotification('Loaded model', '#00b24a')\n  \n        // Updating code and layers\n        this.updateAvailableLayers()\n        this.updateCode()\n      })\n    })\n\n  }\n\n\n  getEmptyFlowpointContent(base_ref) {\n\n    // Input nodes are treated differently from all other nodes\n    if (base_ref === 'Input') {\n      return {\n        n_dims: 4,\n        dimensions: {\n          0: 1,\n          1: 1,\n          2: 1,\n          3: 1\n        }\n      }\n    }\n\n    // Not an input node? Getting base_library references\n    var environment = this.state.environment;\n    const base_point = environment.getBaseLibrary()[base_ref];\n\n    // Adding contents and returning\n    var content = {};\n    Object.keys(base_point).map(library_key => {\n      if (library_key in environment.libraryFetchers) {\n        content[library_key] = {\n          reference: base_point[library_key],\n          parameters: environment.libraryFetchers[library_key]()[base_point[library_key]]\n        }\n      }\n    })\n    return content\n\n  }\n\n\n  addFlowpoint() {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Creating flowpoint\n    const base_ref = settings.count === 0 ? 'Input' : 'Linear';\n    var newPoint = {\n      base_ref: base_ref,\n      name: '',\n      outputs: {},\n      is_output: false,\n      concat_inputs: false,\n      concat_dim: 0,\n      output_shape: [],\n      contiguous: false,\n      reshape_ndims: 0,\n      reshape_dims: [],\n      pos: {\n        x: settings.lastPos.x,\n        y: settings.lastPos.y + 90\n      },\n      content: this.getEmptyFlowpointContent(base_ref)\n    }\n\n    // Adding flowpoint\n    flowpoints['' + settings.count] = newPoint;\n\n    // Connecting previously selected flowpoint to this one (maybe)\n    if (settings.selected) flowpoints[settings.selected].outputs['' + settings.count] = {}\n\n    // Updating settings\n    settings.selected = '' + settings.count\n    settings.count += 1\n    settings.lastPos = {\n      x: settings.lastPos.x,\n      y: settings.lastPos.y + 90\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n    this.updateCode()\n\n  }\n\n\n  copyCode() {\n    this.updateCode(code => {\n      copy(code);\n      this.showNotification('Code copied to clip-board', 'info')\n    })\n  }\n\n\n  createLink() {\n    var visual = this.state.visual;\n\n    // Showing encryption dialog\n    visual.show_save_dialog = true\n\n    // Updating state\n    this.setState({visual})\n\n  }\n\n\n  showHideHelp() {\n    var visual = this.state.visual;\n    visual.show_help_dialog = !visual.show_help_dialog;\n    this.setState({visual})\n  }\n\n\n  showHide() {\n    \n    // Loading from state\n    var visual = this.state.visual;\n    \n    // Open/close drawer\n    visual.drawerOpen = !visual.drawerOpen;\n\n    // Updating state\n    this.setState({ visual })\n\n  }\n\n\n  deleteFlowpoint(key) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Removing selected?\n    if (key === settings.selected) settings.selected = null;\n\n    // Deleting flowpoint\n    delete flowpoints[key];\n\n    // Removing any connections other flowpoints have to the deleted one\n    Object.keys(flowpoints).map(test_key => {\n      if (key in flowpoints[test_key].outputs) {\n        delete flowpoints[test_key].outputs[key]\n      }\n    })\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  deleteSelected() {\n    this.deleteFlowpoint(this.state.settings.selected);\n  }\n\n\n  handleClick(key, e) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Handling click\n    if (e.shiftKey) {\n      // If shift is pressed: Create / delete connection\n      if (settings.selected === null) {\n        // Nothing selected: selecting current\n        settings.selected = key;\n      } else {\n        if (settings.selected !== key) {\n          // Creating connection from previously clicked to current clicked\n          var pointA = flowpoints[settings.selected]\n          if (key in pointA.outputs) {\n            delete pointA.outputs[key]\n          } else {\n            pointA.outputs[key] = {}\n          }\n          this.updateCode()\n        }\n      }\n    } else {\n      // If not shift pressed: Select / deselect flowpoint\n      settings.selected = (settings.selected === null ? key : (settings.selected == key ? null : key))\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div style={{backgroundColor: (this.state.visual.darkTheme ? 'black' : 'white')}}>\n\n\n        <Sidebar\n          state={this.state}\n          refresh={() => {return this.state}}\n          updateFlowpoints={flowpoints => {this.setState({flowpoints}); this.updateCode()}}\n          updateEnvironment={environment => {this.setState({environment}); this.updateCode()}}\n          updateVisual={visual => this.setState({visual})}\n          updateSettings={settings => {this.setState({settings}); this.updateCode()}}\n          notification={(msg, color) => this.showNotification(msg, color)}\n          getEmptyFlowpointContent={this.getEmptyFlowpointContent}\n          deleteSelected={this.deleteSelected}\n          updateAvailableLayers={this.updateAvailableLayers}\n          diagramRef={this.diagramRef}\n          prepOutputShapes={this.prepOutputShapes}/>\n        \n\n        <Flowspace\n          theme={this.state.visual.theme}\n          variant={this.state.visual.variant}\n          background={this.state.visual.darkTheme ? 'black' : 'white'}\n          selected={this.state.settings.selected}\n          getDiagramRef={ref => {this.diagramRef = ref}}\n          avoidCollisions\n          onClick={() => {\n            \n            // Loading from state\n            var settings = this.state.settings;\n            settings.selected = null;\n\n            // Updating state\n            this.setState({settings})\n\n          }}\n          style={{\n            height: '100vh',\n            width: 'calc(100vw - ' + this.state.visual.drawerWidth * this.state.visual.drawerOpen + ')',\n            marginLeft: this.state.visual.drawerWidth * this.state.visual.drawerOpen,\n            transition: 'margin-left 0.4s ease-out'\n          }}>\n\n          {\n            Object.keys(this.state.flowpoints).map(key => {\n              const point = this.state.flowpoints[key];\n              return (\n                <Flowpoint\n                  key={key}\n                  outputs={point.outputs}\n                  onClick={e => {this.handleClick(key, e)}}\n                  startPosition={point.pos}\n                  snap={{x:10, y:10}}\n                  style={{\n                    width:'auto',\n                    height:'auto',\n                    minWidth:150,\n                    maxHeight: (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? 150 : 50\n                  }}\n                  onDrag={pos => {\n                    var flowpoints = this.state.flowpoints;\n                    var settings = this.state.settings;\n                    flowpoints[key].pos = pos;\n                    settings.lastPos = pos;\n                    this.setState({flowpoints, settings})\n                  }}>\n                  <div style={{height:'auto', paddingLeft:4, paddingRight:4}}>\n                      <div style={{display:'table', width:'100%', height:'50px'}}>\n                        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n                          {\n                            this.state.visual.showName ? (point.name !== '' ? point.name : 'p_' + key) : point.base_ref\n                          }\n                        </div>\n                      </div>\n                      {\n                        (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? shapeBox(point.output_shape) : null\n                      }\n                  </div>\n                </Flowpoint>\n              )\n            })\n          }\n\n        </Flowspace>\n\n\n        <MainButtons\n          state={this.state}\n          addFlowpoint={this.addFlowpoint}\n          copyCode={this.copyCode}\n          createLink={this.createLink}\n          showHide={this.showHide}\n          showHideHelp={this.showHideHelp}/>\n        \n\n        <Snackbar\n          autoHideDuration={4000}\n          onClose={() => {\n            var notification = this.state.notification;\n            notification.show = false;\n            this.setState({notification})\n          }}\n          onExited={() => {\n            var notification = this.state.notification;\n            if (notification.queue.length > 0) {\n              notification.content = notification.queue.shift();\n              notification.show = true\n            }\n            this.setState({notification})\n          }}\n          anchorOrigin={{vertical:'top', horizontal:'right'}}\n          open={this.state.notification.show}>\n          <SnackbarContent\n            message={this.state.notification.content.msg}\n            style={{backgroundColor:this.state.notification.content.color, boxShadow:'none'}}/>\n        </Snackbar>\n\n\n        <HelpDialog\n          open={this.state.visual.show_help_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_help_dialog = false;\n            this.setState({visual})\n          }}/>\n\n        \n        <LoadDialog\n          error={this.state.visual.load_dialog_error}\n          open={this.state.visual.show_load_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_load_dialog = false;\n            this.setState({visual, settings:{...this.state.settings, modelID:null}})\n          }}\n          onSubmit={pswd => {\n            var environment = this.state.environment;\n            var decrypted = Decrypt(environment.encrypted_model, pswd)\n            if (decrypted) {\n              this.loadDecryptedModel(decrypted)\n            } else {\n              var visual = this.state.visual;\n              visual.load_dialog_error = true;\n              this.setState({visual})\n              this.showNotification('Wrong password', 'error')\n            }\n          }}/>\n\n\n        <SaveDialog\n          error={this.state.visual.save_dialog_error}\n          open={this.state.visual.show_save_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n          }}\n          onSubmit={pswd => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n            PostToDataBase(Encrypt(Library2String(this.state), (pswd === '' ? 'Hello world' : pswd)), model_id => {\n\n              // Loading from state\n              var settings = this.state.settings;\n              var newUrl = settings.baseUrl + '?p=' + model_id;\n\n              // Setting model id\n              settings.modelID = model_id;\n\n              // Updating state\n              this.setState({settings})\n\n              // Updating code\n              this.updateCode()\n\n              // Changing current url\n              window.history.pushState({}, model_id, newUrl);\n\n              // Copy link to clip-board and display notification\n              copy(newUrl)\n              this.showNotification('Model saved and link copied to clip-board')\n\n            })\n          }}/>\n      \n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { getBaseLibrary } from \"./libraries/base_library\";\nimport { getPyTorchLibrary } from \"./libraries/pytorch_library\";\nimport { getTensorFlowLibrary } from \"./libraries/tensorflow_library\";\nimport { getPyTorchAutoparams } from \"./libraries/pytorch_autoparams\";\n\nexport function MainLibrary() {\n  return {\n    flowpoints: {},\n    environment: {\n      getBaseLibrary: getBaseLibrary,\n      baseLib: getBaseLibrary(),\n      library: 'pytorch',\n      libraryFetchers: {\n        pytorch: getPyTorchLibrary,\n        tensorflow: getTensorFlowLibrary\n      },\n      autoparams: {\n        pytorch: getPyTorchAutoparams\n      },\n      availableLayers: [],\n      code: 'Dont panick',\n      encrypted_model: '',\n      notes: '',\n      order: [],\n      dummies: {},\n      batch_first: true\n    },\n    visual: {\n      darkTheme: false,\n      theme: 'indigo',\n      background: 'white',\n      variant: 'outlined',\n      drawerOpen: false,\n      drawerWidth: 360,\n      showShape: false,\n      showName: false,\n      snap: true,\n      show_load_dialog: false,\n      load_dialog_error: false,\n      show_save_dialog: false,\n      show_help_dialog: false\n    },\n    settings: {\n      tab: 'Misc',\n      modelID: null,\n      baseUrl: window.location.href.split('/?')[0],\n      count: 0,\n      selected: null,\n      lastPos: {x:50, y:-40}\n    },\n    notification: {\n      show: false,\n      content: {\n        msg: 'Hello world',\n        color: '#00e676'\n      },\n      queue: []\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}