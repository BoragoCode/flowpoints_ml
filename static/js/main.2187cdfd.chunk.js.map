{"version":3,"sources":["sidebar/SidebarHead.js","sidebar/FrontHelpers.js","sidebar/MiscTab.js","sidebar/CodeTab.js","sidebar/FlowpointTab.js","sidebar/SidebarContents.js","sidebar/TabContainer.js","sidebar/Sidebar.js","MainButtons.js","parser/FlowOrder.js","parser/PytorchParser.js","parser/Parser.js","parser/TensorflowParser.js","libraries/base_library.js","libraries/pytorch_library.js","libraries/tensorflow_library.js","libraries/pytorch_autoparams.js","LibraryParser.js","DataBaseHandler.js","Cryptographer.js","PasswordDialog.js","HelpDialog.js","App.js","MainLibrary.js","serviceWorker.js","index.js"],"names":["SidebarHead","props","react_default","a","createElement","Typography_default","href","gutterBottom","variant","component","style","padding","index_es","color","underline","position","right","top","IconButton_default","target","index_esm","TextFieldContainer","label","value","placeholder","type","rows","margin","multiline","onChange","e","SelectContainer","FormControl_default","htmlFor","inputProps","name","id","options","map","opt","Autosuggest","_React$Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msg","initmsg","open","arrow_idx","wrapperRef","handleClickOutside","bind","assertThisInitialized","inherits","createClass","key","document","addEventListener","removeEventListener","contains","setState","_this2","opt_keys","idx","keys","chips","val","push","fontSize","height","marginLeft","backgroundColor","toLowerCase","includes","selected","onClick","class","length","disabled","width","paddingTop","marginTop","onKeyDown","keyCode","Math","max","min","ref","node","maxHeight","overflow","React","Component","SwitchContainer","clickable","marginBottom","themes","variants","htmlToImage","require","NotesSection","FrontHelpers_TextFieldContainer","environment","notes","refresh","updateEnvironment","EnvironmentSection","FrontHelpers_SelectContainer","library","libraryFetchers","updateAvailableLayers","CustomizeViewSection","visual","theme","paddingRight","paddingBottom","updateVisual","tmp","FrontHelpers_SwitchContainer","autoparams","showShape","prepOutputShapes","diagramRef","toPng","then","dataUrl","Image","src","link","download","click","MiscTab","MiscTab_EnvironmentSection","MiscTab_CustomizeViewSection","MiscTab_NotesSection","github","hljs","background","CodeTab","codetheme","darkTheme","atelierForestDark","default_highlight","language","showLineNumbers","code","fieldChanger","updateFlowpoints","flowpoints","settings","content","parameters","ParametersSection","point","fields","int","float","select","tuple","bool","string","unknown","base_ref","p_key","parameter","istuple","new_value","n_dims","round","Infinity","dims","Array","from","dimensions","ButtonContainer","title","tooltip","placement","aria-label","children","SettingsSection","FrontHelpers_Autosuggest","availableLayers","getEmptyFlowpointContent","FlowpointTab_ButtonContainer","deleteSelected","Delete_default","is_output","concat_inputs","concat_dim","FlowpointTab","display","verticalAlign","textAlign","show_param_section","FlowpointTab_SettingsSection","FlowpointTab_ParametersSection","SidebarContents","tab","MiscTab_MiscTab","updateSettings","notification","CodeTab_CodeTab","FlowpointTab_FlowpointTab","TabContainer","undefined","tabs","indexOf","classes","ceil","className","root","Tabs_default","onSelectTab","textColor","tabsRoot","indicator","tabsIndicator","scrollButtons","Tab_default","disableRipple","tabRoot","tabSelected","withStyles","flexGrow","borderBottom","textTransform","minWidth","fontWeight","typography","fontWeightRegular","marginRight","spacing","unit","fontFamily","join","&:hover","opacity","&$tabSelected","&:focus","darkMuiTheme","createMuiTheme","palette","useNextVariants","lightMuiTheme","Sidebar","styles","Drawer_default","anchor","drawerOpen","maxWidth","drawerWidth","SidebarHead_SidebarHead","sidebar_TabContainer","SidebarContents_SidebarContents","disableTriggerFocus","disableFocusListener","zIndex","boxShadow","MainButtons","bottom","left","transition","MainButtons_ButtonContainer","addFlowpoint","Add_default","copyCode","FileCopy_default","createLink","Link_default","showHideHelp","Help_default","showHide","Menu_default","getPointName","p","replace","dent","indent","n","FormatInitParams","indentation","max_l","param","i","substring","FormatParamInputs","input_keys","isDownStream","dummies","target_key","test_key","r_key","downStreamTested","recIsDownStream","found_downstream","outputs","out_key","recGetOrder","order","dummy","ordered","ready","inputs","isReady","sort","getStateNames","states","last_user","max_index","getLastUser","FlowOrder","inps","getInputs","is_recurrent","getDummyLibrary","init_states","outs","getStateName","getOutputTargetName","code_parsers","pytorch","need_flattening","Flatten","state_msg","reference","Constructor","StartupRoutines","formated_inputs","p_name","Predict","step_lib","step_msg","inp_key","step","slice","Forward","FitStep","ValidationStep","Fit","PlotHist","pointcode","SaveLoad","tensorflow","current_point_name","current_point_key","rawparams","raw_p_key","concatname","addname","modelID","getBaseLibrary","AbstractRNNCell","Activation","ActivityRegularization","AdaptiveAvgPool1d","AdaptiveAvgPool2d","AdaptiveAvgPool3d","AdaptiveLogSoftmaxWithLoss","AdaptiveMaxPool1d","AdaptiveMaxPool2d","AdaptiveMaxPool3d","Add","AlphaDropout","Average","AveragePooling1D","AveragePooling2D","AveragePooling3D","AvgPool1d","AvgPool2d","AvgPool3d","BatchNorm1d","BatchNorm2d","BatchNorm3d","BatchNormalization","Bidirectional","Bilinear","CELU","Concatenate","ConstantPad1d","ConstantPad2d","ConstantPad3d","Conv1d","Conv2d","Conv3d","ConvLSTM2D","ConvTranspose1d","ConvTranspose2d","ConvTranspose3d","Cropping1D","Cropping2D","Cropping3D","Dense","DenseFeatures","DepthwiseConv2D","Dot","Dropout","Dropout2d","Dropout3d","ELU","Embedding","EmbeddingBag","Fold","FractionalMaxPool2d","GRU","GRUCell","GaussianDropout","GaussianNoise","GlobalAveragePooling1D","GlobalAveragePooling2D","GlobalAveragePooling3D","GlobalMaxPool1D","GlobalMaxPool2D","GlobalMaxPool3D","GroupNorm","Hardshrink","Hardtanh","Identity","InputLayer","InputSpec","InstanceNorm1d","InstanceNorm2d","InstanceNorm3d","LPPool1d","LPPool2d","LSTM","LSTMCell","Lambda","Layer","LayerNorm","LeakyReLU","Linear","LinearModel","LocalResponseNorm","LocallyConnected1D","LocallyConnected2D","LogSigmoid","LogSoftmax","Masking","MaxPool1d","MaxPool2d","MaxPool3d","MaxUnpool1d","MaxUnpool2d","MaxUnpool3d","Maximum","Minimum","MultiheadAttention","Multiply","PReLU","Permute","RNN","RNNCell","RReLU","ReLU","ReLU6","ReflectionPad1d","ReflectionPad2d","RepeatVector","ReplicationPad1d","ReplicationPad2d","ReplicationPad3d","Reshape","SELU","SeparableConv1D","SeparableConv2D","Sigmoid","SimpleRNN","SimpleRNNCell","Softmax","Softmax2d","Softmin","Softplus","Softshrink","Softsign","SpatialDropout1D","SpatialDropout2D","SpatialDropout3D","StackedRNNCells","Subtract","SyncBatchNorm","Tanh","Tanhshrink","Threshold","ThresholdedReLU","TimeDistributed","Unfold","UpSampling1D","UpSampling2D","UpSampling3D","Wrapper","ZeroPad2d","ZeroPadding1D","ZeroPadding2D","ZeroPadding3D","getPyTorchLibrary","output_size","in_features","n_classes","cutoffs","div_value","head_bias","return_indices","inplace","kernel_size","stride","ceil_mode","count_include_pad","num_features","eps","momentum","affine","track_running_stats","in1_features","in2_features","out_features","bias","alpha","in_channels","out_channels","padding_mode","dilation","groups","output_padding","num_embeddings","embedding_dim","padding_idx","max_norm","norm_type","scale_grad_by_freq","sparse","mode","output_ratio","input_size","hidden_size","num_layers","batch_first","dropout","bidirectional","num_groups","num_channels","lambd","min_val","max_val","normalized_shape","elementwise_affine","negative_slope","size","beta","k","dim","embed_dim","num_heads","num_parameters","init","nonlinearity","lower","upper","threshold","getTensorFlowLibrary","trainable","dtype","dynamic","activation","l1","l2","rate","noise_shape","seed","pool_size","strides","data_format","axis","epsilon","center","scale","beta_initializer","gamma_initializer","moving_mean_initializer","moving_variance_initializer","beta_regularizer","gamma_regularizer","beta_constraint","gamma_constraint","renorm","renorm_clipping","renorm_momentum","fused","virtual_batch_size","adjustment","layer","merge_mode","weights","Conv1D","filters","dilation_rate","use_bias","kernel_initializer","bias_initializer","kernel_regularizer","bias_regularizer","activity_regularizer","kernel_constraint","bias_constraint","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","recurrent_activation","recurrent_initializer","unit_forget_bias","recurrent_regularizer","recurrent_constraint","return_sequences","go_backwards","stateful","recurrent_dropout","cropping","units","feature_columns","depth_multiplier","depthwise_initializer","depthwise_regularizer","depthwise_constraint","axes","normalize","input_dim","output_dim","embeddings_initializer","embeddings_regularizer","embeddings_constraint","mask_zero","input_length","implementation","return_state","unroll","time_major","reset_after","stddev","shape","ndim","max_ndim","min_ndim","function","output_shape","mask","arguments",")","sparse_combiner","mask_value","MaxPool1D","MaxPool2D","MaxPool3D","alpha_initializer","alpha_regularizer","alpha_constraint","shared_axes","cell","max_value","target_shape","pointwise_initializer","pointwise_regularizer","pointwise_constraint","cells","theta","interpolation","getPyTorchAutoparams","outshape","inp","floor","current","L_in","L_out","H_in","W_in","H_out","W_out","D_in","D_out","features","out_shape","index","SimplifyParameters","new_parameters","DeSimplifyParameters","recipe","JSON","parse","stringify","new_param_lib","SimplifyOutputs","new_outputs","DeSimplifyOutputs","new_outputs_lib","SimplifyFlowpoint","flowpoint","pos","new_flowpoint","isout","out","x","y","cont","new_content","library_key","SimplifyContent","DeSimplifyFlowpoint","new_flowpoint_lib","new_content_lib","DeSimplifyContent","SimplifyFlowpoints","new_flowpoints","DeSimplifyFlowpoints","new_flowpoints_lib","lib_key","param_key","isArray","param_key_2","p2","console","log","FixTuples","DeSimplifyEnvironment","env","main_env","new_env_lib","DeSimplifyVisual","vis","main_vis","new_vis_lib","showName","snap","DeSimplifySettings","main_set","new_set_lib","count","lastPos","DeSimplify","main_lib","err","TryParseJSON","Library2String","Simplify","axios","rjust","rep","getId","l","lib","random","d","Date","getSeconds","getMinutes","getHours","getDate","getMonth","num2bigBase","num","parseInt","getYear","toString","CryptoJS","ReplaceAll","str","search","replacement","newstr","split","getSpecialsLib","reversed","§","\"","#","%","&","=","`","^","+","´","¨","revlib","Decrypt","data","specials","decrypted","AES","decrypt","enc","Utf8","WhatIsThis","Button_default","Collapse_default","in","paragraph","LoadDialog","_React$Component2","_this3","pswd","fieldRef","_this4","Dialog_default","onClose","aria-labelledby","aria-describedby","DialogTitle_default","DialogContent_default","DialogContentText_default","PasswordDialog_WhatIsThis","focus","autoComplete","onSubmit","preventDefault","TextField_default","error","InputLabelProps","shrink","inputRef","input","DialogActions_default","continueMsg","SaveDialog","_React$Component3","_this5","_this6","HelpDialog","goTo","fullWidth","activeStep","orientation","completed","App","baseLib","encrypted_model","show_load_dialog","load_dialog_error","show_save_dialog","show_help_dialog","baseUrl","window","location","show","queue","showNotification","updateCode","loadDecryptedModel","deleteFlowpoint","handleClick","cb","query","get","res","concat_data","raw","number","getTime","shift","flow_order","DefaultMessage","Parser","Input","layer_key","visited","dimkey","tmp_autoparams","bestInp","prevshape","model_id","new_state","objectSpread","0","1","2","3","base_point","newPoint","copy","shiftKey","pointA","Sidebar_Sidebar","dist","getDiagramRef","avoidCollisions","startPosition","onDrag","paddingLeft","shapeBox","MainButtons_MainButtons","autoHideDuration","onExited","anchorOrigin","vertical","horizontal","message","HelpDialog_HelpDialog","PasswordDialog_LoadDialog","PasswordDialog_SaveDialog","save_dialog_error","match","url","PostToDataBase","toEncrypt","test_string","encrypted","encrypt","Encrypt","newUrl","history","pushState","Boolean","hostname","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.2187cdfd.chunk.js","sourcesContent":["import React from 'react';\n\n// Material\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\n\n// Icons\nimport { FaGithub, FaLinkedin, FaNpm } from \"react-icons/fa\";\nimport { Link } from '@material-ui/core';\n\n\nexport const SidebarHead = props => {\n  return (\n    <div>\n\n      <Typography href='https://mariusbrataas.github.io/flowpoints_ml' gutterBottom variant=\"h5\" component=\"h2\" style={{padding:'15px'}}>\n        <Link href='https://mariusbrataas.github.io/flowpoints_ml' color='inherit' underline='none'>\n          Flowpoints\n        </Link>\n      </Typography>\n\n      <div style={{position:'absolute', right:5, top:5}}>\n        <IconButton target='_blank' href='https://www.npmjs.com/package/flowpoints'>\n          <FaNpm/>\n        </IconButton>\n        <IconButton target='_blank' href='https://www.linkedin.com/in/mariusbrataas/'>\n          <FaLinkedin/>\n        </IconButton>\n        <IconButton target='_blank' href='https://github.com/mariusbrataas/flowpoints_ml#readme'>\n          <FaGithub/>\n        </IconButton>\n      </div>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport './FrontHelpers.css'\n\n// Material\nimport FormControl from '@material-ui/core/FormControl';\nimport { Paper, InputLabel, Select, MenuItem, FormControlLabel, Switch, TextField, Tooltip, Chip } from '@material-ui/core';\n\n\nexport const TextFieldContainer = props => {\n  return (\n    <TextField\n      label={props.label}\n      value={props.value}\n      placeholder={props.placeholder}\n      type={props.type}\n      rows={props.rows}\n      variant={props.variant}\n      margin={props.margin ? props.margin : 'tight'}\n      style={props.style}\n      multiline={props.multiline}\n      onChange={e => {\n        if (props.onChange) props.onChange(e.target.value)\n      }}/>\n  )\n}\n\n\nexport const SelectContainer = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            props.options.map(opt => {\n              return (\n                <MenuItem value={opt}>{opt}</MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport const SelectContainerTooltips = props => {\n  return (\n    <FormControl style={props.style}>\n        <InputLabel htmlFor='selectContainer'>{props.label}</InputLabel>\n        <Select\n          value={props.value}\n          inputProps={{ name:'selectCont', id:'selectContainer' }}\n          onChange={e => {\n            if (props.onChange) props.onChange(e.target.value)\n          }}>\n          {\n            Object.keys(props.options).map(opt => {\n              var chips = []\n              props.options[opt].map(val => {\n                chips.push(\n                  <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n                )\n              })\n              return (\n                <MenuItem value={opt}>\n                <div class='container'>\n                  <div class='option'>{opt}</div>\n                  <div class='chips'>{chips}</div>\n                </div>\n                </MenuItem>\n              )\n            })\n          }\n        </Select>\n    </FormControl>\n  )\n}\n\n\nexport class Autosuggest extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      msg: this.props.value,\n      initmsg: this.props.value,\n      options: this.props.options,\n      open: false,\n      arrow_idx: 0\n    }\n    this.wrapperRef = null;\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('mousedown', this.handleClickOutside);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleClickOutside);\n  }\n  handleClickOutside(e) {\n    if (this.wrapperRef && !this.wrapperRef.contains(e.target)) this.setState({open:false, msg:this.props.value})\n  }\n  render() {\n    if (this.state.initmsg !== this.props.value) {\n      this.setState({\n        msg: this.props.value,\n        initmsg: this.props.value,\n        open: false,\n        arrow_idx: 0\n      })\n    }\n    var options = [];\n    var opt_keys = [];\n    var idx = 0;\n    Object.keys(this.state.options).map(opt => {\n      var chips = [];\n      this.state.options[opt].map(val => {\n        chips.push(\n          <Chip label={val === 'pytorch' ? 'PT' : 'TF'} style={{fontSize:10, height:'85%', marginLeft:2, color:'white', backgroundColor:(val === 'pytorch' ? '#90caf9' : '#ffcc80')}}/>\n        )\n      })\n      if (opt.toLowerCase().includes(this.state.msg.toLowerCase())) {\n        options.push(\n          <MenuItem\n            value={opt}\n            selected={this.state.arrow_idx === idx}\n            onClick={e => {\n              this.setState({arrow_idx:idx, msg:opt, open:false})\n              if (this.props.onChange) this.props.onChange(opt)\n            }}>\n            <div class='container'>\n              <div class='option'>{opt}</div>\n              <div class='chips'>{chips}</div>\n            </div>\n          </MenuItem>\n        )\n        opt_keys.push(opt)\n        idx += 1\n      }\n    })\n    if (options.length === 0) options.push( <MenuItem disabled value='Nothing'>No available layers</MenuItem> )\n    return (\n      <div style={{width:'100%'}}>\n        <TextField\n          style={{width:'100%', paddingTop:0, marginTop:0}}\n          onClick={() => {this.setState({open:!this.state.open})}}\n          label=\"Layer type\"\n          value={this.state.msg}\n          onChange={e => {this.setState({msg:e.target.value, arrow_idx:0, open:true})}}\n          margin=\"normal\"\n          onKeyDown={e => {\n            if (e.keyCode === 40) {\n              this.setState({arrow_idx: Math.max(Math.min(options.length - 1, this.state.arrow_idx + 1), 0)})\n            } else if (e.keyCode === 38) {\n              this.setState({arrow_idx: Math.min(Math.max(0, this.state.arrow_idx - 1), options.length)})\n            } else if (e.keyCode === 13) {\n              if (opt_keys.length > this.state.arrow_idx) {\n                this.setState({msg:opt_keys[this.state.arrow_idx], open:false})\n                if (this.props.onChange) this.props.onChange(opt_keys[this.state.arrow_idx])\n              }\n            }\n          }}\n        />\n        {\n          this.state.open ? <div ref={node => {this.wrapperRef = node}}>\n            <Paper style={{maxHeight:'40vh', overflow:'scroll'}}>\n              {\n                options\n              }\n            </Paper></div> : null\n        }\n      </div>\n    )\n  }\n}\n\n\n/*export const SwitchContainer = props => {\n  return (\n    <FormControlLabel\n      style={props.style}\n      control={\n        <Switch\n          checked={props.value}\n          color='primary'\n          onChange={e => {\n            if (props.onChange) props.onChange(!props.value)\n          }}/>\n      }\n      label={props.label}/>\n  )\n}*/\n\n\nexport const SwitchContainer = props => {\n  return (\n    <Chip\n      label={props.label}\n      clickable\n      style={{\n        marginLeft:5,\n        marginTop:2,\n        marginBottom:2,\n        backgroundColor:(props.value ? '#64b5f6' : '#e0e0e0'),\n        color:(props.value ? 'white' : '#424242')\n      }}\n      onClick={e => {\n        if (props.onChange) props.onChange(!props.value)\n      }}/>\n  )\n}\n\nexport const themes = [\n  'red',\n  'pink',\n  'purple',\n  'deep-purple',\n  'indigo',\n  'blue',\n  'light-blue',\n  'green',\n  'light-green',\n  'lime',\n  'yellow',\n  'amber',\n  'orange',\n  'deep-orange',\n  'brown',\n  'grey',\n  'blue-grey',\n  'black',\n  'white'\n]\n\nexport const variants = [\n  'paper',\n  'outlined',\n  'filled'\n]","import React, { Component } from 'react';\n\n// Local tools\nimport { SelectContainer, themes, variants, SwitchContainer, TextFieldContainer } from './FrontHelpers.js';\nimport { Button } from '@material-ui/core';\n\n// Other imports\n\nconst htmlToImage = require('html-to-image');\n\n\n\nconst NotesSection = props => {\n  return (\n    <div style={{paddingTop:30}}>\n\n      <TextFieldContainer\n        label='Model notes'\n        multiline={true}\n        value={props.state.environment.notes}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var environment = props.refresh().environment;\n\n          // Changing notes\n          environment.notes = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n        }}/>\n\n    </div>\n  )\n}\n\n\nconst EnvironmentSection = props => {\n  var environment = props.state.environment;\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Environment</h3>\n\n      <SelectContainer\n        label='Library'\n        value={environment.library}\n        options={Object.keys(environment.libraryFetchers)}\n        onChange={val => {\n          \n          // Loading from state\n          var environment = props.refresh().environment;\n          environment.library = val;\n\n          // Updating state\n          props.updateEnvironment(environment)\n\n          // Updating available layers\n          props.updateAvailableLayers()\n\n        }}/>\n\n    </div>\n  )\n}\n\n\nconst CustomizeViewSection = props => {\n  var visual = props.state.visual;\n  var environment = props.state.environment;\n  return (\n    <div style={{paddingTop:20, width:'100%'}}>\n      \n      <h3>Customize view</h3>\n\n      <div>\n\n        <SelectContainer\n          label='Theme'\n          value={visual.theme}\n          options={themes}\n          style={{width:'48%', paddingRight:10, paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.theme = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n        \n        <SelectContainer\n          label='Variant'\n          value={visual.variant}\n          options={variants}\n          style={{width:'48%', paddingBottom:10}}\n          onChange={val => {\n\n            // Loading from state\n            var visual = props.refresh().visual;\n            visual.variant = val;\n\n            // Updating state\n            props.updateVisual(visual)\n\n          }}/>\n\n      </div>\n\n\n      <div style={{paddingTop:20}}>\n        {\n          [\n            {ref:'darkTheme', label:'Dark theme'},\n            {ref:'showName', label:'Show names'}\n          ].map(tmp => {\n            return (\n              <SwitchContainer\n                label={tmp.label}\n                value={visual[tmp.ref]}\n                style={{paddingTop:0}}\n                onChange={val => {\n\n                  // Loading from state\n                  var visual = props.refresh().visual;\n                  visual[tmp.ref] = val;\n\n                  // Updating state\n                  props.updateVisual(visual)\n\n                }}/>\n            )\n          })\n        }\n        {\n          environment.library in environment.autoparams ? <SwitchContainer\n            label='Show shapes'\n            value={visual.showShape}\n            style={{paddingTop:0}}\n            onChange={val => {\n              var visual = props.refresh().visual;\n              visual.showShape = val;\n              props.updateVisual(visual);\n              if (val) props.prepOutputShapes();\n            }}/> : null\n        }\n      </div>\n\n      {\n        props.diagramRef ? <div style={{paddingTop:20}}>\n            <Button\n              variant=\"outlined\"\n              onClick={(e) => {\n                htmlToImage.toPng(props.diagramRef).then(function (dataUrl) {\n                  var img = new Image();\n                  img.src = dataUrl;\n                  var link = document.createElement('a');\n                  link.download = 'diagram.png';\n                  link.href = dataUrl;\n                  link.click();\n                })\n              }}>\n              Export png\n            </Button></div> : null\n      }\n\n    </div>\n  )\n}\n\n\n\nexport const MiscTab = props => {\n  return (\n    <div style={{padding:15}}>\n\n      <EnvironmentSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}\n        updateAvailableLayers={props.updateAvailableLayers}/>\n      \n      <CustomizeViewSection\n        state={props.state}\n        refresh={props.refresh}\n        updateVisual={props.updateVisual}\n        diagramRef={props.diagramRef}\n        prepOutputShapes={props.prepOutputShapes}/>\n      \n      <NotesSection\n        state={props.state}\n        refresh={props.refresh}\n        updateEnvironment={props.updateEnvironment}/>\n      \n    </div>\n  )\n}","import React, { Component } from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { atelierForestDark } from 'react-syntax-highlighter/dist/styles/hljs';\nimport github from 'react-syntax-highlighter/dist/styles/hljs/github';\n\ngithub.hljs.background = '#ffffff';\n\nexport const CodeTab = props => {\n  const codetheme = props.state.visual.darkTheme ? atelierForestDark : github\n  return (\n    <div style={{fontSize:12}}>\n\n      <SyntaxHighlighter language='python' style={codetheme} showLineNumbers>\n      {\n        props.state.environment.code\n      }\n      </SyntaxHighlighter>\n\n    </div>\n  )\n}","import React, { Component } from 'react';\nimport { Autosuggest, SelectContainer, TextFieldContainer, SwitchContainer, SelectContainerTooltips } from './FrontHelpers';\nimport { IconButton, TextField, MenuItem, Paper, FormControl, Chip } from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport { Tooltip } from '@material-ui/core';\n\n\n\nfunction fieldChanger(refresh, updateFlowpoints, key, value) {\n  var state = refresh();\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[environment.library.toLowerCase()].parameters[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\nfunction fieldChanger_input(refresh, updateFlowpoints, key, value) {\n  var state = refresh()\n  var environment = state.environment;\n  var flowpoints = state.flowpoints;\n  const selected = state.settings.selected;\n  flowpoints[selected].content[key].value = value;\n  updateFlowpoints(flowpoints)\n}\n\n\nconst ParametersSection = props => {\n\n  // Point\n  var point = props.state.flowpoints[props.state.settings.selected];\n\n  // Creating all fields\n  var fields = {\n    int: [],\n    float: [],\n    select: [],\n    tuple: [],\n    bool: [],\n    string: [],\n    unknown: []\n  }\n\n  if (point.base_ref !== 'Input') {\n\n    var parameters = point.content[props.state.environment.library.toLowerCase()].parameters;\n\n    // Adding fields\n    Object.keys(parameters).map(p_key => {\n      const parameter = parameters[p_key]\n      if (parameter.istuple) {\n        fields.tuple.push(\n          <div style={{paddingTop:15}}><h5 style={{margin:0}}>{p_key}</h5></div>\n        )\n        parameter.value.map((value, idx) => {\n          fields.tuple.push(\n            <TextFieldContainer\n              label={p_key + ' ' + idx}\n              value={value}\n              type='number'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                var new_value = parameter.value;\n                new_value[idx] = val;\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  new_value\n                )\n              }}/>\n          )\n        })\n      } else {\n\n        switch(parameter.type) {\n          case 'int':\n            fields.int.push(\n              <TextFieldContainer\n                label={p_key}\n                value={parameter.value}\n                type='number'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    val\n                  )\n                }}/>\n            )\n            break;\n          \n          case 'float':\n            fields.float.push(\n              <TextFieldContainer\n                label={p_key}\n                value={parameter.value}\n                type='number'\n                variant='outlined'\n                margin='dense'\n                style={{\n                  width: 150,\n                  paddingRight: 5\n                }}\n                onChange={val => {\n                  fieldChanger(\n                    props.refresh,\n                    props.updateFlowpoints,\n                    p_key,\n                    val\n                  )\n                }}/>\n            )\n            break;\n          \n          case 'string':\n          fields.string.push(\n            <TextFieldContainer\n              label={p_key}\n              value={parameter.value}\n              type='text'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n          \n          case 'bool':\n          fields.bool.push(\n            <SwitchContainer\n              label={p_key}\n              value={parameter.value}\n              onChange={val => {\n                fieldChanger(\n                  props.refresh,\n                  props.updateFlowpoints,\n                  p_key,\n                  val\n                )\n              }}/>\n          )\n          break;\n        \n        case null:\n        fields.unknown.push(\n          <TextFieldContainer\n            label={p_key}\n            value={parameter.value}\n            type='text'\n            variant='outlined'\n            margin='dense'\n            style={{\n              width: 150,\n              paddingRight: 5\n            }}\n            onChange={val => {\n              fieldChanger(\n                props.refresh,\n                props.updateFlowpoints,\n                p_key,\n                val\n              )\n            }}/>\n        )\n        break;\n          \n        case 'select':\n        fields.select.push(\n          <SelectContainer\n            label={p_key}\n            value={parameter.value}\n            options={parameter.options}\n            style={{\n              width: 150,\n              paddingRight: 5\n            }}\n            onChange={val => {\n              fieldChanger(\n                props.refresh,\n                props.updateFlowpoints,\n                p_key,\n                val\n              )\n            }}/>\n        )\n        break;\n\n        }\n\n      }\n    })\n  } else {\n    var parameters = point.content;\n\n    // Adding n_dims field\n    fields.int.push(\n      <TextFieldContainer\n        label='n_dimensions'\n        value={parameters.n_dims}\n        type='number'\n        variant='outlined'\n        margin='dense'\n        style={{\n          width: 150,\n          paddingRight: 5\n        }}\n        onChange={val => {\n\n          val = val === '' ? '' : Math.max(Math.min(Math.round(val), Infinity), 1)\n\n          // Making sure dims got the correct number of parameters\n          var dims = {};\n          Array.from(Array(val).keys()).map(idx => {\n            if (idx in parameters.dimensions) {\n              dims[idx] = parameters.dimensions[idx];\n            } else {\n              dims[idx] = 1;\n            }\n          })\n\n          // Changing parameters\n          var state = props.refresh()\n          var flowpoints = state.flowpoints;\n          const selected = state.settings.selected;\n          flowpoints[selected].content.n_dims = val;\n          flowpoints[selected].content.dimensions = dims;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n    )\n\n\n    // Adding dimensions field\n    fields.tuple.push(\n      <div style={{paddingTop:15}}><h5 style={{margin:0}}>Dimensions</h5></div>\n    )\n    Object.keys(parameters.dimensions).map((p_key, idx) => {\n      fields.tuple.push(\n        <TextFieldContainer\n          label={'dimension ' + p_key}\n          value={parameters.dimensions[p_key]}\n          type='number'\n          variant='outlined'\n          margin='dense'\n          style={{\n            width: 150,\n            paddingRight: 5\n          }}\n          onChange={val => {\n            var state = props.refresh();\n            var flowpoints = state.flowpoints;\n            state.flowpoints[state.settings.selected].content.dimensions[p_key] = val;\n            props.updateFlowpoints(flowpoints)\n          }}/>\n      )\n    })\n  }\n\n\n  if ((fields.int.length + fields.float.length + fields.select.length + fields.tuple.length + fields.bool.length ) > 0) {\n    return (\n      <div>\n  \n        <h3 style={{marginTop:30}}>Parameters</h3>\n  \n        <div>{ fields.int }</div>\n        <div>{ fields.float }</div>\n        <div>{ fields.select }</div>\n        <div>{ fields.tuple }</div>\n        <div>{ fields.string }</div>\n        <div style={{paddingTop:10, marginLeft:-5}}>{ fields.bool }</div>\n        {\n          fields.unknown.length > 0 ? <div>\n            <h5 style={{paddingTop:5, paddingBottom:0}}>Unknown datatypes. Put your own code here.</h5>\n            { fields.unknown }\n          </div> : null\n        }\n  \n      </div>\n    )\n  }\n\n  return null\n\n}\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\">\n      <IconButton\n        aria-label={props.tooltip}\n        style={props.style}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </IconButton>\n    </Tooltip>\n  )\n}\n\n/*\n<SelectContainerTooltips\n        label='Layer type'\n        value={point.base_ref}\n        options={environment.availableLayers}\n        style={{width:'100%'}}\n        onChange={val => {\n\n          // Loading from state\n          var state = props.refresh();\n          var settings = state.settings;\n          var flowpoints = state.flowpoints;\n\n          // Changing flowpoint layer type\n          var point = flowpoints[settings.selected];\n          point.content = props.getEmptyFlowpointContent(val)\n          point.base_ref = val;\n\n          // Updating state\n          props.updateFlowpoints(flowpoints)\n\n        }}/>\n*/\n\n\nconst SettingsSection = props => {\n  var settings = props.state.settings;\n  var flowpoints = props.state.flowpoints;\n  var environment = props.state.environment;\n  const point = flowpoints[settings.selected];\n  return (\n    <div>\n\n      <h3 style={{marginTop:0}}>Flowpoint settings</h3>\n\n        <Autosuggest\n          value={point.base_ref}\n          options={environment.availableLayers}\n          onChange={val => {\n\n            // Loading from state\n            var state = props.refresh();\n            var settings = state.settings;\n            var flowpoints = state.flowpoints;\n  \n            // Changing flowpoint layer type\n            var point = flowpoints[settings.selected];\n            point.content = props.getEmptyFlowpointContent(val)\n            point.base_ref = val;\n  \n            // Updating state\n            props.updateFlowpoints(flowpoints)\n  \n          }}/>\n\n\n        <div style={{paddingTop:15}}>\n\n          <TextFieldContainer\n            label='Layer name'\n            value={point.name}\n            style={{width:'80%'}}\n            onChange={val => {\n\n              // Loading from state\n              var state = props.refresh();\n              var flowpoints = state.flowpoints;\n              var settings = state.settings;\n\n              // Changing layer name\n              flowpoints[settings.selected].name = val;\n\n              // Updating state\n              props.updateFlowpoints(flowpoints)\n\n            }}/>\n\n            <ButtonContainer\n              tooltip='Delete flowpoint'\n              style={{\n                marginLeft: 15,\n                marginTop: 5\n              }}\n              onClick={props.deleteSelected}>\n              <DeleteIcon/>\n            </ButtonContainer>\n\n        </div>\n\n\n        {\n          point.base_ref !== 'Input' ? <div style={{paddingTop:10, marginLeft:-10}}>\n              <SwitchContainer\n                label='Use as output'\n                value={point.is_output}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].is_output = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n                }}/>\n              <SwitchContainer\n                label='Concatenate inputs'\n                value={point.concat_inputs}\n                onChange={val => {\n\n                  // Loading from state\n                  var state = props.refresh();\n                  var flowpoints = state.flowpoints;\n\n                  // Changing layer output\n                  flowpoints[state.settings.selected].concat_inputs = val;\n\n                  // Updating state\n                  props.updateFlowpoints(flowpoints);\n\n              }}/>\n            </div> : null\n        }\n\n        {\n          point.concat_inputs ? <div style={{paddingTop:15}}>\n            <TextFieldContainer\n              label='Concat dim'\n              value={point.concat_dim}\n              type='number'\n              variant='outlined'\n              margin='dense'\n              style={{\n                width: 150,\n                paddingRight: 5\n              }}\n              onChange={val => {\n                var flowpoints = props.refresh().flowpoints;\n                flowpoints[settings.selected].concat_dim = val;\n                props.updateFlowpoints(flowpoints)\n              }}/>\n          </div> : null\n        }\n\n    </div>\n  )\n}\n\n\n\nexport const FlowpointTab = props => {\n  var settings = props.state.settings;\n\n  // Nothing selected? Returning msg to select something\n  if (settings.selected === null) {\n    return (\n      <div style={{display:'table', width:'100%', height:'50px'}}>\n        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n          Select a flowpoint to display it's settings.\n        </div>\n      </div>\n    )\n  }\n\n  // Layer type doesnt exist in current library?\n  var show_param_section = true;\n  if (!(props.state.environment.library in props.state.flowpoints[props.state.settings.selected].content) && props.state.flowpoints[props.state.settings.selected].base_ref !== 'Input') {\n    show_param_section = false;\n  }\n\n  // Paramaters and settings of selected\n  var flowpoints = props.state.flowpoints;\n  const point = flowpoints[settings.selected];\n  return (\n    <div style={{padding:15}}>\n      \n      <SettingsSection\n        state={props.state}\n        refresh={props.refresh}\n        updateFlowpoints={props.updateFlowpoints}\n        getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n        deleteSelected={props.deleteSelected}/>\n      \n      {\n        show_param_section ? <ParametersSection\n          state={props.state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}/> : <div style={{display:'table', width:'100%', height:'50px', paddingTop:20}}>\n            <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n              Layer type is not available in your current library.\n            </div>\n          </div>\n      }\n\n    </div>\n  )\n\n}","import React, { Component } from 'react';\n\n// Importing local tools\nimport { MiscTab } from './MiscTab.js';\nimport { CodeTab } from './CodeTab.js';\nimport { FlowpointTab } from './FlowpointTab.js';\n\n\n// Styles\nimport './SidebarContents.css';\n\nexport const SidebarContents = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <div\n      class='sidebarContents'\n      style={{\n        backgroundColor: (visual.darkTheme ? '#1b1918' : null)\n      }}>\n\n      {\n        settings.tab === 'Misc' ? <MiscTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          updateAvailableLayers={props.updateAvailableLayers}\n          diagramRef={props.diagramRef}\n          prepOutputShapes={props.prepOutputShapes}/> : null\n      }\n      {\n        settings.tab === 'Code' ? <CodeTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}/> : null\n      }\n      {\n        settings.tab === 'Flowpoint' ? <FlowpointTab\n          state={state}\n          refresh={props.refresh}\n          updateFlowpoints={props.updateFlowpoints}\n          updateEnvironment={props.updateEnvironment}\n          updateVisual={props.updateVisual}\n          updateSettings={props.updateSettings}\n          notification={props.notification}\n          getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n          deleteSelected={props.deleteSelected}/> : null\n      }\n\n    </div>\n  )\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\n\n// Styling\nconst styles = theme => ({\n  root: {\n    flexGrow: 0,\n    overflow:'scroll',\n  },\n  tabsRoot: {\n    borderBottom: '1px solid #1890ff',\n  },\n  tabsIndicator: {\n    backgroundColor: '#1890ff',\n  },\n  tabRoot: {\n    textTransform: 'initial',\n    minWidth: 50,\n    fontWeight: theme.typography.fontWeightRegular,\n    marginRight: theme.spacing.unit * 0,\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:hover': {\n      color: '#40a9ff',\n      opacity: 1,\n    },\n    '&$tabSelected': {\n      color: '#1890ff',\n    },\n    '&:focus': {\n      color: '#40a9ff',\n    },\n  },\n  tabSelected: {},\n  typography: {\n    padding: theme.spacing.unit * 0,\n  },\n});\n\n\n// Main class\nclass TabContainer extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: props.tab !== undefined ? props.tabs.indexOf(props.tab) : 0\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { value } = this.state;\n    const width = Math.ceil(this.props.width/this.props.tabs.length) + 'px'\n\n    return (\n      <div className={classes.root} style={{overflow:'hidden'}}>\n        <Tabs\n          value={value}\n          onChange={(e, value) => {\n            this.setState({ value });\n            if (this.props.onSelectTab) this.props.onSelectTab(this.props.tabs[value]);\n          }}\n          textColor=\"primary\"\n          classes={{ root: classes.tabsRoot, indicator: classes.tabsIndicator }}\n          scrollButtons={false}>\n          {\n            this.props.tabs.map(value => {\n              return (\n                <Tab\n                  disableRipple\n                  classes={{ root: classes.tabRoot, selected: classes.tabSelected }}\n                  label={value}\n                  style={{width: width}}\n                />\n              )\n            })\n          }\n        </Tabs>\n      </div>\n    );\n  }\n}\n\n// Setting proptypes\nTabContainer.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\n// Exporting\nexport default withStyles(styles)(TabContainer);\n","import React, { Component } from 'react';\n\n// Styles\nimport './Sidebar.css';\n\n// Material\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\n\n// Local tools\nimport { SidebarHead } from './SidebarHead.js';\nimport { SidebarContents } from './SidebarContents.js';\nimport TabContainer from './TabContainer.js';\n\n\n// Themes\nconst darkMuiTheme = createMuiTheme({\n  palette: {\n    type: 'dark'\n  },\n  typography: { useNextVariants: true }\n});\n\nconst lightMuiTheme = createMuiTheme({\n  palette: {\n    type: 'light'\n  },\n  typography: { useNextVariants: true }\n});\n\n\n// Sidebar\nexport const Sidebar = props => {\n  var state = props.state;\n  var visual = state.visual;\n  var settings = state.settings;\n  return (\n    <MuiThemeProvider theme={visual.darkTheme ? darkMuiTheme : lightMuiTheme}>\n\n      <Drawer variant='persistent' anchor='left' open={visual.drawerOpen}>\n        <div\n          class='fullSidebar'\n          style={{\n            maxWidth: visual.drawerWidth,\n            color: (visual.darkTheme ? 'white' : 'black'),\n            width: visual.drawerWidth\n          }}>\n\n          <SidebarHead/>\n\n          <div>\n            <TabContainer\n              tabs={['Misc', 'Code', 'Flowpoint']}\n              tab={settings.tab}\n              width={360}\n              onSelectTab={tab => {\n\n                // Loading state\n                var state = props.refresh();\n                var settings = state.settings;\n                var visual = state.visual;\n\n                // Changing tab\n                settings.tab = tab;\n\n                // Wider drawer if displaying code\n                if (tab === 'Code') {\n                  visual.drawerWidth = 600;\n                } else {\n                  visual.drawerWidth = 360;\n                }\n\n                // Updating state\n                props.updateSettings(settings);\n                props.updateVisual(visual);\n\n              }}/>\n          </div>\n          \n          <SidebarContents\n            state={state}\n            refresh={props.refresh}\n            updateFlowpoints={props.updateFlowpoints}\n            updateEnvironment={props.updateEnvironment}\n            updateVisual={props.updateVisual}\n            updateSettings={props.updateSettings}\n            notification={props.notification}\n            getEmptyFlowpointContent={props.getEmptyFlowpointContent}\n            deleteSelected={props.deleteSelected}\n            updateAvailableLayers={props.updateAvailableLayers}\n            diagramRef={props.diagramRef}\n            prepOutputShapes={props.prepOutputShapes}/>\n\n        </div>\n      </Drawer>\n\n    </MuiThemeProvider>\n  )\n}","import React, { Component } from 'react';\nimport { Fab, Tooltip } from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport LinkIcon from '@material-ui/icons/Link';\nimport HelpIcon from '@material-ui/icons/Help';\n\n\nconst ButtonContainer = props => {\n  return (\n    <Tooltip title={props.tooltip} placement=\"right\" disableTriggerFocus disableFocusListener>\n      <Fab\n        style={{\n          background: props.color,\n          color: '#ffffff',\n          zIndex: 6,\n          boxShadow: 'none'\n        }}\n        aria-label={props.tooltip}\n        onClick={() => {\n          if (props.onClick) props.onClick()\n        }}>\n        {\n          props.children\n        }\n      </Fab>\n    </Tooltip>\n  )\n}\n\n\nexport const MainButtons = props => {\n  var visual = props.state.visual;\n  return (\n    <div\n      style={{\n        bottom:'5px',\n        left: visual.drawerWidth * visual.drawerOpen + 5 + 'px',\n        position: 'fixed',\n        transition: 'left 0.4s ease-out'\n      }}>\n      <div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#00b0ff'\n            tooltip='Add flowpoint'\n            onClick={props.addFlowpoint}>\n            <AddIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#2979ff'\n            tooltip='Copy code to clip-board'\n            onClick={props.copyCode}>\n            <FileCopyIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#3d5afe'\n            tooltip='Share link to current model'\n            onClick={props.createLink}>\n            <LinkIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div style={{paddingBottom:4}}>\n          <ButtonContainer\n            color='#651fff'\n            tooltip='Help'\n            onClick={props.showHideHelp}>\n            <HelpIcon/>\n          </ButtonContainer>\n        </div>\n\n        <div>\n          <ButtonContainer\n            color='#b0bec5'\n            tooltip='Show/hide sidebar'\n            onClick={props.showHide}>\n            <MenuIcon/>\n          </ButtonContainer>\n        </div>\n\n      </div>\n    </div>\n  )\n}","export function getPointName(flowpoints, key) {\n  let p = flowpoints[key];\n  return (p.name === '' ? ('p_' + key) : p.name).replace(/ /g, '_')\n}\n\n\nexport function dent(indent, n) {\n  var msg = ''\n  Array.from(Array(n).keys()).map(idx => msg += indent)\n  return msg\n}\n\n\nexport function FormatInitParams(parameters, indentation, indent, padding) {\n  if (padding === undefined) padding = true\n  // Getting longest parameter name\n  var max_l = 0;\n  Object.keys(parameters).map(p_key => {\n    if (parameters[p_key].value !== 'None') max_l = Math.max(p_key.length, max_l)\n  })\n  var msg = ''\n  if (padding) msg += '('\n  Object.keys(parameters).map(p_key => {\n    let param = parameters[p_key];\n\n    if (param.value !== 'None') {\n      // Adding argument\n      msg += '\\n' + dent(indent, indentation + 1) + p_key\n\n      // Aligning with other arguments\n      for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n      msg += ' = '\n\n      // Adding argument values\n      if (param.istuple) {\n        // Tuples are put in between parantheses\n        msg += '(';\n        param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n        msg = msg.substring(0, msg.length - 1) + ')';\n      } else if (param.type === 'select') {\n        msg += \"'\" + param.value + \"'\";\n      } else if (param.type === 'bool') {\n        msg += (param.value === true ? 'True' : 'False')\n      } else if (param.type === 'string') {\n        msg += '\"' + param.value + '\"'\n      } else {\n        msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n      }\n      msg += ','\n    }\n  })\n  if (padding) {\n    if (max_l > 0) {\n      msg += '\\n' + dent(indent, 1)\n    }\n    msg += ')'\n  }\n  return msg\n}\n\n\nexport function FormatParamInputs(flowpoints, input_keys) {\n  var msg = ''\n  input_keys.map(key => msg += getPointName(flowpoints, key) + ', ')\n  if (input_keys.length > 0) msg = msg.substring(0, msg.length - 2)\n  return msg\n}\n\n\nfunction getDummyLibrary(flowpoints) {\n  var dummies = {}\n  Object.keys(flowpoints).map(key => {\n    var dummy = {\n      base_ref: flowpoints[key].base_ref,\n      name: flowpoints[key].name,\n      inputs: [],\n      outputs: [],\n      ordered: false,\n      ready: false,\n      downStreamTested: false,\n      is_recurrent: false\n    }\n    Object.keys(flowpoints[key].outputs).map(out_key => {\n      dummy.outputs.push(out_key)\n    })\n    if (flowpoints[key].base_ref === 'Input') {\n      dummy.ready = true;\n    }\n    dummies[key] = dummy;\n  })\n\n  // Adding corresponding inputs\n  Object.keys(dummies).map(key => {\n    dummies[key].outputs.map(out_key => {\n      dummies[out_key].inputs.push(key)\n    })\n  })\n\n  // Returning\n  return dummies\n\n}\n\n\nfunction getInputs(flowpoints) {\n  var inps = [];\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Input') inps.push(key)\n  })\n  return inps\n}\n\n\nfunction recIsDownStream(dummies, target_key, test_key) {\n\n  // Returning if matching\n  if (target_key === test_key) return true;\n\n  // Continue only if havent been visited before\n  var found_downstream = false\n  if (!dummies[test_key].downStreamTested) {\n\n    // Marking self as visited on this run\n    dummies[test_key].downStreamTested = true;\n\n    // Looking deeper down\n    dummies[test_key].outputs.map(out_key => {\n      if (!found_downstream) {\n        found_downstream = recIsDownStream(dummies, target_key, out_key)\n      }\n    })\n  }\n\n  // Returning\n  return found_downstream\n\n}\n\n\nfunction isDownStream(dummies, target_key, test_key) {\n\n  // Resetting downstream helpers\n  Object.keys(dummies).map(r_key => dummies[r_key].downStreamTested = false)\n\n  // Running checks\n  return recIsDownStream(dummies, target_key, test_key)\n\n}\n\n\nfunction isReady(dummies, key) {\n  var ready = true;\n  dummies[key].inputs.map(test_key => {\n    if ((!dummies[test_key].ready && !isDownStream(dummies, test_key, key))) {\n      ready = false;\n    }\n  })\n  return ready\n}\n\n\nfunction recGetOrder(order, dummies, key) {\n\n  // Helper\n  var dummy = dummies[key];\n\n  // Checking dummy, going deeper\n  if (dummy) {\n\n    // Visited before? -> Return\n    if (dummy.ordered) return order\n\n    // Dummy ready?\n    if (isReady(dummies, key)) {\n\n      // Making sure dummy is ready\n      dummy.ready = true;\n\n      // Making sure dummy is added to order\n      dummy.ordered = true;\n      if (!order.includes(key)) order.push(key)\n\n      // Going deeper\n      dummy.outputs.sort().map(out_key => order = recGetOrder(order, dummies, out_key))\n\n    }\n\n  }\n\n  // Returning\n  return order\n\n}\n\n\nfunction getLastUser(order, dummies, target_key) {\n  var max_index = -1;\n  order.map((test_key, idx) => {\n    if (dummies[test_key].inputs.includes(target_key)) max_index = Math.max(max_index, idx)\n  })\n  return order[max_index]\n}\n\n\nfunction getStateNames(order, dummies) {\n  var states = {};\n\n  // Adding all states\n  order.map((key, idx) => {\n    const point = dummies[key];\n\n    // Adding to states\n    if (!(key in states)) {\n      states[key] = getPointName(dummies, key) + (point.base_ref === 'Input' ? '' : '_state');\n    }\n\n    // Setting state of last user\n    const last_user = getLastUser(order, dummies, key);\n    if (last_user !== null) {\n      states[last_user] = states[key];\n    }\n\n  })\n\n  // Setting state of last node to default\n  states[order[order.length - 1]] = 'self.state'\n\n  // Returning\n  return states\n\n}\n\n\nexport function FlowOrder(state) {\n\n  // Init helpers\n  var inps = getInputs(state.flowpoints);\n  var dummies = getDummyLibrary(state.flowpoints);\n  var order = [];\n  var init_states = [];\n  var outs = [];\n\n  // Adding input flowpoints to beginning of order\n  inps.map(key => order.push(key));\n\n  // Recursively mapping tree\n  inps.map(key => order = recGetOrder(order, dummies, key));\n\n  // Flagging flowpoints with recurrent connections and getting init states\n  order.map((key, idx) => {\n    var is_recurrent = false;\n    dummies[key].outputs.map(out_key => {\n      if (idx > order.indexOf(out_key) && !is_recurrent) is_recurrent = true;\n    })\n    if (is_recurrent || state.flowpoints[key].is_output) {\n      dummies[key].is_recurrent = true;\n      init_states.push(key)\n    }\n  })\n\n  // Outputs\n  order.map(key => {\n    if (state.flowpoints[key].is_output) outs.push(key)\n  })\n  if (outs.length === 0) outs = [order[order.length - 1]]\n\n  // State names\n  var states = getStateNames(order, dummies);\n\n  // Returning\n  return {order, inps, states, dummies, init_states, outs}\n\n}","import { getPointName, FormatParamInputs, dent } from \"./FlowOrder\";\n\n\nfunction getStateName(key, flowpoints, states, init_states) {\n  if (init_states.includes(key)) {\n    return 'self.' + getPointName(flowpoints, key) + '_state'\n  }\n  return states[key]\n}\n\n\nfunction getOutputTargetName(key, flowpoints) {\n  return getPointName(flowpoints, key) + '_target'\n}\n\n\nfunction PyTorchImports(indent) {\n  var msg = '# Importing PyTorch tools'\n  msg += '\\nimport torch'\n  msg += '\\nfrom torch import nn, optim, cuda'\n  msg += '\\n\\n\\n# Importing other libraries'\n  msg += '\\nimport numpy as np'\n  msg += '\\nimport matplotlib.pyplot as plt'\n  msg += '\\nimport time'\n  return msg\n}\n\n\nfunction Flatten(indent) {\n  var msg = '# Helper class for flattening'\n  msg += '\\nclass Flatten(nn.Module):'\n  msg += '\\n' + dent(indent, 1) + 'def __init__(self):'\n  msg += '\\n' + dent(indent, 2) + 'super(Flatten, self).__init__()'\n  msg += '\\n' + dent(indent, 1) + 'def forward(self, x):'\n  msg += '\\n' + dent(indent, 2) + 'return x.view(x.shape[0], -1)'\n  return msg\n}\n\n\n\nfunction Constructor(state, order, indent, dummies, states, init_states) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n  \n  // Basics\n  var msg = '# Model'\n  msg += '\\nclass NeuralNet(nn.Module):'\n  msg += '\\n\\n\\n' + dent(indent, 1) + 'def __init__(self, optimizer=optim.SGD, alpha=0.01, criterion=nn.CrossEntropyLoss(), use_cuda=None):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Basics'\n  msg += '\\n' + dent(indent, 2) + 'super(NeuralNet, self).__init__()'\n  msg += '\\n\\n' + dent(indent, 2) + '# Settings'\n  msg += '\\n' + dent(indent, 2) + 'self.optim_type = optimizer'\n  msg += '\\n' + dent(indent, 2) + 'self.optimizer  = None'\n  msg += '\\n' + dent(indent, 2) + 'self.alpha      = alpha'\n  msg += '\\n' + dent(indent, 2) + 'self.criterion  = criterion'\n  msg += '\\n\\n' + dent(indent, 2) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 2) + 'self.use_cuda = use_cuda if (use_cuda != None and cuda.is_available()) else cuda.is_available()'\n  msg += '\\n\\n' + dent(indent, 2) + '# Current loss and loss history'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss      = 0'\n  msg += '\\n' + dent(indent, 2) + 'self.valid_loss      = 0'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss_hist = []'\n  msg += '\\n' + dent(indent, 2) + 'self.valid_loss_hist = []'\n\n  // Prep aligning recurrent states\n  var max_l = 0;\n  order.map(key => {\n    let dummy = dummies[key];\n    if (dummy.is_recurrent) {\n      max_l = Math.max(max_l, getStateName(key, flowpoints, states, init_states).length);\n    }\n  })\n\n  // Initializing recurrent states\n  if (max_l > 0) {\n    var state_msg = dent(indent, 2) + '# Initializing states with placeholder tensors';\n    order.map(key => {\n      let dummy = dummies[key];\n      if (dummy.is_recurrent) {\n\n        // Init state\n        state_msg += '\\n' + dent(indent, 2) + getStateName(key, flowpoints, states, init_states)\n\n        // Aligning equals sign\n        for (var i = 0; i < max_l - getStateName(key, flowpoints, states, init_states).length; i++) state_msg += ' '\n        state_msg += ' = torch.tensor([0], dtype=torch.float64)'\n\n      }\n    })\n    msg += '\\n\\n' + state_msg\n  }\n\n  // Initializing all layers\n  msg += '\\n\\n' + dent(indent, 2) + '# Initializing all layers'\n  order.map(key => {\n    let point = flowpoints[key];\n    \n    if (point.base_ref !== 'Input') {\n      let content = point.content[environment.library.toLowerCase()];\n      let parameters = content.parameters\n\n      // Getting longest parameter name\n      var max_l = 0;\n      Object.keys(parameters).map(p_key => max_l = Math.max(p_key.length, max_l))\n\n      // Init object\n      msg += '\\n' + dent(indent, 2) + 'self.' + getPointName(flowpoints, key) + ' = ' + (point.base_ref === 'Flatten' ? '' : 'nn.') + content.reference + '(';\n\n      // Adding arguments\n      Object.keys(parameters).map(p_key => {\n        let param = parameters[p_key];\n        \n        // Adding argument\n        msg += '\\n' + dent(indent, 3) + p_key\n\n        // Aligning with other arguments\n        for (var i = 0; i < max_l - p_key.length; i++) msg += ' '\n        msg += ' = '\n\n        // Adding argument values\n        if (param.istuple) {\n          // Tuples are put in between parantheses\n          msg += '(';\n          param.value.map(val => msg += (val === '' ? (param.min === Infinity ? 0 : param.min) : val) + ',');\n          msg = msg.substring(0, msg.length - 1) + ')';\n        } else if (param.type === 'select') {\n          msg += \"'\" + param.value + \"'\";\n        } else if (param.type === 'bool') {\n          msg += (param.value === true ? 'True' : 'False')\n        } else {\n          msg += (param.value === '' ? (param.min === Infinity ? 0 : param.min) : param.value)\n        }\n        msg += ','\n\n      })\n      if (max_l > 0) msg += '\\n' + dent(indent, 2)\n      msg += ')'\n\n    }\n  })\n\n  // Startup routines\n  msg += '\\n\\n' + dent(indent, 2) + '# Running startup routines'\n  msg += '\\n' + dent(indent, 2) + 'self.startup_routines()'\n\n  // Returning\n  return msg\n\n}\n\n\nfunction StartupRoutines(indent) {\n  var msg = dent(indent, 1) + 'def startup_routines(self):'\n  msg += '\\n' + dent(indent, 2) + 'self.optimizer = self.optim_type(self.parameters(), lr=self.alpha)'\n  msg += '\\n' + dent(indent, 2) + 'if self.use_cuda:'\n  msg += '\\n' + dent(indent, 3) + 'self.cuda()'\n  return msg\n}\n\n\nfunction Predict(flowpoints, inps, indent) {\n  var msg = dent(indent, 1) + 'def predict(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(flowpoints, inps);\n  msg += formated_inputs + '):'\n\n  // Running preds\n  msg += '\\n\\n' + dent(indent, 2) + '# Switching off autograd'\n  msg += '\\n' + dent(indent, 2) + 'with torch.no_grad():'\n  msg += '\\n\\n' + dent(indent, 3) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 3) + 'if self.use_cuda:'\n  inps.map(key => {\n    const p_name = getPointName(flowpoints, key);\n    msg += '\\n' + dent(indent, 4) + p_name + ' = ' + p_name + '.cuda()'\n  })\n  msg += '\\n\\n' + dent(indent, 3) + '# Running inference'\n  msg += '\\n' + dent(indent, 3) + 'return self.forward(' + formated_inputs + ')'\n\n  // Returning\n  return msg\n}\n\n\nfunction Forward(flowpoints, order, inps, states, dummies, indent, init_states) {\n  var msg = dent(indent, 1) + 'def forward(self, '\n\n  // Adding all inputs\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  msg += formated_inputs + '):'\n\n  // Forwarding\n  var step_lib = [];\n  var outputs = [];\n  order.map(key => {\n    const point = dummies[key];\n    if (!(point.base_ref === 'Input')) {\n      var step_msg = dent(indent, 2) + getStateName(key, flowpoints, states, init_states) + ' = self.' + getPointName(dummies, key) + '(';\n      if (point.inputs.length > 1) {\n        if (flowpoints[key].concat_inputs) {\n          //torch.cat(tensors, dim=0\n          step_msg += 'torch.cat(['\n          point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ', ')\n          step_msg = step_msg.substring(0, step_msg.length -2) + '], dim=' + flowpoints[key].concat_dim + '))'\n        } else {\n          point.inputs.map(inp_key => step_msg += getStateName(inp_key, flowpoints, states, init_states) + ' + ');\n          step_msg = step_msg.substring(0, step_msg.length - 3) + ')';\n        }\n      } else {\n        step_msg += getStateName(point.inputs[0], flowpoints, states, init_states) + ')'\n      }\n      step_lib.push({ msg:step_msg, title:point.base_ref });\n      if (flowpoints[key].is_output) outputs.push(key);\n    }\n  })\n\n  // Max length\n  var max_l = 0;\n  step_lib.map(step => max_l = Math.max(max_l, step.msg.length))\n\n  // Adding steps\n  step_lib.map(step => {\n    \n    // Adding step\n    msg += '\\n' + step.msg;\n\n    // Aligning comment with others\n    for (var i = 0; i < max_l - step.msg.length + 1; i++) msg += ' ';\n    msg += '# ' + step.title;\n  })\n\n  // Adding return\n  if (outputs.length === 0) outputs = [order[order.length-1]];\n  msg += '\\n' + dent(indent, 2) + 'return'\n  outputs.map(key => {\n    msg += ' ' + getStateName(key, flowpoints, states, init_states) + ','\n  })\n  msg = msg.slice(0, -1)\n\n  // Returning\n  return msg\n\n}\n\n\nfunction FitStep(dummies, inps, indent, outs, flowpoints, states, init_states) {\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  var msg = dent(indent, 1) + 'def fit_step(self, training_loader):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Preparations for fit step'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss = 0 # Resetting training loss'\n  msg += '\\n' + dent(indent, 2) + 'self.train()        # Switching to autograd'\n  msg += '\\n\\n' + dent(indent, 2) + '# Looping through data'\n  msg += '\\n' + dent(indent, 2) + 'for ' + formated_inputs + ','\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + ','\n  })\n  msg = msg.slice(0, -1)\n  msg += ' in training_loader:'\n  msg += '\\n\\n' + dent(indent, 3) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 3) + 'if self.use_cuda:'\n  inps.map(key => {\n    const p_name = getPointName(dummies, key);\n    msg += '\\n' + dent(indent, 4) + '' + p_name + ' = ' + p_name + '.cuda()'\n  })\n  outs.map(key => {\n    const p_name = getOutputTargetName(key, flowpoints);\n    msg += '\\n' + dent(indent, 4) + '' + p_name + ' = ' + p_name + '.cuda()'\n  })\n  msg += '\\n\\n' + dent(indent, 3) + '# Forward pass'\n  msg += '\\n' + dent(indent, 3) + 'self.forward(' + formated_inputs + ')'\n\n  // Loss\n  msg += '\\n\\n' + dent(indent, 3) + '# Calculating loss'\n  outs.map((key, idx) => {\n    msg += '\\n' + dent(indent, 3) + 'loss ' + (idx === 0 ? '= ' : '+= ')\n    msg += 'self.criterion(' + getStateName(key, flowpoints, states, init_states) + ', '\n    msg += getOutputTargetName(key, flowpoints)\n    msg += ')'\n  })\n  msg += '\\n' + dent(indent, 3) + 'self.train_loss += loss.item() # Adding to epoch loss'\n  \n  // Backward pass and optimization\n  msg += '\\n\\n' + dent(indent, 3) + '# Backward pass and optimization'\n  msg += '\\n' + dent(indent, 3) + 'loss.backward()                      # Backward pass'\n  msg += '\\n' + dent(indent, 3) + 'self.optimizer.step()                # Optimizing weights'\n  msg += '\\n' + dent(indent, 3) + 'self.optimizer.zero_grad()           # Clearing gradients'\n  msg += '\\n\\n' + dent(indent, 2) + '# Adding loss to history'\n  msg += '\\n' + dent(indent, 2) + 'self.train_loss_hist.append(self.train_loss / len(training_loader))'\n\n  // Returning\n  return msg\n\n}\n\n\nfunction ValidationStep(dummies, inps, indent, outs, flowpoints, states, init_states) {\n  const formated_inputs = FormatParamInputs(dummies, inps);\n  var msg = dent(indent, 1) + 'def validation_step(self, validation_loader):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Preparations for validation step'\n  msg += '\\n' + dent(indent, 2) + 'self.valid_loss = 0 # Resetting validation loss'\n  msg += '\\n\\n' + dent(indent, 2) + '# Switching off autograd'\n  msg += '\\n' + dent(indent, 2) + 'with torch.no_grad():'\n  msg += '\\n\\n' + dent(indent, 3) + '# Looping through data'\n  msg += '\\n' + dent(indent, 3) + 'for ' + formated_inputs + ','\n  outs.map((key, idx) => {\n    msg += ' ' + getOutputTargetName(key, flowpoints) + ','\n  })\n  msg = msg.slice(0, -1)\n  msg += ' in validation_loader:'\n  msg += '\\n\\n' + dent(indent, 4) + '# Use CUDA?'\n  msg += '\\n' + dent(indent, 4) + 'if self.use_cuda:'\n  inps.map(key => {\n    const p_name = getPointName(dummies, key);\n    msg += '\\n' + dent(indent, 5) + p_name + ' = ' + p_name + '.cuda()'\n  })\n  outs.map(key => {\n    const p_name = getOutputTargetName(key, flowpoints);\n    msg += '\\n' + dent(indent, 5) + '' + p_name + ' = ' + p_name + '.cuda()'\n  })\n  msg += '\\n\\n' + dent(indent, 4) + '# Forward pass'\n  msg += '\\n' + dent(indent, 4) + 'self.forward(' + formated_inputs + ')'\n\n  // Loss\n  msg += '\\n\\n' + dent(indent, 4) + '# Calculating loss'\n  outs.map((key, idx) => {\n    msg += '\\n' + dent(indent, 4) + 'loss ' + (idx === 0 ? '= ' : '+= ')\n    msg += 'self.criterion(' + getStateName(key, flowpoints, states, init_states) + ', '\n    msg += getOutputTargetName(key, flowpoints)\n    msg += ')'\n  })\n  msg += '\\n' + dent(indent, 4) + 'self.valid_loss += loss.item() # Adding to epoch loss'\n  /*msg += '\\n' + dent(indent, 4) + 'loss = self.criterion(self.state, y) # Calculating loss'\n  msg += '\\n' + dent(indent, 4) + 'self.valid_loss += loss.item()       # Adding to epoch loss'*/\n  msg += '\\n\\n' + dent(indent, 3) + '# Adding loss to history'\n  msg += '\\n' + dent(indent, 3) + 'self.valid_loss_hist.append(self.valid_loss / len(validation_loader))'\n\n  // Returning\n  return msg\n\n}\n\n\nfunction Fit(indent) {\n  var msg = dent(indent, 1) + 'def fit(self, training_loader, validation_loader=None, epochs=10, show_progress=True, save_best=False):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Helpers'\n  msg += '\\n' + dent(indent, 2) + 'best_validation = 1e5'\n  msg += '\\n\\n' + dent(indent, 2) + '# Possibly prepping progress message'\n  msg += '\\n' + dent(indent, 2) + 'if show_progress:'\n  msg += '\\n' + dent(indent, 3) + 'epoch_l = max(len(str(epochs)), 2)'\n  msg += '\\n' + dent(indent, 3) + \"print('Training model...')\"\n  msg += \"\\n\" + dent(indent, 3) + \"print('%sEpoch   Training loss   Validation loss   Duration   Time remaining' % ''.rjust(2 * epoch_l - 4, ' '))\"\n  msg += '\\n' + dent(indent, 3) + 't = time.time()'\n  msg += '\\n\\n' + dent(indent, 2) + '# Looping through epochs'\n  msg += '\\n' + dent(indent, 2) + 'for epoch in range(epochs):'\n  msg += '\\n' + dent(indent, 3) + 'self.fit_step(training_loader) # Optimizing'\n  msg += '\\n' + dent(indent, 3) + 'if validation_loader != None:  # Perform validation?'\n  msg += '\\n' + dent(indent, 4) + 'self.validation_step(validation_loader) # Calculating validation loss'\n  msg += '\\n\\n' + dent(indent, 3) + '# Possibly printing progress'\n  msg += '\\n' + dent(indent, 3) + 'if show_progress:'\n  msg += '\\n' + dent(indent, 4) + 'eta_s = (time.time() - t) * (epochs - epoch)'\n  msg += \"\\n\" + dent(indent, 4) + \"eta = '%sm %ss' % (round(eta_s / 60), 60 - round(eta_s % 60))\"\n  msg += \"\\n\" + dent(indent, 4) + \"print('%s/%s' % (str(epoch + 1).rjust(epoch_l, ' '), str(epochs).ljust(epoch_l, ' ')),\"\n  msg += \"\\n\" + dent(indent, 5) + \"'| %s' % str(round(self.train_loss_hist[-1], 8)).ljust(13, ' '),\"\n  msg += \"\\n\" + dent(indent, 5) + \"'| %s' % str(round(self.valid_loss_hist[-1], 8)).ljust(15, ' '),\"\n  msg += \"\\n\" + dent(indent, 5) + \"'| %ss' % str(round(time.time() - t, 3)).rjust(7, ' '),\"\n  msg += \"\\n\" + dent(indent, 5) + \"'| %s' % eta.ljust(14, ' '))\"\n  msg += '\\n' + dent(indent, 4) + 't = time.time()'\n  msg += '\\n\\n' + dent(indent, 3) + '# Possibly saving model'\n  msg += '\\n' + dent(indent, 3) + 'if save_best:'\n  msg += '\\n' + dent(indent, 4) + 'if self.valid_loss_hist[-1] < best_validation:'\n  msg += '\\n' + dent(indent, 5) + \"self.save('best_validation')\"\n  msg += '\\n' + dent(indent, 5) + 'best_validation = self.valid_loss_hist[-1]'\n  msg += '\\n\\n' + dent(indent, 2) + '# Switching to eval'\n  msg += '\\n' + dent(indent, 2) + 'self.eval()'\n\n  // Returning\n  return msg\n}\n\n\nfunction PlotHist(indent) {\n  var msg = dent(indent, 1) + 'def plot_hist(self):'\n  msg += '\\n\\n' + dent(indent, 2) + '# Adding plots'\n  msg += '\\n' + dent(indent, 2) + \"plt.plot(self.train_loss_hist, color='blue', label='Training loss')\"\n  msg += '\\n' + dent(indent, 2) + \"plt.plot(self.valid_loss_hist, color='springgreen', label='Validation loss')\"\n  msg += '\\n\\n' + dent(indent, 2) + '# Axis labels'\n  msg += '\\n' + dent(indent, 2) + \"plt.xlabel('Epoch')\"\n  msg += '\\n' + dent(indent, 2) + \"plt.ylabel('Loss')\"\n  msg += '\\n' + dent(indent, 2) + \"plt.legend(loc='upper right')\"\n  msg += '\\n\\n' + dent(indent, 2) + '# Displaying plot'\n  msg += '\\n' + dent(indent, 2) + 'plt.show()'\n\n  // Returning\n  return msg\n}\n\n\nfunction SaveLoad(dummies, order, indent) {\n  var msg = dent(indent, 1) + \"def save(self, name='model.pth'):\"\n  msg += '\\n' + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"torch.save({\"\n  order.map(key => {\n    const point = dummies[key]\n    if (!(point.base_ref === 'Input')) {\n      const pointcode = getPointName(dummies, key)\n      msg += \"\\n\" + dent(indent, 3) + \"'\" + pointcode + \"': self.\" + pointcode + ','\n    }\n  })\n  msg += \"\\n\" + dent(indent, 3) + \"'train_loss':      self.train_loss,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'valid_loss':      self.valid_loss,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'train_loss_hist': self.train_loss_hist,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'valid_loss_hist': self.valid_loss_hist,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'optim_type':      self.optim_type,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'alpha':           self.alpha,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'criterion':       self.criterion,\"\n  msg += \"\\n\" + dent(indent, 3) + \"'use_cuda':        self.use_cuda\"\n  msg += \"\\n\" + dent(indent, 2) + \"}, name)\"\n  msg += \"\\n\\n\\n\" + dent(indent, 1) + \"@staticmethod\"\n  msg += \"\\n\" + dent(indent, 1) + \"def load(name='model.pth'):\"\n  msg += \"\\n\" + dent(indent, 2) + \"if not '.pth' in name: name += '.pth'\"\n  msg += \"\\n\" + dent(indent, 2) + \"checkpoint = torch.load(name)\"\n  msg += \"\\n\" + dent(indent, 2) + \"model = NeuralNet(\"\n  msg += \"\\n\" + dent(indent, 3) + \"optimizer = checkpoint['optim_type'],\"\n  msg += \"\\n\" + dent(indent, 3) + \"alpha     = checkpoint['alpha'],\"\n  msg += \"\\n\" + dent(indent, 3) + \"criterion = checkpoint['criterion'],\"\n  msg += \"\\n\" + dent(indent, 3) + \"use_cuda  = checkpoint['use_cuda']\"\n  msg += \"\\n\" + dent(indent, 2) + \")\"\n  order.map(key => {\n    const point = dummies[key]\n    if (!(point.base_ref === 'Input')) {\n      const pointcode = getPointName(dummies, key)\n      msg += \"\\n\" + dent(indent, 2) + \"model.\" + pointcode + \" = checkpoint['\" + pointcode + \"']\"\n    }\n  })\n  msg += \"\\n\" + dent(indent, 2) + \"model.train_loss      = checkpoint['train_loss']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.valid_loss      = checkpoint['valid_loss']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.train_loss_hist = checkpoint['train_loss_hist']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.valid_loss_hist = checkpoint['valid_loss_hist']\"\n  msg += \"\\n\" + dent(indent, 2) + \"model.startup_routines()\"\n  msg += \"\\n\" + dent(indent, 2) + \"return model\"\n\n  // Returning\n  return msg\n}\n\n\nexport function PyTorchParser(state, order, inps, states, dummies, indent, init_states, outs) {\n\n  var flowpoints = state.flowpoints;\n\n  // Imports\n  var msg = PyTorchImports(indent)\n\n  // Add flattening helper class if needed\n  var need_flattening = false;\n  Object.keys(flowpoints).map(key => {\n    if (flowpoints[key].base_ref === 'Flatten') need_flattening = true;\n  })\n  if (need_flattening) msg += '\\n\\n\\n' + Flatten(indent)\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, indent, dummies, states, init_states);\n  msg += '\\n\\n\\n' + StartupRoutines(indent);\n  msg += '\\n\\n\\n' + Predict(flowpoints, inps, indent);\n  msg += '\\n\\n\\n' + Forward(flowpoints, order, inps, states, dummies, indent, init_states);\n  msg += '\\n\\n\\n' + FitStep(dummies, inps, indent, outs, flowpoints, states, init_states);\n  msg += '\\n\\n\\n' + ValidationStep(dummies, inps, indent, outs, flowpoints, states, init_states);\n  msg += '\\n\\n\\n' + Fit(indent);\n  msg += '\\n\\n\\n' + PlotHist(indent);\n  msg += '\\n\\n\\n' + SaveLoad(dummies, order, indent);\n\n  // Returning\n  return msg\n}","import { FlowOrder } from \"./FlowOrder\";\nimport { PyTorchParser } from \"./PytorchParser\";\nimport { TensorFlowParser } from \"./TensorflowParser\";\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nconst code_parsers = {\n  pytorch: PyTorchParser,\n  tensorflow: TensorFlowParser\n}\n\n\nfunction DefaultMessage(state) {\n  var msg = \"\";\n  msg += \"'''\\n\";\n  msg += \"Created using flowpoints.io\\n\\n\";\n  if (state.settings.modelID) {\n    msg += \"Link to model:\\n\";\n    msg += \"https://mariusbrataas.github.io/flowpoints_ml/?p=\" + state.settings.modelID + \"\\n\\n\";\n  }\n  msg += \"LICENSE:\\n\"\n  msg += \"https://github.com/mariusbrataas/flowpoints_ml/blob/master/LICENSE\"\n  if (state.environment.notes !== '') {\n    var notes = state.environment.notes;\n    notes = ReplaceAll(notes, \"'\", '')\n    msg += '\\n\\nNOTES:\\n' + notes\n  }\n  msg += \"\\n'''\\n\\n\\n\"\n  return msg\n}\n\n\nexport function Parser(state) {\n\n  if (Object.keys(state.flowpoints).length > 0) {\n\n    // Order and inputs\n    const tmp = FlowOrder(state)\n    const flow_order = tmp.order;\n    const inps = tmp.inps;\n    const states = tmp.states;\n    const init_states = tmp.init_states;\n    const outs = tmp.outs;\n    var dummies = tmp.dummies;\n\n    // Init msg with default text\n    var msg = DefaultMessage(state)\n\n    // Parsing\n    const lib = state.environment.library.toLowerCase()\n    if (lib in code_parsers) {\n      msg += code_parsers[lib](state, flow_order, inps, states, dummies, '    ', init_states, outs)\n    }\n\n    // Returning\n    return {msg, order:flow_order, dummies}\n\n  }\n\n  return {msg:'', order:[], dummies:{}}\n\n}","import { getPointName, FormatParamInputs, dent, FormatInitParams } from \"./FlowOrder\";\n\n\nfunction TensorFlowImports() {\n  var msg = '# Importing TensorFlow tools'\n  msg += '\\nimport tensorflow as tf'\n  return msg\n}\n\n\nfunction Constructor(state, order, inps, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n  var environment = state.environment;\n\n  // Basics\n  var msg = '# Model'\n  msg += \"\\ndef NeuralNet(optimizer='adam', loss='sparse_categorical_crossentropy', metrics=['accuracy']):\"\n\n  // Initializing inputs\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing inputs'\n  order.map(key => {\n    let point = flowpoints[key]\n    let current_point_name = getPointName(flowpoints, key);\n\n    if (inps.includes(key)) {\n      let content = point.content;\n      msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Input(('\n      Object.keys(content.dimensions).sort().map(idx => msg += '' + content.dimensions[idx] + ',')\n      msg += \"), name='\" + current_point_name + \"')\"\n    }\n  })\n\n  // Initializing layers\n  var current_point_name = '';\n  var current_point_key = '';\n  var outputs = [];\n  msg += '\\n\\n' + dent(indent, 1) + '# Initializing layers'\n  order.map(key => {\n    let point = flowpoints[key]\n    current_point_name = getPointName(flowpoints, key);\n    current_point_key = key\n\n    if (point.base_ref !== 'Input') {\n      const content = point.content[environment.library.toLowerCase()];\n\n      if (content) {\n        const rawparams = content.parameters;\n        var parameters = { name:{type:'string', value:current_point_name} }\n        Object.keys(rawparams).map(raw_p_key => {\n          parameters[raw_p_key] = rawparams[raw_p_key]\n        })\n        //parameters['name'] = {type:'string', value:current_point_name};\n        let inputs = dummies[key].inputs;\n\n        /*\n        Need an add-operation first?\n        If a node got multiple inputs and is not \"Concatenate\", those inputs should be added together.\n        */ \n        if (inputs.length > 1) {\n\n          if (point.base_ref === 'Concatenate') {\n\n            // Adding inputs\n            msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.Concatenate(axis=' + point.concat_dim + ')('\n            msg += '\\n' + dent(indent, 2) + '['\n            inputs.map(inp_key => {\n              msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n            })\n            msg = msg.slice(0, -1)\n            msg += '\\n' + dent(indent, 2) + ']'\n            msg += '\\n' + dent(indent, 1) + ')'\n\n          } else {\n\n            if (point.concat_inputs) {\n\n              // Concat name\n              var concatname = \"'concat_\"\n              inputs.map(inp_key => concatname += getPointName(flowpoints, inp_key) + '_')\n              concatname = concatname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Concatenate(name=\" + concatname + \", axis=\" + point.concat_dim + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            } else {\n\n              // Adder name\n              var addname = \"'add_\"\n              inputs.map(inp_key => addname += getPointName(flowpoints, inp_key) + '_')\n              addname = addname.slice(0, -1) + \"'\"\n\n              // Creating layer\n              msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n              msg += FormatInitParams(parameters, 1, indent)\n              msg += '('\n              msg += '\\n' + dent(indent, 2) + \"tf.keras.layers.Add(name=\" + addname + \")([\"\n              inputs.map(inp_key => {\n                msg += '\\n' + dent(indent, 3) + getPointName(flowpoints, inp_key) + ','\n              })\n              msg = msg.slice(0, -1)\n              msg += '\\n' + dent(indent, 2) + '])'\n              msg += '\\n' + dent(indent, 1) + ')'\n\n            }\n\n          }\n\n        } else {\n\n          // Creating layer\n          msg += '\\n' + dent(indent, 1) + current_point_name + ' = tf.keras.layers.' + content.reference\n          msg += FormatInitParams(parameters, 1, indent)\n          msg += '(' + getPointName(flowpoints, inputs[0]) + ')'\n\n        }\n        if (point.is_output) outputs.push(current_point_key)\n      } else {\n        msg += '\\n\\nCOULD NOT ADD ' + current_point_name + ' (' + point.base_ref + ')!'\n        msg += '\\nThe layertype is not available in the the currently selected library.\\n\\n'\n      }\n    }\n  })\n\n  // Fixing outputs?\n  if (outputs.length === 0 && current_point_key !== '') outputs.push(current_point_key)\n\n  // Creating model\n  msg += '\\n\\n' + dent(indent, 1) + '# Creating model'\n  msg += '\\n' + dent(indent, 1) + '_model = tf.keras.models.Model('\n  if (inps.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'inputs  = [' + FormatParamInputs(dummies, inps) + '],'\n  }\n  if (outputs.length > 0) {\n    msg += '\\n' + dent(indent, 2) + 'outputs = [' + FormatParamInputs(dummies, outputs) + ']'\n  }\n  if (state.settings.modelID !== '' && state.settings.modelID !== null) {\n    msg += ','\n    msg += '\\n' + dent(indent, 2) + \"name    = 'flowpoints.io/?p=\" + state.settings.modelID + \"'\"\n  }\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Compiling model\n  msg += '\\n\\n' + dent(indent, 1) + '# Compiling model'\n  msg += '\\n' + dent(indent, 1) + \"_model.compile(\"\n  msg += '\\n' + dent(indent, 2) + \"optimizer = optimizer,\"\n  msg += '\\n' + dent(indent, 2) + \"loss      = loss,\"\n  msg += '\\n' + dent(indent, 2) + \"metrics   = metrics\"\n  msg += '\\n' + dent(indent, 1) + ')'\n\n  // Returning model\n  msg += '\\n\\n' + dent(indent, 1) + '# Returning model'\n  msg += '\\n' + dent(indent, 1) + 'return _model'\n\n  // Returning\n  return msg\n\n}\n\n\n\nexport function TensorFlowParser(state, order, inps, states, dummies, indent) {\n\n  var flowpoints = state.flowpoints;\n\n  // Imports\n  var msg = TensorFlowImports()\n\n  // Adding all code\n  msg += '\\n\\n\\n' + Constructor(state, order, inps, dummies, indent)\n\n  // Returning\n  return msg\n}","export function getBaseLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"tensorflow\": \"AbstractRNNCell\"\n    },\n    \"Activation\": {\n      \"tensorflow\": \"Activation\"\n    },\n    \"ActivityRegularization\": {\n      \"tensorflow\": \"ActivityRegularization\"\n    },\n    \"AdaptiveAvgPool1d\": {\n      \"pytorch\": \"AdaptiveAvgPool1d\"\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"pytorch\": \"AdaptiveAvgPool2d\"\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"pytorch\": \"AdaptiveAvgPool3d\"\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"pytorch\": \"AdaptiveLogSoftmaxWithLoss\"\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"pytorch\": \"AdaptiveMaxPool1d\"\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"pytorch\": \"AdaptiveMaxPool2d\"\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"pytorch\": \"AdaptiveMaxPool3d\"\n    },\n    \"Add\": {\n      \"tensorflow\": \"Add\"\n    },\n    \"AlphaDropout\": {\n      \"pytorch\": \"AlphaDropout\",\n      \"tensorflow\": \"AlphaDropout\"\n    },\n    \"Average\": {\n      \"tensorflow\": \"Average\"\n    },\n    \"AveragePooling1D\": {\n      \"tensorflow\": \"AveragePooling1D\"\n    },\n    \"AveragePooling2D\": {\n      \"tensorflow\": \"AveragePooling2D\"\n    },\n    \"AveragePooling3D\": {\n      \"tensorflow\": \"AveragePooling3D\"\n    },\n    \"AvgPool1d\": {\n      \"pytorch\": \"AvgPool1d\"\n    },\n    \"AvgPool2d\": {\n      \"pytorch\": \"AvgPool2d\"\n    },\n    \"AvgPool3d\": {\n      \"pytorch\": \"AvgPool3d\"\n    },\n    \"BatchNorm1d\": {\n      \"pytorch\": \"BatchNorm1d\"\n    },\n    \"BatchNorm2d\": {\n      \"pytorch\": \"BatchNorm2d\"\n    },\n    \"BatchNorm3d\": {\n      \"pytorch\": \"BatchNorm3d\"\n    },\n    \"BatchNormalization\": {\n      \"tensorflow\": \"BatchNormalization\"\n    },\n    \"Bidirectional\": {\n      \"tensorflow\": \"Bidirectional\"\n    },\n    \"Bilinear\": {\n      \"pytorch\": \"Bilinear\"\n    },\n    \"CELU\": {\n      \"pytorch\": \"CELU\"\n    },\n    \"Concatenate\": {\n      \"tensorflow\": \"Concatenate\"\n    },\n    \"ConstantPad1d\": {\n      \"pytorch\": \"ConstantPad1d\"\n    },\n    \"ConstantPad2d\": {\n      \"pytorch\": \"ConstantPad2d\"\n    },\n    \"ConstantPad3d\": {\n      \"pytorch\": \"ConstantPad3d\"\n    },\n    \"Conv1d\": {\n      \"pytorch\": \"Conv1d\",\n      \"tensorflow\": \"Conv1D\"\n    },\n    \"Conv2d\": {\n      \"pytorch\": \"Conv2d\",\n      \"tensorflow\": \"Conv2D\"\n    },\n    \"Conv3d\": {\n      \"pytorch\": \"Conv3d\",\n      \"tensorflow\": \"Conv3D\"\n    },\n    \"ConvLSTM2D\": {\n      \"tensorflow\": \"ConvLSTM2D\"\n    },\n    \"ConvTranspose1d\": {\n      \"pytorch\": \"ConvTranspose1d\"\n    },\n    \"ConvTranspose2d\": {\n      \"pytorch\": \"ConvTranspose2d\",\n      \"tensorflow\": \"Conv2DTranspose\"\n    },\n    \"ConvTranspose3d\": {\n      \"pytorch\": \"ConvTranspose3d\",\n      \"tensorflow\": \"Conv3DTranspose\"\n    },\n    \"Cropping1D\": {\n      \"tensorflow\": \"Cropping1D\"\n    },\n    \"Cropping2D\": {\n      \"tensorflow\": \"Cropping2D\"\n    },\n    \"Cropping3D\": {\n      \"tensorflow\": \"Cropping3D\"\n    },\n    \"Dense\": {\n      \"tensorflow\": \"Dense\"\n    },\n    \"DenseFeatures\": {\n      \"tensorflow\": \"DenseFeatures\"\n    },\n    \"DepthwiseConv2D\": {\n      \"tensorflow\": \"DepthwiseConv2D\"\n    },\n    \"Dot\": {\n      \"tensorflow\": \"Dot\"\n    },\n    \"Dropout\": {\n      \"pytorch\": \"Dropout\",\n      \"tensorflow\": \"Dropout\"\n    },\n    \"Dropout2d\": {\n      \"pytorch\": \"Dropout2d\"\n    },\n    \"Dropout3d\": {\n      \"pytorch\": \"Dropout3d\"\n    },\n    \"ELU\": {\n      \"pytorch\": \"ELU\",\n      \"tensorflow\": \"ELU\"\n    },\n    \"Embedding\": {\n      \"pytorch\": \"Embedding\",\n      \"tensorflow\": \"Embedding\"\n    },\n    \"EmbeddingBag\": {\n      \"pytorch\": \"EmbeddingBag\"\n    },\n    \"Flatten\": {\n      \"pytorch\": \"Flatten\",\n      \"tensorflow\": \"Flatten\"\n    },\n    \"Fold\": {\n      \"pytorch\": \"Fold\"\n    },\n    \"FractionalMaxPool2d\": {\n      \"pytorch\": \"FractionalMaxPool2d\"\n    },\n    \"GRU\": {\n      \"pytorch\": \"GRU\",\n      \"tensorflow\": \"GRU\"\n    },\n    \"GRUCell\": {\n      \"pytorch\": \"GRUCell\",\n      \"tensorflow\": \"GRUCell\"\n    },\n    \"GaussianDropout\": {\n      \"tensorflow\": \"GaussianDropout\"\n    },\n    \"GaussianNoise\": {\n      \"tensorflow\": \"GaussianNoise\"\n    },\n    \"GlobalAveragePooling1D\": {\n      \"tensorflow\": \"GlobalAveragePooling1D\"\n    },\n    \"GlobalAveragePooling2D\": {\n      \"tensorflow\": \"GlobalAveragePooling2D\"\n    },\n    \"GlobalAveragePooling3D\": {\n      \"tensorflow\": \"GlobalAveragePooling3D\"\n    },\n    \"GlobalMaxPool1D\": {\n      \"tensorflow\": \"GlobalMaxPool1D\"\n    },\n    \"GlobalMaxPool2D\": {\n      \"tensorflow\": \"GlobalMaxPool2D\"\n    },\n    \"GlobalMaxPool3D\": {\n      \"tensorflow\": \"GlobalMaxPool3D\"\n    },\n    \"GroupNorm\": {\n      \"pytorch\": \"GroupNorm\"\n    },\n    \"Hardshrink\": {\n      \"pytorch\": \"Hardshrink\"\n    },\n    \"Hardtanh\": {\n      \"pytorch\": \"Hardtanh\"\n    },\n    \"Identity\": {\n      \"pytorch\": \"Identity\"\n    },\n    \"InputLayer\": {\n      \"tensorflow\": \"InputLayer\"\n    },\n    \"InputSpec\": {\n      \"tensorflow\": \"InputSpec\"\n    },\n    \"InstanceNorm1d\": {\n      \"pytorch\": \"InstanceNorm1d\"\n    },\n    \"InstanceNorm2d\": {\n      \"pytorch\": \"InstanceNorm2d\"\n    },\n    \"InstanceNorm3d\": {\n      \"pytorch\": \"InstanceNorm3d\"\n    },\n    \"LPPool1d\": {\n      \"pytorch\": \"LPPool1d\"\n    },\n    \"LPPool2d\": {\n      \"pytorch\": \"LPPool2d\"\n    },\n    \"LSTM\": {\n      \"pytorch\": \"LSTM\",\n      \"tensorflow\": \"LSTM\"\n    },\n    \"LSTMCell\": {\n      \"pytorch\": \"LSTMCell\",\n      \"tensorflow\": \"LSTMCell\"\n    },\n    \"Lambda\": {\n      \"tensorflow\": \"Lambda\"\n    },\n    \"Layer\": {\n      \"tensorflow\": \"Layer\"\n    },\n    \"LayerNorm\": {\n      \"pytorch\": \"LayerNorm\"\n    },\n    \"LeakyReLU\": {\n      \"pytorch\": \"LeakyReLU\",\n      \"tensorflow\": \"LeakyReLU\"\n    },\n    \"Linear\": {\n      \"pytorch\": \"Linear\",\n      \"tensorflow\": \"Dense\"\n    },\n    \"LinearModel\": {\n      \"tensorflow\": \"LinearModel\"\n    },\n    \"LocalResponseNorm\": {\n      \"pytorch\": \"LocalResponseNorm\"\n    },\n    \"LocallyConnected1D\": {\n      \"tensorflow\": \"LocallyConnected1D\"\n    },\n    \"LocallyConnected2D\": {\n      \"tensorflow\": \"LocallyConnected2D\"\n    },\n    \"LogSigmoid\": {\n      \"pytorch\": \"LogSigmoid\"\n    },\n    \"LogSoftmax\": {\n      \"pytorch\": \"LogSoftmax\"\n    },\n    \"Masking\": {\n      \"tensorflow\": \"Masking\"\n    },\n    \"MaxPool1d\": {\n      \"pytorch\": \"MaxPool1d\",\n      \"tensorflow\": \"MaxPool1D\"\n    },\n    \"MaxPool2d\": {\n      \"pytorch\": \"MaxPool2d\",\n      \"tensorflow\": \"MaxPool2D\"\n    },\n    \"MaxPool3d\": {\n      \"pytorch\": \"MaxPool3d\",\n      \"tensorflow\": \"MaxPool3D\"\n    },\n    \"MaxUnpool1d\": {\n      \"pytorch\": \"MaxUnpool1d\"\n    },\n    \"MaxUnpool2d\": {\n      \"pytorch\": \"MaxUnpool2d\"\n    },\n    \"MaxUnpool3d\": {\n      \"pytorch\": \"MaxUnpool3d\"\n    },\n    \"Maximum\": {\n      \"tensorflow\": \"Maximum\"\n    },\n    \"Minimum\": {\n      \"tensorflow\": \"Minimum\"\n    },\n    \"MultiheadAttention\": {\n      \"pytorch\": \"MultiheadAttention\"\n    },\n    \"Multiply\": {\n      \"tensorflow\": \"Multiply\"\n    },\n    \"PReLU\": {\n      \"pytorch\": \"PReLU\",\n      \"tensorflow\": \"PReLU\"\n    },\n    \"Permute\": {\n      \"tensorflow\": \"Permute\"\n    },\n    \"RNN\": {\n      \"pytorch\": \"RNN\",\n      \"tensorflow\": \"RNN\"\n    },\n    \"RNNCell\": {\n      \"pytorch\": \"RNNCell\"\n    },\n    \"RReLU\": {\n      \"pytorch\": \"RReLU\"\n    },\n    \"ReLU\": {\n      \"pytorch\": \"ReLU\",\n      \"tensorflow\": \"ReLU\"\n    },\n    \"ReLU6\": {\n      \"pytorch\": \"ReLU6\"\n    },\n    \"ReflectionPad1d\": {\n      \"pytorch\": \"ReflectionPad1d\"\n    },\n    \"ReflectionPad2d\": {\n      \"pytorch\": \"ReflectionPad2d\"\n    },\n    \"RepeatVector\": {\n      \"tensorflow\": \"RepeatVector\"\n    },\n    \"ReplicationPad1d\": {\n      \"pytorch\": \"ReplicationPad1d\"\n    },\n    \"ReplicationPad2d\": {\n      \"pytorch\": \"ReplicationPad2d\"\n    },\n    \"ReplicationPad3d\": {\n      \"pytorch\": \"ReplicationPad3d\"\n    },\n    \"Reshape\": {\n      \"tensorflow\": \"Reshape\"\n    },\n    \"SELU\": {\n      \"pytorch\": \"SELU\"\n    },\n    \"SeparableConv1D\": {\n      \"tensorflow\": \"SeparableConv1D\"\n    },\n    \"SeparableConv2D\": {\n      \"tensorflow\": \"SeparableConv2D\"\n    },\n    \"Sigmoid\": {\n      \"pytorch\": \"Sigmoid\"\n    },\n    \"SimpleRNN\": {\n      \"tensorflow\": \"SimpleRNN\"\n    },\n    \"SimpleRNNCell\": {\n      \"tensorflow\": \"SimpleRNNCell\"\n    },\n    \"Softmax\": {\n      \"pytorch\": \"Softmax\",\n      \"tensorflow\": \"Softmax\"\n    },\n    \"Softmax2d\": {\n      \"pytorch\": \"Softmax2d\"\n    },\n    \"Softmin\": {\n      \"pytorch\": \"Softmin\"\n    },\n    \"Softplus\": {\n      \"pytorch\": \"Softplus\"\n    },\n    \"Softshrink\": {\n      \"pytorch\": \"Softshrink\"\n    },\n    \"Softsign\": {\n      \"pytorch\": \"Softsign\"\n    },\n    \"SpatialDropout1D\": {\n      \"tensorflow\": \"SpatialDropout1D\"\n    },\n    \"SpatialDropout2D\": {\n      \"tensorflow\": \"SpatialDropout2D\"\n    },\n    \"SpatialDropout3D\": {\n      \"tensorflow\": \"SpatialDropout3D\"\n    },\n    \"StackedRNNCells\": {\n      \"tensorflow\": \"StackedRNNCells\"\n    },\n    \"Subtract\": {\n      \"tensorflow\": \"Subtract\"\n    },\n    \"SyncBatchNorm\": {\n      \"pytorch\": \"SyncBatchNorm\"\n    },\n    \"Tanh\": {\n      \"pytorch\": \"Tanh\"\n    },\n    \"Tanhshrink\": {\n      \"pytorch\": \"Tanhshrink\"\n    },\n    \"Threshold\": {\n      \"pytorch\": \"Threshold\"\n    },\n    \"ThresholdedReLU\": {\n      \"tensorflow\": \"ThresholdedReLU\"\n    },\n    \"TimeDistributed\": {\n      \"tensorflow\": \"TimeDistributed\"\n    },\n    \"Unfold\": {\n      \"pytorch\": \"Unfold\"\n    },\n    \"UpSampling1D\": {\n      \"tensorflow\": \"UpSampling1D\"\n    },\n    \"UpSampling2D\": {\n      \"tensorflow\": \"UpSampling2D\"\n    },\n    \"UpSampling3D\": {\n      \"tensorflow\": \"UpSampling3D\"\n    },\n    \"Wrapper\": {\n      \"tensorflow\": \"Wrapper\"\n    },\n    \"ZeroPad2d\": {\n      \"pytorch\": \"ZeroPad2d\"\n    },\n    \"ZeroPadding1D\": {\n      \"tensorflow\": \"ZeroPadding1D\"\n    },\n    \"ZeroPadding2D\": {\n      \"tensorflow\": \"ZeroPadding2D\"\n    },\n    \"ZeroPadding3D\": {\n      \"tensorflow\": \"ZeroPadding3D\"\n    }\n  }\n}","export function getPyTorchLibrary() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"n_classes\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"cutoffs\": {\n        \"type\": \"sequence\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"div_value\": {\n        \"type\": \"float\",\n        \"value\": 4.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"head_bias\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AlphaDropout\": {\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool1d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool2d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AvgPool3d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"count_include_pad\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm1d\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm2d\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNorm3d\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Bilinear\": {\n      \"in1_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"in2_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"CELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad1d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad2d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConstantPad3d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv1d\": {\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2d\": {\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3d\": {\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_mode\": {\n        \"type\": \"string\",\n        \"value\": \"'zeros'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose1d\": {\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose2d\": {\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvTranspose3d\": {\n      \"in_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout\": {\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout2d\": {\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout3d\": {\n      \"p\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Embedding\": {\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding_idx\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"EmbeddingBag\": {\n      \"num_embeddings\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embedding_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_norm\": {\n        \"type\": \"float\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"norm_type\": {\n        \"type\": \"float\",\n        \"value\": 2.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale_grad_by_freq\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mode\": {\n        \"type\": \"string\",\n        \"value\": \"'mean'\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Flatten\": {},\n    \"Fold\": {\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_ratio\": {\n        \"type\": \"float\",\n        \"value\": [\n          0.5,\n          0.5\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": 1\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRU\": {\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRUCell\": {\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GroupNorm\": {\n      \"num_groups\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_channels\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardshrink\": {\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Hardtanh\": {\n      \"min_val\": {\n        \"type\": \"float\",\n        \"value\": -1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_val\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Identity\": {},\n    \"InstanceNorm1d\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm2d\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InstanceNorm3d\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool1d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LPPool2d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTM\": {\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTMCell\": {\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LayerNorm\": {\n      \"normalized_shape\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"elementwise_affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LeakyReLU\": {\n      \"negative_slope\": {\n        \"type\": \"float\",\n        \"value\": 0.01,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Linear\": {\n      \"in_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"out_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocalResponseNorm\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.0001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta\": {\n        \"type\": \"float\",\n        \"value\": 0.75,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"k\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LogSigmoid\": {},\n    \"LogSoftmax\": {\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool1d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool2d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool3d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_indices\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ceil_mode\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool1d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool2d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxUnpool3d\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MultiheadAttention\": {\n      \"embed_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_heads\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"PReLU\": {\n      \"num_parameters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"init\": {\n        \"type\": \"float\",\n        \"value\": 0.25,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNN\": {\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"num_layers\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"batch_first\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bidirectional\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNNCell\": {\n      \"input_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"hidden_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"nonlinearity\": {\n        \"type\": \"select\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity,\n        \"options\": [\n          \"relu\",\n          \"tanh\"\n        ]\n      }\n    },\n    \"RReLU\": {\n      \"lower\": {\n        \"type\": \"float\",\n        \"value\": 0.125,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"upper\": {\n        \"type\": \"float\",\n        \"value\": 0.3333333333333333,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU\": {\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU6\": {\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad1d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReflectionPad2d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad1d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad2d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReplicationPad3d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SELU\": {\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Sigmoid\": {},\n    \"Softmax\": {},\n    \"Softmax2d\": {},\n    \"Softmin\": {\n      \"dim\": {\n        \"type\": \"int\",\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softplus\": {\n      \"beta\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 20,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softshrink\": {\n      \"lambd\": {\n        \"type\": \"float\",\n        \"value\": 0.5,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softsign\": {},\n    \"SyncBatchNorm\": {\n      \"num_features\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"eps\": {\n        \"type\": \"float\",\n        \"value\": 1e-05,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"affine\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"track_running_stats\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Tanh\": {},\n    \"Tanhshrink\": {},\n    \"Threshold\": {\n      \"threshold\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"value\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"inplace\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Unfold\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stride\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPad2d\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    }\n  }\n}","export function getTensorFlowLibrary() {\n  return {\n    \"AbstractRNNCell\": {\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dynamic\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Activation\": {\n      \"activation\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ActivityRegularization\": {\n      \"l1\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"l2\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Add\": {},\n    \"AlphaDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Average\": {},\n    \"AveragePooling1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AveragePooling2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"AveragePooling3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"BatchNormalization\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"epsilon\": {\n        \"type\": \"float\",\n        \"value\": 0.001,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"center\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"scale\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_mean_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"moving_variance_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"ones\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"beta_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"gamma_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_clipping\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"renorm_momentum\": {\n        \"type\": \"float\",\n        \"value\": 0.99,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"fused\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"virtual_batch_size\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"adjustment\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Bidirectional\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"merge_mode\": {\n        \"type\": \"string\",\n        \"value\": \"concat\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"weights\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Concatenate\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv2DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Conv3DTranspose\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_padding\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ConvLSTM2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Cropping1D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Cropping2D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          0,\n          0,\n          0,\n          0\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Cropping3D\": {\n      \"cropping\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1,\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dense\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"DenseFeatures\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"DepthwiseConv2D\": {\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dot\": {\n      \"axes\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"normalize\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Dropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"noise_shape\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"seed\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ELU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Embedding\": {\n      \"input_dim\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_dim\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"embeddings_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask_zero\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"input_length\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Flatten\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRU\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GRUCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"reset_after\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GaussianDropout\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GaussianNoise\": {\n      \"stddev\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GlobalAveragePooling1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GlobalAveragePooling2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GlobalAveragePooling3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GlobalMaxPool1D\": {\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GlobalMaxPool2D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"GlobalMaxPool3D\": {\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"InputSpec\": {\n      \"dtype\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"max_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"min_ndim\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"axes\": {\n        \"type\": \"string\",\n        \"value\": \"None)\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTM\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LSTMCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_activation\": {\n        \"type\": \"string\",\n        \"value\": \"hard_sigmoid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unit_forget_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Lambda\": {\n      \"function\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"output_shape\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"mask\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"arguments\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Layer\": {\n      \")\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LeakyReLU\": {\n      \"alpha\": {\n        \"type\": \"float\",\n        \"value\": 0.3,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LinearModel\": {\n      \"feature_columns\": {\n        \"type\": null,\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"sparse_combiner\": {\n        \"type\": \"string\",\n        \"value\": \"sum\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"trainable\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocallyConnected1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"LocallyConnected2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"implementation\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Masking\": {\n      \"mask_value\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool1D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": \"string\",\n        \"value\": \"channels_last\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool2D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"MaxPool3D\": {\n      \"pool_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": null,\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Maximum\": {},\n    \"Minimum\": {},\n    \"Multiply\": {},\n    \"PReLU\": {\n      \"alpha_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"alpha_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"shared_axes\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Permute\": {\n      \"dims\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RNN\": {\n      \"cell\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"time_major\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ReLU\": {\n      \"max_value\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"negative_slope\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"threshold\": {\n        \"type\": \"int\",\n        \"value\": 0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"RepeatVector\": {\n      \"n\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Reshape\": {\n      \"target_shape\": {\n        \"type\": \"int\",\n        \"value\": null,\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SeparableConv1D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SeparableConv2D\": {\n      \"filters\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_size\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"strides\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"padding\": {\n        \"type\": \"string\",\n        \"value\": \"valid\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dilation_rate\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depth_multiplier\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"depthwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"pointwise_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SimpleRNN\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activity_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_sequences\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"return_state\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"go_backwards\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"stateful\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"unroll\": {\n        \"type\": \"bool\",\n        \"value\": false,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SimpleRNNCell\": {\n      \"units\": {\n        \"type\": \"int\",\n        \"value\": 1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"activation\": {\n        \"type\": \"string\",\n        \"value\": \"tanh\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"use_bias\": {\n        \"type\": \"bool\",\n        \"value\": true,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"glorot_uniform\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"orthogonal\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_initializer\": {\n        \"type\": \"string\",\n        \"value\": \"zeros\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_regularizer\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"kernel_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"bias_constraint\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"recurrent_dropout\": {\n        \"type\": \"float\",\n        \"value\": 0.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Softmax\": {\n      \"axis\": {\n        \"type\": \"int\",\n        \"value\": -1,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SpatialDropout1D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SpatialDropout2D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"SpatialDropout3D\": {\n      \"rate\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"StackedRNNCells\": {\n      \"cells\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Subtract\": {},\n    \"ThresholdedReLU\": {\n      \"theta\": {\n        \"type\": \"float\",\n        \"value\": 1.0,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"TimeDistributed\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"UpSampling1D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": 2,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"UpSampling2D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"interpolation\": {\n        \"type\": \"string\",\n        \"value\": \"nearest\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"UpSampling3D\": {\n      \"size\": {\n        \"type\": \"int\",\n        \"value\": [\n          2,\n          2,\n          2\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"Wrapper\": {\n      \"layer\": {\n        \"type\": \"\",\n        \"value\": null,\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPadding1D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPadding2D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    },\n    \"ZeroPadding3D\": {\n      \"padding\": {\n        \"type\": \"int\",\n        \"value\": [\n          1,\n          1,\n          1\n        ],\n        \"istuple\": true,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      },\n      \"data_format\": {\n        \"type\": null,\n        \"value\": \"None\",\n        \"istuple\": false,\n        \"min\": -Infinity,\n        \"max\": Infinity\n      }\n    }\n  }\n}","export function getPyTorchAutoparams() {\n  return {\n    \"AdaptiveAvgPool1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AdaptiveAvgPool2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AdaptiveAvgPool3d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AdaptiveLogSoftmaxWithLoss\": {\n      outshape: (inp, p) => {\n        return inp.slice(0, inp.length - 1)\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AdaptiveMaxPool1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.output_size.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AdaptiveMaxPool2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 2] = p.output_size.value[0];\n        tmp[tmp.length - 1] = p.output_size.value[1];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AdaptiveMaxPool3d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 3] = p.output_size.value[0];\n        tmp[tmp.length - 2] = p.output_size.value[1];\n        tmp[tmp.length - 1] = p.output_size.value[2];\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AlphaDropout\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AvgPool1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value)\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AvgPool2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"AvgPool3d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 3] = 1 + ((inp[inp.length - 3] + 2 * p.padding.value[0] - p.kernel_size.value[0]) / p.stride.value[0])\n        tmp[tmp.length - 2] = 1 + ((inp[inp.length - 2] + 2 * p.padding.value[1] - p.kernel_size.value[1]) / p.stride.value[1])\n        tmp[tmp.length - 1] = 1 + ((inp[inp.length - 1] + 2 * p.padding.value[2] - p.kernel_size.value[2]) / p.stride.value[2])\n        if (p.ceil_mode.value) {\n          tmp[tmp.length - 3] = Math.ceil(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.ceil(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.ceil(tmp[tmp.length - 1])\n        } else {\n          tmp[tmp.length - 3] = Math.floor(tmp[tmp.length - 3])\n          tmp[tmp.length - 2] = Math.floor(tmp[tmp.length - 2])\n          tmp[tmp.length - 1] = Math.floor(tmp[tmp.length - 1])\n        }\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"BatchNorm1d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm2d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"BatchNorm3d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"Bilinear\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 1] = p.out_features.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.current = inp[1]\n        return p\n      }\n    },\n    \"CELU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ConstantPad1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value;\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ConstantPad2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[0]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[1]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ConstantPad3d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        tmp[tmp.length - 3] = inp[inp.length - 3] + 2 * p.padding.value[0]\n        tmp[tmp.length - 2] = inp[inp.length - 2] + 2 * p.padding.value[1]\n        tmp[tmp.length - 1] = inp[inp.length - 1] + 2 * p.padding.value[2]\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Conv1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"Conv2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"Conv3d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"ConvTranspose1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const L_in = inp[inp.length - 1]\n        const L_out = (L_in - 1) * p.stride.value + p.dilation.value * (p.kernel_size.value - 1) + p.output_padding.value + 1\n        tmp[tmp.length - 2] = p.out_channels.value\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.value = inp[inp.length - 2]\n        return p\n      }\n    },\n    \"ConvTranspose2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = (H_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const W_out = (W_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        tmp[tmp.length - 3] = p.out_channels.value\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.value = inp[inp.length - 3]\n        return p\n      }\n    },\n    \"ConvTranspose3d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = (D_in - 1) * p.stride.value[0] + p.dilation.value[0] * (p.kernel_size.value[0] - 1) + p.output_padding.value[0] + 1\n        const H_out = (H_in - 1) * p.stride.value[1] + p.dilation.value[1] * (p.kernel_size.value[1] - 1) + p.output_padding.value[1] + 1\n        const W_out = (W_in - 1) * p.stride.value[2] + p.dilation.value[2] * (p.kernel_size.value[2] - 1) + p.output_padding.value[2] + 1\n        tmp[tmp.length - 4] = p.out_channels.value\n        tmp[tmp.length - 3] = D_out\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        p.in_channels.value = inp[inp.length - 4]\n        return p\n      }\n    },\n    \"Dropout\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Dropout2d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Dropout3d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ELU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Embedding\": {\n      outshape: (inp, p) => {\n        var tmp = inp\n        tmp.push(p.embedding_dim.value)\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"EmbeddingBag\": {\n      outshape: (inp, p) => {\n        var tmp = inp\n        tmp.push(p.embedding_dim.value)\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Flatten\": {\n      outshape: (inp, p) => {\n        var features = 1/inp[0]\n        inp.map(val => {features *= val})\n        return [inp[0], Math.round(features)]\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"FractionalMaxPool2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp;\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_in\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"GRU\": {\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GRUCell\": {\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"GroupNorm\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_channels.value = inp[1]\n        return p\n      }\n    },\n    \"Hardshrink\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Identity\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"InstanceNorm1d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm2d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"InstanceNorm3d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"LPPool1d\": {\n      outshape: (inp, p) => {\n        var tmp = inp\n        var L_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value - p.kernel_size.value) / p.stride.value\n        if (p.ceil_mode.value) {\n          L_out = Math.ceil(L_out)\n        } else {\n          L_out = Math.floor(L_out)\n        }\n        tmp[tmp.length - 1] = L_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"LPPool2d\": {\n      outshape: (inp, p) => {\n        var tmp = inp\n        var H_out = 1 + (inp[inp.length - 2] + 2 * p.padding.value[0] - p.dilation[0] * (p.kernel_size[0] - 1) - 1) / p.stride.value[0]\n        var W_out = 1 + (inp[inp.length - 1] + 2 * p.padding.value[1] - p.dilation[1] * (p.kernel_size[1] - 1) - 1) / p.stride.value[1]\n        if (p.ceil_mode.value) {\n          H_out = Math.ceil(H_out)\n          W_out = Math.ceil(W_out)\n        } else {\n          H_out = Math.floor(H_out)\n          W_out = Math.floor(W_out)\n        }\n        tmp[tmp.length - 2] = H_out\n        tmp[tmp.length - 1] = W_out\n        return tmp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"LSTM\": {\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LSTMCell\": {\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"LayerNorm\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"LeakyReLU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Linear\": {\n      outshape: (inp, p) => {\n        var idx = 0;\n        var out_shape = inp.map((val, index) => {\n          idx = index;\n          return val\n        });\n        out_shape[idx] = p.out_features.value;\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.in_features.value = inp[inp.length - 1]\n        return p\n      }\n    },\n    \"LocalResponseNorm\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"LogSigmoid\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"LogSoftmax\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool1d\": {\n      outshape: (inp, p) => {\n        const L_in = inp[inp.length - 1]\n        const L_out = Math.floor(1 + (L_in + 2 * p.padding.value - p.dilation.value * (p.kernel_size.value - 1) - 1) / p.stride.value)\n        inp[inp.length - 1] = L_out;\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool2d\": {\n      outshape: (inp, p) => {\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxPool3d\": {\n      outshape: (inp, p) => {\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        const D_out = Math.floor(1 + (D_in + 2 * p.padding.value[0] - p.dilation.value[0] * (p.kernel_size.value[0] - 1) - 1) / p.stride.value[0])\n        const H_out = Math.floor(1 + (H_in + 2 * p.padding.value[1] - p.dilation.value[1] * (p.kernel_size.value[1] - 1) - 1) / p.stride.value[1])\n        const W_out = Math.floor(1 + (W_in + 2 * p.padding.value[2] - p.dilation.value[2] * (p.kernel_size.value[2] - 1) - 1) / p.stride.value[2])\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxUnpool1d\": {\n      outshape: (inp, p) => {\n        const H_in = inp[inp.length - 1]\n        inp[inp.length - 1] = (H_in - 1) * p.stride.value - 2 * p.padding.value + p.kernel_size.value\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxUnpool2d\": {\n      outshape: (inp, p) => {\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"MaxUnpool3d\": {\n      outshape: (inp, p) => {\n        const D_in = inp[inp.length - 3]\n        const H_in = inp[inp.length - 2]\n        const W_in = inp[inp.length - 1]\n        inp[inp.length - 3] = (D_in - 1) * p.stride.value[0] - 2 * p.padding.value[0] + p.kernel_size.value[0]\n        inp[inp.length - 2] = (H_in - 1) * p.stride.value[1] - 2 * p.padding.value[1] + p.kernel_size.value[1]\n        inp[inp.length - 1] = (W_in - 1) * p.stride.value[2] - 2 * p.padding.value[2] + p.kernel_size.value[2]\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"PReLU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"RNN\": {\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RNNCell\": {\n      outshape: (inp, p) => {\n        var idx = 0\n        var out_shape = inp.map((val, index) => {\n          idx = index\n          return val\n        })\n        out_shape[idx] = p.hidden_size.value\n        return out_shape\n      },\n      autoparams: (inp, p) => {\n        p.input_size.value = inp[inp.length-1]\n        return p\n      }\n    },\n    \"RReLU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReLU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReLU6\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReflectionPad1d\": {\n      outshape: (inp, p) => {\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReflectionPad2d\": {\n      outshape: (inp, p) => {\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReplicationPad1d\": {\n      outshape: (inp, p) => {\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReplicationPad2d\": {\n      outshape: (inp, p) => {\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[0]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ReplicationPad3d\": {\n      outshape: (inp, p) => {\n        let D_out = inp[inp.length - 3] + 2 * p.padding.value[0]\n        let H_out = inp[inp.length - 2] + 2 * p.padding.value[1]\n        let W_out = inp[inp.length - 1] + 2 * p.padding.value[2]\n        inp[inp.length - 3] = D_out\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"SELU\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Sigmoid\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Softmax\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Softmax2d\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Softmin\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Softplus\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Softshrink\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Softsign\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"SyncBatchNorm\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        p.num_features.value = inp[1]\n        return p\n      }\n    },\n    \"Tanh\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Tanhshrink\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"Threshold\": {\n      outshape: (inp, p) => {\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    },\n    \"ZeroPad2d\": {\n      outshape: (inp, p) => {\n        const H_out = inp[inp.length - 2] + 2 * p.padding[0]\n        const W_out = inp[inp.length - 1] + 2 * p.padding[1]\n        inp[inp.length - 2] = H_out\n        inp[inp.length - 1] = W_out\n        return inp\n      },\n      autoparams: (inp, p) => {\n        return p\n      }\n    }\n  }\n}","import { MainLibrary } from \"./MainLibrary\";\n\n\n// Cascaded simplifying and de-simplifying\n\n// Parameters\nfunction SimplifyParameters(parameters) {\n  var new_parameters = [];\n  Object.keys(parameters).sort().map((p_key, idx) => {\n    new_parameters.push(parameters[p_key].value)\n  })\n  return new_parameters\n}\nfunction DeSimplifyParameters(parameters, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  var new_param_lib = {};\n  Object.keys(recipe).map(p_key => new_param_lib[p_key] = null)\n  Object.keys(recipe).sort().map((p_key, idx) => {\n    new_param_lib[p_key] = recipe[p_key];\n    new_param_lib[p_key].value = parameters[idx];\n  })\n  return new_param_lib\n}\n\n// Content\nfunction SimplifyContent(content) {\n  var new_content = {};\n  Object.keys(content).sort().map((library_key, idx) => {\n    new_content[library_key] = [\n      content[library_key].reference,\n      SimplifyParameters(content[library_key].parameters)\n    ]\n  })\n  return new_content\n}\nfunction DeSimplifyContent(content, recipe) {\n  recipe = JSON.parse(JSON.stringify(recipe));\n  var new_content_lib = {}\n  Object.keys(recipe).sort().map((library_key, idx) => {\n    if (library_key in content) {\n      new_content_lib[library_key] = {\n        reference: content[library_key][0],\n        parameters: DeSimplifyParameters(content[library_key][1], recipe[library_key].parameters)\n      }\n    } else {\n      new_content_lib[library_key] = recipe[library_key]\n    }\n  })\n  return new_content_lib\n}\n\n// Outputs\nfunction SimplifyOutputs(outputs) {\n  var new_outputs = [];\n  Object.keys(outputs).sort().map(key => {\n    new_outputs.push(key)\n  })\n  return new_outputs\n}\nfunction DeSimplifyOutputs(outputs) {\n  var new_outputs_lib = {};\n  outputs.map(key => {\n    new_outputs_lib[key] = {}\n  })\n  return new_outputs_lib\n}\n\n// Position\nfunction SimplifyPosition(pos) {\n  return [\n    pos.x,\n    pos.y\n  ]\n}\nfunction DeSimplifyPosition(pos) {\n  return {\n    x: pos[0],\n    y: pos[1]\n  }\n}\n\n// Entire flowpoint\nfunction SimplifyFlowpoint(flowpoint) {\n  var new_flowpoint = {\n    ref: flowpoint.base_ref,\n    name: flowpoint.name,\n    isout: flowpoint.is_output,\n    out: SimplifyOutputs(flowpoint.outputs),\n    pos: SimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs,\n    concat_dim: flowpoint.concat_dim,\n    cont: {}\n  }\n  if (flowpoint.base_ref === 'Input') {\n    new_flowpoint.cont = flowpoint.content;\n  } else {\n    new_flowpoint.cont = SimplifyContent(flowpoint.content)\n  }\n  return new_flowpoint\n}\nfunction DeSimplifyFlowpoint(flowpoint, getEmptyFlowpointContent) {\n  const recipe = getEmptyFlowpointContent(flowpoint.ref);\n  var new_flowpoint_lib = {\n    base_ref: flowpoint.ref,\n    name: flowpoint.name,\n    is_output: flowpoint.isout,\n    outputs: DeSimplifyOutputs(flowpoint.out),\n    pos: DeSimplifyPosition(flowpoint.pos),\n    concat_inputs: flowpoint.concat_inputs || false,\n    concat_dim: flowpoint.concat_dim || 0,\n    output_shape: [],\n    content: {},\n  };\n  if (flowpoint.ref === 'Input') {\n    new_flowpoint_lib.content = flowpoint.cont;\n  } else {\n    new_flowpoint_lib.content = DeSimplifyContent(flowpoint.cont, recipe)\n  }\n  return new_flowpoint_lib\n}\n\n// Fix tuples\nfunction FixTuples(flowpoints) {\n  Object.keys(flowpoints).map(key => {\n    var point = flowpoints[key];\n    if (point.base_ref !== 'Input') {\n      Object.keys(point.content).map(lib_key => {\n        var content = flowpoints[key].content[lib_key];\n        Object.keys(content.parameters).map(param_key => {\n          var param = flowpoints[key].content[lib_key].parameters[param_key];\n          if (param.istuple && !Array.isArray(param.value)) {\n\n            if (point.base_ref.toLowerCase().includes('1d')) {\n              param.value = [param.value];\n            } else if (point.base_ref.toLowerCase().includes('2d')) {\n              param.value = [param.value, param.value]\n            } else if (point.base_ref.toLowerCase().includes('3d')) {\n              param.value = [param.value, param.value, param.value]\n            }\n\n            if (!Array.isArray(param.value)) {\n              var sample_tuple = null;\n              Object.keys(content).map(param_key_2 => {\n                const p2 = content[param_key_2];\n                if (p2.istuple && Array.isArray(p2.value)) sample_tuple = p2.value.map(val => 1 * val)\n              })\n            }\n\n            if (!Array.isArray(param.value)) console.log('Could not fix', point)\n\n          }\n        })\n      })\n    }\n  })\n  return flowpoints\n}\n\n// Flowpoints (like plural)\nfunction SimplifyFlowpoints(flowpoints) {\n  var new_flowpoints = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints[key] = SimplifyFlowpoint(flowpoints[key])\n  })\n  return new_flowpoints\n}\nfunction DeSimplifyFlowpoints(flowpoints, getEmptyFlowpointContent) {\n  var new_flowpoints_lib = {};\n  Object.keys(flowpoints).sort().map((key, idx) => {\n    new_flowpoints_lib[key] = DeSimplifyFlowpoint(flowpoints[key], getEmptyFlowpointContent)\n  })\n  return FixTuples(new_flowpoints_lib)\n}\n\n// Environment\nfunction SimplifyEnvironment(env) {\n  return [\n    env.library,\n    env.notes\n  ]\n}\nfunction DeSimplifyEnvironment(env, main_env) {\n  var new_env_lib = JSON.parse(JSON.stringify(main_env));\n  new_env_lib.library = '' + env[0]\n  new_env_lib.notes = '' + env[1]\n  new_env_lib.autoparams = main_env.autoparams\n  return new_env_lib\n}\n\n// Visual\nfunction SimplifyVisual(vis) {\n  return [\n    vis.darkTheme,\n    vis.theme,\n    vis.background,\n    vis.variant,\n    vis.drawerOpen,\n    vis.showShape,\n    vis.showName,\n    vis.snap\n  ]\n}\nfunction DeSimplifyVisual(vis, main_vis) {\n  var new_vis_lib = JSON.parse(JSON.stringify(main_vis));\n  new_vis_lib.darkTheme = vis[0]\n  new_vis_lib.theme = vis[1]\n  new_vis_lib.background = vis[2]\n  new_vis_lib.variant = vis[3]\n  new_vis_lib.drawerOpen = vis[4]\n  new_vis_lib.showShape = vis[5]\n  new_vis_lib.showName = vis[6]\n  new_vis_lib.snap = vis[7]\n  return new_vis_lib\n}\n\n// Settings\nfunction SimplifySettings(settings) {\n  return [\n    settings.modelID,\n    settings.count,\n    settings.lastPos\n  ]\n}\nfunction DeSimplifySettings(settings, main_set) {\n  var new_set_lib = JSON.parse(JSON.stringify(main_set));\n  new_set_lib.modelID = settings[0]\n  new_set_lib.count = settings[1]\n  new_set_lib.lastPos = settings[2]\n  return new_set_lib\n}\n\n// Try to parse json\nfunction TryParseJSON(msg) {\n  try {\n    return JSON.parse(msg)\n  } catch(err) {}\n  return msg\n}\n\n// Full\nfunction Simplify(state) {\n  return {\n    flowpoints: SimplifyFlowpoints(state.flowpoints),\n    environment: SimplifyEnvironment(state.environment),\n    visual: SimplifyVisual(state.visual),\n    settings: SimplifySettings(state.settings),\n  }\n}\nfunction DeSimplify(state, getEmptyFlowpointContent, main_lib) {\n  state = TryParseJSON(state)\n  //var main_lib = MainLibrary();\n  return {\n    flowpoints: DeSimplifyFlowpoints(state.flowpoints, getEmptyFlowpointContent),\n    environment: DeSimplifyEnvironment(state.environment, main_lib.environment),\n    visual: DeSimplifyVisual(state.visual, main_lib.visual),\n    settings: DeSimplifySettings(state.settings, main_lib.settings),\n    notification: main_lib.notification\n  }\n}\n\n\nexport function Library2String(state) {\n\n  return JSON.stringify(Simplify(state))\n\n}\n\n\nexport function String2Library(msg, getEmptyFlowpointContent, main_lib) {\n  \n  return DeSimplify(msg, getEmptyFlowpointContent, main_lib)\n\n}","var axios = require('axios');\n\nfunction rjust(msg, n, rep) {\n  msg = '' + msg\n  Array.from(Array(Math.max(0, n - msg.length)).keys()).map(() => {\n    msg = rep + msg\n  })\n  return msg\n}\n\n\nfunction num2bigBase(num, lib) {\n  if (!lib) {\n    lib = '0123456789'\n    lib += 'abcdefghijklmnopqrstuvwxyz'\n    lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  }\n  if (num < lib.length) {\n    return lib[num]\n  } else {\n    return num2bigBase(Math.floor(num / lib.length)) + lib[num % lib.length]\n  }\n}\n\n\nfunction getId(l) {\n  l = Math.min(20, Math.max(10, l || 15))\n  var lib = '0123456789'\n  lib += 'abcdefghijklmnopqrstuvwxyz'\n  lib += 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  var msg = ''\n  msg += Math.round(Math.random() * 100)\n  var d = new Date()\n  msg += rjust(d.getSeconds(), 2, 0)\n  msg += rjust(d.getMinutes(), 2, 0)\n  msg += rjust(d.getHours(), 2, 0)\n  msg += rjust(d.getDate(), 2, 0)\n  msg += rjust(d.getMonth(), 2, 0)\n  msg += rjust(parseInt(d.getYear().toString().substring(1)), 2, 0)\n  msg = num2bigBase(msg, lib)\n  Array.from(Array(l - msg.length).keys()).map(() => {\n    msg = lib[Math.round(Math.random() * (lib.length - 1))] + msg\n  })\n  return msg\n}\n\n\nexport function PostToDataBase(data, cb) {\n  let model_id = getId(12)\n  data.match(/.{1,5000}/g).map((msg, idx) => {\n    try {\n      var url = 'https://docs.google.com/forms/d/e/1FAIpQLSfA4C6HCBGWLtdfUI4th6VDR7cjtSsj0fp0Tomw96CbgqjO9g/formResponse?usp=pp_url'\n      url += '&entry.1116133740=' + model_id;\n      url += '&entry.1405886587=' + msg + '_NnUuMmBbEeRr_' + rjust('' + idx, 4, '0');\n      url += '&submit=Submit'\n      axios.get(url).then(() => {})\n    } catch(err) {}\n  })\n  if (cb) cb(model_id)\n}\n\n\nexport function LoadDataBase(cb) {\n  axios.get('https://docs.google.com/spreadsheets/d/10LoweeCDvGHQBHb8Plr_1IrLXPy4-N7CFqzcO73MqCs/export?format=csv&id=1qNBuXr5KIHPHqoNBgZEao2F3rAjBtMiQf6fsEDug0mk&gid=0').then(res => {\n    var data = {};\n    var concat_data = {};\n    var raw = res.data.split('\\r\\n');\n    var tmp;\n    for (var idx = 1; idx < raw.length; idx++) {\n      tmp = raw[idx].split(',')\n      if (!(tmp[0] in concat_data)) concat_data[tmp[0]] = {}\n      var number = tmp[1].substring(tmp[1].length - 18)\n      if (number.includes('NnUuMmBbEeRr')) concat_data[tmp[0]][number] = tmp[1].substring(0, tmp[1].length - 18)\n    }\n    // Concating data\n    Object.keys(concat_data).map(key => {\n      data[key] = ''\n      Object.keys(concat_data[key]).sort().map(msg => {\n        data[key] += concat_data[key][msg]\n      })\n    })\n    if (cb) cb(data)\n  })\n}","var CryptoJS = require(\"crypto-js\");\n\n\nfunction ReplaceAll(str, search, replacement) {\n  var newstr = ''\n  str.split(search).map(val => {newstr += val + replacement})\n  return newstr.substring(0, newstr.length - replacement.length)\n}\n\n\nfunction getSpecialsLib(reversed) {\n  var lib = {\n    '§': '%C2%A7',\n    '\"': '%22',\n    '#': '%23',\n    '%': '%25',\n    '&': '%26',\n    '=': '%3D',\n    '`': '%60',\n    '^': '%5E',\n    '+': '%2B',\n    '´': '%C2%B4',\n    '¨': '%C2%A8'\n  }\n  if (reversed) {\n    var revlib = {}\n    Object.keys(lib).map(key => {\n      revlib[lib[key]] = key\n    })\n    return revlib\n  }\n  return lib\n}\n\n\nexport function Encrypt(data, key) {\n  var toEncrypt = {\n    test_string: 'there_are_fish_in_the_ocean',\n    data: data\n  }\n  var encrypted = CryptoJS.AES.encrypt(JSON.stringify(toEncrypt), key).toString()\n  const specials = getSpecialsLib()\n  Object.keys(specials).map(key => {\n    encrypted = ReplaceAll(encrypted, key, specials[key])\n  })\n  return encrypted\n}\n\n\nexport function Decrypt(data, key) {\n  var msg = data\n  const specials = getSpecialsLib(true)\n  Object.keys(specials).map(key => {\n    msg = ReplaceAll(msg, key, specials[key])\n  })\n  var decrypted = '';\n  try {\n    decrypted = CryptoJS.AES.decrypt(msg, key).toString(CryptoJS.enc.Utf8)\n  } catch(err) {\n    return false\n  }\n  if (decrypted.includes('there_are_fish_in_the_ocean')) {\n    return JSON.parse(decrypted).data\n  }\n  return false\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport Collapse from '@material-ui/core/Collapse';\n\n\nclass WhatIsThis extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    }\n  }\n  render() {\n    return (\n      <div style={{padding:0}}>\n        <Button color='primary' style={{textTransform:'none', padding:'1', marginLeft:-7}} onClick={() => {this.setState({open:!this.state.open}); this.props.onClick()}}>\n          What is this?\n        </Button>\n        <div style={{marginLeft:20, marginTop:10}} onClick={() => {this.setState({open:false}); this.props.onClick()}}>\n          <Collapse in={this.state.open}>\n            <Typography color='inherit' paragraph>Model protection, using AES encryption.</Typography>\n            <Typography color='inherit' paragraph>\n              When a model is saved, it's content is converted to a string and stored in a\n              publicly view-able google sheet.<br/>\n              Altough anyone can see the model in this google sheet, encryption will make it\n              impossible for anyone without the password to read the model.\n            </Typography>\n            <Typography color='inherit' paragraph>\n              If you choose to encrypt your model, your own device will perform the\n              encryption, and then send the encrypted model to the google sheet.<br/><br/>\n\n              When you try to load an encrypted model, the encrypted string will be downloaded\n              from the google sheet, and then decrypted by your device.<br/><br/>\n              This ensures point-to-point encryption, in which no un-encrypted data is ever\n              transmitted over the internet.\n            </Typography>\n            <Typography color='inherit' style={{fontWeight:'bold'}} paragraph>\n              NB!<br/>\n              The password is NEVER STORED! If you forget your password, the contents\n              of your model cannot be recovered.\n            </Typography>\n          </Collapse>\n        </div>\n        <br/>\n      </div>\n    )\n  }\n}\n\n\nexport class LoadDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: false,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Encrypted model</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Please type your password in order to decrypt the model<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) {this.props.onSubmit(this.state.pswd)}\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              if (this.state.pswd === '') {\n                this.props.onClose()\n              } else {\n                this.props.onSubmit(this.state.pswd)\n              }\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'CONTINUE WITHOUT LOADING MODEL') : 'DECRYPT MODEL'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\n\nexport class SaveDialog extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      open: true,\n      pswd: ''\n    };\n    this.fieldRef = null;\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\">\n        <DialogTitle id=\"alert-dialog-title\">Model encryption (optional)</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            Type a password to encrypt your model, or leave the\n            password field empty in order to create a public link<br/>\n            <WhatIsThis onClick={() => {if (this.fieldRef) {this.fieldRef.focus()}}}/>\n            <form \n              autoComplete='off'\n              style={{marginTop:0, paddingTop:0}}\n              onSubmit={(e) => {\n                e.preventDefault();\n                if (this.props.onSubmit) this.props.onSubmit(this.state.pswd)\n              }}>\n              <TextField\n                id=\"pswdfield\"\n                label={this.props.error ? 'Wrong password' : 'Password'}\n                error={this.props.error}\n                value={this.state.pswd}\n                onChange={(e) => {\n                  this.setState({pswd:e.target.value})\n                }}\n                type=\"text\"\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                style={{width:'100%', marginTop:0, paddingTop:0}}\n                margin=\"normal\"\n                inputRef={(input) => {if (input) {input.focus(); this.fieldRef = input}}}/>\n            </form>\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => {\n              this.props.onSubmit(this.state.pswd)\n            }}\n            color=\"primary\">\n            {\n              (this.state.pswd === '') ? (this.props.continueMsg ? this.props.continueMsg : 'Continue without password') : 'Continue'\n            }\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}","import React from 'react';\nimport { Typography, Dialog, DialogTitle, DialogContentText, DialogContent, ExpansionPanel, ExpansionPanelSummary, Stepper, StepContent, StepLabel, Step, Link } from \"@material-ui/core\";\n\n\nexport class HelpDialog extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state = { step:0 }\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo(idx) {\n    this.setState({ step:idx })\n  }\n\n  render() {\n    return (\n      <Dialog\n        open={this.props.open}\n        onClose={this.props.onClose}\n        fullWidth\n        maxWidth='sm'\n        style={{maxHeight:'90vh', height:'auto'}}>\n\n        <DialogTitle>Getting started</DialogTitle>\n\n        <div style={{overflow:'scroll', width:'100%'}}>\n\n          <DialogContent>\n            <DialogContentText>\n              Welcome to Flowpoints ML!<br/>\n              Here you can design deep learning models graphically.<br/><br/>\n              The following few sections will help you get going :)<br/>\n              You can also check out the <Link href='https://github.com/mariusbrataas/flowpoints_ml#readme' target='_blank'>documentation</Link> for more information.<br/><br/>\n              Found an bug? Please open a new <Link href=\"https://github.com/mariusbrataas/flowpoints_ml/issues\" target='_blank'>issue</Link>, and feel free to fix it!\n            </DialogContentText>\n          </DialogContent>\n\n          <Stepper activeStep={this.state.step} orientation='vertical'>\n\n            <Step key={0} completed={false}>\n              <StepLabel onClick={() => {this.goTo(0)}}>The main parts of the screen</StepLabel>\n              <StepContent>\n                <Typography>\n                  Before we get started you should know the main parts of this tool.<br/><br/>\n                  \n                  The little stack of colored buttons:<br/>\n                  You'll use these for creating new flowpoints, copy the entire code of your model,\n                  create shareable links to your model, show/hide the panel on the left of your screen,\n                  and to view this guide.<br/><br/>\n                  \n                  The \"Misc\" tab in the side panel:<br/>\n                  Here you can change what library you want to utilize to create your model,\n                  write some notes about your work, and change the appearance of things.\n                  \n                  The \"Code\" tab in the side panel:<br/>\n                  When you create a model, it's corresponding code will be displayed here.<br/><br/>\n                  \n                  The \"Flowpoint\" tab:<br/>\n                  All parameters of the selected flowpoint can be viewed and changed in this tab.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={1} completed={false}>\n              <StepLabel onClick={() => {this.goTo(1)}}>Creating a new flowpoint</StepLabel>\n              <StepContent>\n                <Typography>\n                  Click the + button in the button stack. This should create a new\n                  flowpoint on your screen and move focus to this one automatically.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={2} completed={false}>\n              <StepLabel onClick={() => {this.goTo(2)}}>Connecting flowpoints</StepLabel>\n              <StepContent>\n                <Typography>\n                  First create two flowpoints.<br/>\n                  Did they create a connection automatically? No worries, that is supposed\n                  to happen whenever you create a flowpoint while another flowpoint is selected.<br/><br/>\n                  To create a new connection manually, start by selecting the flowpoint\n                  you want to get the output from. Next, hold shift while clicking the flowpoint\n                  that should receive the output. Poof! They're connected!<br/><br/>\n                  Disconnecting flowpoints is just as simple. Select the flowpoint that supplies the output,\n                  hold shift, and click the flowpoint that's receiving the input.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={3} completed={false}>\n              <StepLabel onClick={() => {this.goTo(3)}}>Direction of connections</StepLabel>\n              <StepContent>\n                <Typography>\n                  All connections between flowpoints signify what direction data is moving.<br/><br/>\n                  When connecting two flowpoints, the first flowpoint you select will be used as\n                  the \"sender\" in that connection, while the second flowpoint will be the \"receiver\".<br/><br/>\n                  The color-gradient of connections help identify which is which.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={4} completed={false}>\n              <StepLabel onClick={() => {this.goTo(4)}}>Changing a flowpoint's parameters</StepLabel>\n              <StepContent>\n                <Typography>\n                  If you head over to the \"Flowpoint\" tab you should see a bunch of fields\n                  (click on a flowpoint if you can't see any such fields).<br/><br/>\n                  To change the value of a field, click it, and try typing something.\n                  Note that some fields will only accept numbers.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={5} completed={false}>\n              <StepLabel onClick={() => {this.goTo(5)}}>Layer types</StepLabel>\n              <StepContent>\n                <Typography>\n                  The field at the very top in the \"Flowpoint\" tab is where you assign\n                  a layer type to your flowpoint.<br/><br/>\n                  When you click this field, a long list will pop up. These are all\n                  the layers available. Small, colored badges indicate what libraries the\n                  layer is available in, i.e. TF for TensorFlow, or PT for PyTorch.<br/><br/>\n                  If you start typing the name of a layer, the list will try to suggest a smaller selection of layers.<br/><br/>\n                  Ideally, it should be possible to create models utilizing layers that are available\n                  in either library, and quickly switch between them by just changing the \"Library\" field\n                  in the \"Misc\" tab.<br/>\n                  This won't always be the case, but entertain this idea, paramaters from all libraries\n                  will be stored whenever you create a link to your model.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={6} completed={false}>\n              <StepLabel onClick={() => {this.goTo(6)}}>Changing appearance</StepLabel>\n              <StepContent>\n                <Typography>\n                  Head over to the \"Misc\" tab. You'll see the fields \"Theme\" and \"Variant\",\n                  and a couple of buttons just beneath.<br/><br/>\n                  These have no practical application what-so-ever, but you'll be able to\n                  create deep learning models with style! I recommend trying the theme \"orange\"\n                  with the variant \"paper\".<br/><br/>\n                  Play arround till you find something you like. When you share a model, any\n                  changes to it's appearance will be included.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={7} completed={false}>\n              <StepLabel onClick={() => {this.goTo(7)}}>Sharing</StepLabel>\n              <StepContent>\n                <Typography>\n                  Ready to show off your work?<br/><br/>\n                  Click the button in the button stack showing a link. This should open a new box on your\n                  screen, asking wether you'd like to encrypt your model.<br/><br/>\n                  Adding encryption will ensure that no one without the correct password can open your model.<br/><br/>\n                  If you want to create a public link, just leave the text field empty and click continue.<br/><br/>\n                  The link will be copied to your clip-board, and the current URL should at the top of your\n                  browser will change in order to match the link.<br/><br/>\n                  If you chose to add a password, this password will be requested the next time you open your model.<br/><br/>\n                  Note that if you forget your password, the data of your model can be considered lost.\n                  Your password is not stored anywhere, and there exists no other keys that can decrypt your data.\n                </Typography>\n              </StepContent>\n            </Step>\n\n            <Step key={8} completed={false}>\n              <StepLabel onClick={() => {this.goTo(8)}}>Examples</StepLabel>\n              <StepContent>\n                <Typography>\n                  PdGo86nNbq1B\n                </Typography>\n              </StepContent>\n            </Step>\n\n          </Stepper>\n        </div>\n      </Dialog>\n    )\n  }\n}","import React, { Component } from 'react';\nimport './App.css';\n\n// Importing installed tools\nimport { Flowpoint, Flowspace } from 'flowpoints';\nimport copy from 'copy-to-clipboard';\n\n\n// Importing local tools\nimport { Sidebar } from './sidebar/Sidebar.js';\nimport { MainButtons } from './MainButtons';\nimport { Parser } from './parser/Parser';\nimport { Library2String, String2Library } from './LibraryParser';\nimport { PostToDataBase, LoadDataBase } from './DataBaseHandler';\nimport { Encrypt, Decrypt } from './Cryptographer';\nimport { Snackbar, SnackbarContent } from '@material-ui/core';\nimport { LoadDialog, SaveDialog } from './PasswordDialog.js';\nimport { MainLibrary } from './MainLibrary';\nimport { HelpDialog } from './HelpDialog';\n\n\nfunction shapeBox(shape) {\n  var msg = '['\n  shape.map(val => {\n    msg += val + ','\n  })\n  if (shape.length > 0) msg = msg.substring(0, msg.length - 1)\n  msg += ']'\n  return (\n    <div style={{textAlign:'center', paddingBottom:'10px'}}>\n      {\n        msg\n      }\n    </div>\n  )\n}\n\n\nclass App extends Component{\n  \n  constructor(props) {\n    super(props);\n\n    // Building state library\n    this.state = MainLibrary()\n\n    // Helpers\n    this.diagramRef = null;\n\n    // Binding class methods\n    this.showNotification = this.showNotification.bind(this);\n    this.updateCode = this.updateCode.bind(this);\n    this.updateAvailableLayers = this.updateAvailableLayers.bind(this);\n    this.prepOutputShapes = this.prepOutputShapes.bind(this);\n    this.loadDecryptedModel = this.loadDecryptedModel.bind(this);\n    this.getEmptyFlowpointContent = this.getEmptyFlowpointContent.bind(this);\n    this.addFlowpoint = this.addFlowpoint.bind(this);\n    this.copyCode = this.copyCode.bind(this);\n    this.createLink = this.createLink.bind(this);\n    this.showHideHelp = this.showHideHelp.bind(this);\n    this.showHide = this.showHide.bind(this);\n    this.deleteFlowpoint = this.deleteFlowpoint.bind(this);\n    this.deleteSelected = this.deleteSelected.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  }\n\n  \n  componentDidMount() {\n\n    // Open drawer\n    var visual = this.state.visual;\n    visual.drawerOpen = true;\n    this.setState({visual});\n\n    // Loading model?\n    var query = window.location.href.split(this.state.settings.baseUrl)[1]\n    if (query.includes('p=')) {\n\n      query = query.substring(query.indexOf('p=') + 2, query.length)\n      query = query.substring(0, 12)\n\n      // Notify user that model is trying to load\n      this.showNotification('Trying to load model...', 'info')\n\n      // Loading database\n      LoadDataBase(data => {\n\n        // Model in data?\n        if (query in data) {\n          var decrypted = Decrypt(data[query], 'Hello world')\n          // Encryption?\n          if (decrypted) {\n            this.loadDecryptedModel(decrypted, query)\n          } else {\n            this.showNotification('Model is encrypted')\n            var visual = this.state.visual;\n            var environment = this.state.environment;\n            var settings = this.state.settings;\n            settings.modelID = query;\n            environment.encrypted_model = data[query]\n            visual.show_load_dialog = true;\n            this.setState({visual, environment, settings})\n          }\n\n        } else {\n          this.showNotification('Could not find model in database', 'error')\n        }\n\n      })\n\n    }\n\n    // Updating available layers\n    this.updateAvailableLayers()\n\n  }\n\n\n  showNotification(msg, color) {\n    if (!((color || 'nothing').includes('#'))) {\n      switch(color) {\n        case 'info':\n          color = '#2979ff'\n          break;\n        case 'error':\n          color = '#dd2c00'\n          break;\n        case 'warning':\n          color = '#ffd600'\n          break;\n        case 'success':\n          color = '#00b843'\n          break;\n        default:\n          color = '#37474f'\n      }\n    }\n    var notification = this.state.notification;\n    notification.queue.push({\n      msg,\n      color,\n      key: new Date().getTime()\n    })\n    if (notification.show) {\n      notification.show = false;\n    } else {\n      if (notification.queue.length) {\n        notification.content = notification.queue.shift()\n        notification.show = true\n      }\n    }\n    this.setState({notification})\n  }\n\n\n  updateCode(cb) {\n    var environment = this.state.environment;\n    let tmp = Parser(this.state)\n    environment.code = tmp.msg;\n    environment.order = tmp.order;\n    environment.dummies = tmp.dummies;\n    this.setState({environment})\n    this.prepOutputShapes();\n    if (cb) cb(environment.code)\n  }\n\n\n  updateAvailableLayers() {\n\n    var environment = this.state.environment;\n\n    // Creating list\n    var availableLayers = {Input: Object.keys(environment.libraryFetchers)};\n    Object.keys(environment.baseLib).map(layer_key => {\n      availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\n      //if (environment.baseLib[layer_key][environment.library]) {\n      //  availableLayers[layer_key] = Object.keys(environment.baseLib[layer_key])\n      //}\n    })\n\n    // Updating environment\n    environment.availableLayers = availableLayers;\n\n    // Updating state\n    this.setState({environment})\n\n  }\n\n\n  prepOutputShapes() {\n\n    if (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) {\n\n      // Helpers\n      const autoparams = this.state.environment.autoparams[this.state.environment.library]();\n      var flowpoints = this.state.flowpoints;\n      var dummies = this.state.environment.dummies;\n      const order = this.state.environment.order;\n      const library = this.state.environment.library;\n\n      // Setting output-shapes of inputs\n      var visited = []\n      order.map(key => {\n        var point = flowpoints[key]\n        if (point.base_ref === 'Input') {\n          point.output_shape = Object.keys(point.content.dimensions).map(dimkey => {\n            return parseInt(point.content.dimensions[dimkey])\n          })\n          visited.push(key)\n        }\n      })\n\n      // Setting all output-shapes\n      order.map(key => {\n        if (!visited.includes(key)) {\n          var point = flowpoints[key]\n          var tmp_autoparams = autoparams[point.content[library].reference];\n          if (tmp_autoparams) {\n            var bestInp = null\n            dummies[key].inputs.map(inp_key => {\n              if (visited.includes(inp_key)) bestInp = inp_key\n            })\n            const prevshape = flowpoints[bestInp].output_shape.map(value => 1 * value);\n            point.content[library].parameters = tmp_autoparams.autoparams(prevshape, point.content[library].parameters)\n            point.output_shape = tmp_autoparams.outshape(prevshape, point.content[library].parameters).map(value => parseInt(value))\n            visited.push(key)\n          }\n        }\n      })\n\n      // Updating state\n      this.setState({ flowpoints })\n\n    }\n\n  }\n\n\n  loadDecryptedModel(decrypted, model_id) {\n\n    // Parsing\n    var new_state = String2Library(decrypted, this.getEmptyFlowpointContent, this.state)\n\n    // Updating visual\n    new_state.visual.show_load_dialog = false;\n    new_state.visual.load_dialog_error = false;\n    new_state.visual.show_save_dialog = false;\n\n    // Ensuring getbaselib and library fetchers are added\n    new_state.environment.getBaseLibrary = this.state.environment.getBaseLibrary\n    new_state.environment.libraryFetchers = this.state.environment.libraryFetchers\n\n    // Fixing model ID\n    new_state.settings.modelID = model_id || this.state.settings.modelID;\n\n    // Setting state\n    this.setState({flowpoints:{}, settings:{...this.state.settings, count:0}}, () => {\n      this.setState(new_state, () => {\n        // Showing notification\n        this.showNotification('Loaded model', '#00b24a')\n  \n        // Updating code and layers\n        this.updateAvailableLayers()\n        this.updateCode()\n      })\n    })\n\n  }\n\n\n  getEmptyFlowpointContent(base_ref) {\n\n    // Input nodes are treated differently from all other nodes\n    if (base_ref === 'Input') {\n      return {\n        n_dims: 4,\n        dimensions: {\n          0: 1,\n          1: 1,\n          2: 1,\n          3: 1\n        }\n      }\n    }\n\n    // Not an input node? Getting base_library references\n    var environment = this.state.environment;\n    const base_point = environment.getBaseLibrary()[base_ref];\n\n    // Adding contents and returning\n    var content = {};\n    Object.keys(base_point).map(library_key => {\n      if (library_key in environment.libraryFetchers) {\n        content[library_key] = {\n          reference: base_point[library_key],\n          parameters: environment.libraryFetchers[library_key]()[base_point[library_key]]\n        }\n      }\n    })\n    return content\n\n  }\n\n\n  addFlowpoint() {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Creating flowpoint\n    const base_ref = settings.count === 0 ? 'Input' : 'Linear';\n    var newPoint = {\n      base_ref: base_ref,\n      name: '',\n      outputs: {},\n      is_output: false,\n      concat_inputs: false,\n      concat_dim: 0,\n      output_shape: [],\n      pos: {\n        x: settings.lastPos.x,\n        y: settings.lastPos.y + 90\n      },\n      content: this.getEmptyFlowpointContent(base_ref)\n    }\n\n    // Adding flowpoint\n    flowpoints['' + settings.count] = newPoint;\n\n    // Connecting previously selected flowpoint to this one (maybe)\n    if (settings.selected) flowpoints[settings.selected].outputs['' + settings.count] = {}\n\n    // Updating settings\n    settings.selected = '' + settings.count\n    settings.count += 1\n    settings.lastPos = {\n      x: settings.lastPos.x,\n      y: settings.lastPos.y + 90\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  copyCode() {\n    this.updateCode(code => {\n      copy(code);\n      this.showNotification('Code copied to clip-board', 'info')\n    })\n  }\n\n\n  createLink() {\n    var visual = this.state.visual;\n\n    // Showing encryption dialog\n    visual.show_save_dialog = true\n\n    // Updating state\n    this.setState({visual})\n\n  }\n\n\n  showHideHelp() {\n    var visual = this.state.visual;\n    visual.show_help_dialog = !visual.show_help_dialog;\n    this.setState({visual})\n  }\n\n\n  showHide() {\n    \n    // Loading from state\n    var visual = this.state.visual;\n    \n    // Open/close drawer\n    visual.drawerOpen = !visual.drawerOpen;\n\n    // Updating state\n    this.setState({ visual })\n\n  }\n\n\n  deleteFlowpoint(key) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Removing selected?\n    if (key === settings.selected) settings.selected = null;\n\n    // Deleting flowpoint\n    delete flowpoints[key];\n\n    // Removing any connections other flowpoints have to the deleted one\n    Object.keys(flowpoints).map(test_key => {\n      if (key in flowpoints[test_key].outputs) {\n        delete flowpoints[test_key].outputs[key]\n      }\n    })\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  deleteSelected() {\n    this.deleteFlowpoint(this.state.settings.selected);\n  }\n\n\n  handleClick(key, e) {\n\n    // Loading from state\n    var flowpoints = this.state.flowpoints;\n    var settings = this.state.settings;\n\n    // Handling click\n    if (e.shiftKey) {\n      // If shift is pressed: Create / delete connection\n      if (settings.selected === null) {\n        // Nothing selected: selecting current\n        settings.selected = key;\n      } else {\n        if (settings.selected !== key) {\n          // Creating connection from previously clicked to current clicked\n          var pointA = flowpoints[settings.selected]\n          if (key in pointA.outputs) {\n            delete pointA.outputs[key]\n          } else {\n            pointA.outputs[key] = {}\n          }\n          this.updateCode()\n        }\n      }\n    } else {\n      // If not shift pressed: Select / deselect flowpoint\n      settings.selected = (settings.selected === null ? key : (settings.selected == key ? null : key))\n    }\n\n    // Updating state\n    this.setState({\n      flowpoints,\n      settings\n    })\n\n  }\n\n\n  render() {\n    return (\n      <div style={{backgroundColor: (this.state.visual.darkTheme ? 'black' : 'white')}}>\n\n\n        <Sidebar\n          state={this.state}\n          refresh={() => {return this.state}}\n          updateFlowpoints={flowpoints => {this.setState({flowpoints}); this.updateCode()}}\n          updateEnvironment={environment => {this.setState({environment}); this.updateCode()}}\n          updateVisual={visual => this.setState({visual})}\n          updateSettings={settings => {this.setState({settings}); this.updateCode()}}\n          notification={(msg, color) => this.showNotification(msg, color)}\n          getEmptyFlowpointContent={this.getEmptyFlowpointContent}\n          deleteSelected={this.deleteSelected}\n          updateAvailableLayers={this.updateAvailableLayers}\n          diagramRef={this.diagramRef}\n          prepOutputShapes={this.prepOutputShapes}/>\n        \n\n        <Flowspace\n          theme={this.state.visual.theme}\n          variant={this.state.visual.variant}\n          background={this.state.visual.darkTheme ? 'black' : 'white'}\n          selected={this.state.settings.selected}\n          getDiagramRef={ref => {this.diagramRef = ref}}\n          avoidCollisions\n          onClick={() => {\n            \n            // Loading from state\n            var settings = this.state.settings;\n            settings.selected = null;\n\n            // Updating state\n            this.setState({settings})\n\n          }}\n          style={{\n            height: '100vh',\n            width: 'calc(100vw - ' + this.state.visual.drawerWidth * this.state.visual.drawerOpen + ')',\n            marginLeft: this.state.visual.drawerWidth * this.state.visual.drawerOpen,\n            transition: 'margin-left 0.4s ease-out'\n          }}>\n\n          {\n            Object.keys(this.state.flowpoints).map(key => {\n              const point = this.state.flowpoints[key];\n              return (\n                <Flowpoint\n                  key={key}\n                  outputs={point.outputs}\n                  onClick={e => {this.handleClick(key, e)}}\n                  startPosition={point.pos}\n                  snap={{x:10, y:10}}\n                  style={{\n                    width:'auto',\n                    height:'auto',\n                    minWidth:150,\n                    maxHeight: (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? 150 : 50\n                  }}\n                  onDrag={pos => {\n                    var flowpoints = this.state.flowpoints;\n                    var settings = this.state.settings;\n                    flowpoints[key].pos = pos;\n                    settings.lastPos = pos;\n                    this.setState({flowpoints, settings})\n                  }}>\n                  <div style={{height:'auto', paddingLeft:4, paddingRight:4}}>\n                      <div style={{display:'table', width:'100%', height:'50px'}}>\n                        <div style={{display:'table-cell', verticalAlign:'middle', textAlign:'center'}}>\n                          {\n                            this.state.visual.showName ? (point.name !== '' ? point.name : 'p_' + key) : point.base_ref\n                          }\n                        </div>\n                      </div>\n                      {\n                        (this.state.visual.showShape && this.state.environment.library in this.state.environment.autoparams) ? shapeBox(point.output_shape) : null\n                      }\n                  </div>\n                </Flowpoint>\n              )\n            })\n          }\n\n        </Flowspace>\n\n\n        <MainButtons\n          state={this.state}\n          addFlowpoint={this.addFlowpoint}\n          copyCode={this.copyCode}\n          createLink={this.createLink}\n          showHide={this.showHide}\n          showHideHelp={this.showHideHelp}/>\n        \n\n        <Snackbar\n          autoHideDuration={4000}\n          onClose={() => {\n            var notification = this.state.notification;\n            notification.show = false;\n            this.setState({notification})\n          }}\n          onExited={() => {\n            var notification = this.state.notification;\n            if (notification.queue.length > 0) {\n              notification.content = notification.queue.shift();\n              notification.show = true\n            }\n            this.setState({notification})\n          }}\n          anchorOrigin={{vertical:'top', horizontal:'right'}}\n          open={this.state.notification.show}>\n          <SnackbarContent\n            message={this.state.notification.content.msg}\n            style={{backgroundColor:this.state.notification.content.color, boxShadow:'none'}}/>\n        </Snackbar>\n\n\n        <HelpDialog\n          open={this.state.visual.show_help_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_help_dialog = false;\n            this.setState({visual})\n          }}/>\n\n        \n        <LoadDialog\n          error={this.state.visual.load_dialog_error}\n          open={this.state.visual.show_load_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_load_dialog = false;\n            this.setState({visual, settings:{...this.state.settings, modelID:null}})\n          }}\n          onSubmit={pswd => {\n            var environment = this.state.environment;\n            var decrypted = Decrypt(environment.encrypted_model, pswd)\n            if (decrypted) {\n              this.loadDecryptedModel(decrypted)\n            } else {\n              var visual = this.state.visual;\n              visual.load_dialog_error = true;\n              this.setState({visual})\n              this.showNotification('Wrong password', 'error')\n            }\n          }}/>\n\n\n        <SaveDialog\n          error={this.state.visual.save_dialog_error}\n          open={this.state.visual.show_save_dialog}\n          onClose={() => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n          }}\n          onSubmit={pswd => {\n            var visual = this.state.visual;\n            visual.show_save_dialog = false;\n            this.setState({visual})\n            PostToDataBase(Encrypt(Library2String(this.state), (pswd === '' ? 'Hello world' : pswd)), model_id => {\n\n              // Loading from state\n              var settings = this.state.settings;\n              var newUrl = settings.baseUrl + '?p=' + model_id;\n\n              // Setting model id\n              settings.modelID = model_id;\n\n              // Updating state\n              this.setState({settings})\n\n              // Updating code\n              this.updateCode()\n\n              // Changing current url\n              window.history.pushState({}, model_id, newUrl);\n\n              // Copy link to clip-board and display notification\n              copy(newUrl)\n              this.showNotification('Model saved and link copied to clip-board')\n\n            })\n          }}/>\n      \n\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import { getBaseLibrary } from \"./libraries/base_library\";\nimport { getPyTorchLibrary } from \"./libraries/pytorch_library\";\nimport { getTensorFlowLibrary } from \"./libraries/tensorflow_library\";\nimport { getPyTorchAutoparams } from \"./libraries/pytorch_autoparams\";\n\nexport function MainLibrary() {\n  return {\n    flowpoints: {},\n    environment: {\n      getBaseLibrary: getBaseLibrary,\n      baseLib: getBaseLibrary(),\n      library: 'pytorch',\n      libraryFetchers: {\n        pytorch: getPyTorchLibrary,\n        tensorflow: getTensorFlowLibrary\n      },\n      autoparams: {\n        pytorch: getPyTorchAutoparams\n      },\n      availableLayers: [],\n      code: 'Dont panick',\n      encrypted_model: '',\n      notes: '',\n      order: [],\n      dummies: {}\n    },\n    visual: {\n      darkTheme: false,\n      theme: 'indigo',\n      background: 'white',\n      variant: 'outlined',\n      drawerOpen: false,\n      drawerWidth: 360,\n      showShape: false,\n      showName: false,\n      snap: true,\n      show_load_dialog: false,\n      load_dialog_error: false,\n      show_save_dialog: false,\n      show_help_dialog: false\n    },\n    settings: {\n      tab: 'Misc',\n      modelID: null,\n      baseUrl: window.location.href.split('/?')[0],\n      count: 0,\n      selected: null,\n      lastPos: {x:50, y:-40}\n    },\n    notification: {\n      show: false,\n      content: {\n        msg: 'Hello world',\n        color: '#00e676'\n      },\n      queue: []\n    }\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}